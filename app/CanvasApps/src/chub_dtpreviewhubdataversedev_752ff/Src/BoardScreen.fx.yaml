BoardScreen As screen:
    Fill: =RGBA(255, 255, 255, 1)
    OnHidden: |-
        =Concurrent(
            Set(IsDetailsSelected,false),
            Set(var_Update_AutoFM, false),
            Set(var_Display_SmileyFaceContainer, false),
            Set(var_Display_ExecSummaryContainer, false),
            Set(var_btn_Apply_Target_Loading_On, false),
            Set(var_UserViewMyAccess_BS, false),
            Select(btn_Close_ctn_Stakeholders)
        );
    OnVisible: |-
        =Set(
            var_TargetIsYearly_BS,
            var_BoardTypeSelected_Home = 5
        );
        Concurrent(
            Set(
                var_TRCVisible,
                !var_TRCVisible
            ),
            If(
                !var_ShowQuarters_BS,
                Set(
                    var_ShowQuarters_BS,
                    var_BoardTypeSelected_Home = 5
                )
            );
            ,
            Set(
                var_CurrentQuarterMonth_BS,
                Month(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -1,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_PreviousQuaterMonth_BS,
                Month(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -4,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_Past2QuaterMonth_BS,
                Month(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -7,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_Past3QuaterMonth_BS,
                Month(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -10,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_CurrentQuarterYear_BS,
                Year(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -1,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_PreviousQuaterYear_BS,
                Year(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -4,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_Past2QuaterYear_BS,
                Year(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -7,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_Past3QuaterYear_BS,
                Year(
                    DateAdd(
                        LookUp(
                            varLeftNavOptions,
                            ThisRecord.PID = var_BoardSrn_ProductID
                        ).ReviewDate,
                        -10,
                        TimeUnit.Months
                    )
                )
            );
            ,
            Set(
                var_Year_BS,
                If(
                    Month(
                        DateAdd(
                            LookUp(
                                varLeftNavOptions,
                                ThisRecord.PID = var_BoardSrn_ProductID
                            ).ReviewDate,
                            -1,
                            TimeUnit.Months
                        )
                    ) >= 7,
                    Right(
                        Year(
                            DateAdd(
                                LookUp(
                                    varLeftNavOptions,
                                    ThisRecord.PID = var_BoardSrn_ProductID
                                ).ReviewDate,
                                -1,
                                TimeUnit.Months
                            )
                        ),
                        2
                    ) + 1,
                    Right(
                        Year(
                            DateAdd(
                                LookUp(
                                    varLeftNavOptions,
                                    ThisRecord.PID = var_BoardSrn_ProductID
                                ).ReviewDate,
                                -1,
                                TimeUnit.Months
                            )
                        ),
                        2
                    )
                )
            );
            
        );
        Concurrent(
            Set(
                IsDetailsSelected,
                false
            ),
            Set(
                IsMetricCommentSelectedforCopy,
                false
            ),
            Set(
                var_Display_SmileyFaceContainer,
                false
            )
            //Load data to smaller collections for better Board Screen performance.    
        );
        //Add loaded values to the collection that keeps track of loaded info

    Timer_Load_IndivMetricHistory As timer:
        AutoStart: =var_MetricHistoryLoading
        Duration: =300
        OnTimerEnd: |-
            =If(
                IsEmpty(clln_factMetrics_Graphs) || !(var_BoardSrn_Selected_MetricID in clln_factMetrics_Graphs.fm_ProductMetricID),
                Concurrent(
                    Collect(
                        clln_factMetrics_Graphs,
                        RenameColumns(
                            ShowColumns(
                                Filter(
                                    ReviewHub_FactMetrics,
                                    var_BoardSrn_Selected_MetricID = fm_ProductMetricID//fm_BoardTypeID = var_BoardTypeSelected_Home && fm_ProductID = var_BoardSrn_ProductID && 
                                ),
                                "chub_fm_productmetricid",
                                "craf2_fm_isnotapplicable",
                                "craf2_fm_reviewlockdate",
                                "craf2_fm_valuenumber",
                                "craf2_fm_valueyesno",
                                "craf2_fm_valuetext",
                                "craf2_fm_targetnumber",
                                "craf2_fm_targetyesno",
                                "craf2_fm_targettext",
                                "craf2_fm_comment",
                                "craf2_fm_valuedate"
                            ),
                            "craf2_fm_isnotapplicable",
                            "fm_IsNotApplicable",
                            "craf2_fm_reviewlockdate",
                            "fm_ReviewLockDate",
                            "craf2_fm_valuenumber",
                            "fm_ValueNumber",
                            "chub_fm_productmetricid",
                            "fm_ProductMetricID",
                            "craf2_fm_valueyesno",
                            "fm_ValueYesNo",
                            "craf2_fm_valuetext",
                            "fm_ValueText",
                            "craf2_fm_targetnumber",
                            "fm_TargetNumber",
                            "craf2_fm_targetyesno",
                            "fm_TargetYesNo",
                            "craf2_fm_targettext",
                            "fm_TargetText",
                            "craf2_fm_comment",
                            "fm_Comment",
                            "craf2_fm_valuedate",
                            "fm_ValueDate"
                        )
                    ),
            //Get "ContainerMetricHistory" data ready, only the latest data of each review cycle.
                    ClearCollect(
                        clln_IndivMetricHistory,
                        AddColumns(
                            GroupBy(
                                ShowColumns(
                                    AddColumns(
                                        SortByColumns(
                                            RenameColumns(
                                                ShowColumns(
                                                    Filter(
                                                        ReviewHub_FactMetrics,
                                                        var_BoardSrn_Selected_MetricID = fm_ProductMetricID//fm_BoardTypeID = var_BoardTypeSelected_Home && fm_ProductID = var_BoardSrn_ProductID && 
                                                    ),
                                                    "chub_fm_productmetricid",
                                                    "craf2_fm_isnotapplicable",
                                                    "craf2_fm_reviewlockdate",
                                                    "craf2_fm_valuenumber",
                                                    "craf2_fm_valueyesno",
                                                    "craf2_fm_valuetext",
                                                    "craf2_fm_targetnumber",
                                                    "craf2_fm_targetyesno",
                                                    "craf2_fm_targettext",
                                                    "craf2_fm_comment",
                                                    "craf2_fm_valuedate"
                                                ),
                                                "craf2_fm_isnotapplicable",
                                                "fm_IsNotApplicable",
                                                "craf2_fm_reviewlockdate",
                                                "fm_ReviewLockDate",
                                                "craf2_fm_valuenumber",
                                                "fm_ValueNumber",
                                                "chub_fm_productmetricid",
                                                "fm_ProductMetricID",
                                                "craf2_fm_valueyesno",
                                                "fm_ValueYesNo",
                                                "craf2_fm_valuetext",
                                                "fm_ValueText",
                                                "craf2_fm_targetnumber",
                                                "fm_TargetNumber",
                                                "craf2_fm_targetyesno",
                                                "fm_TargetYesNo",
                                                "craf2_fm_targettext",
                                                "fm_TargetText",
                                                "craf2_fm_comment",
                                                "fm_Comment",
                                                "craf2_fm_valuedate",
                                                "fm_ValueDate"
                                            ),
                                            "fm_ReviewLockDate",
                                            SortOrder.Ascending
                                        ),
                                        "ReviewMonth",
                                        Month(fm_ReviewLockDate),
                                        "ReviewYear",
                                        Year(fm_ReviewLockDate),
                                //Trend Chart
                                        "MetricTarget",
                                        Switch(
                                            var_BoardSrn_Selected_MetricValueType,
                                            "Number",
                                            If(
                                                IsBlank(fm_TargetNumber) || fm_TargetNumber = -1,
                                                Blank(),
                                                If(
                                                    fm_TargetNumber < 1.0,
                                                    Text(
                                                        Round(
                                                            fm_TargetNumber,
                                                            4
                                                        )
                                                    ),
                                                    If(
                                                        EndsWith(
                                                            Text(
                                                                fm_TargetNumber,
                                                                "[$-en-US]###,###,###.##"
                                                            ),
                                                            "."
                                                        ),
                                                        Text(
                                                            fm_TargetNumber,
                                                            "[$-en-US]###,###,###"
                                                        ),
                                                        Text(
                                                            fm_TargetNumber,
                                                            "[$-en-US]###,###,###.00"
                                                        )
                                                    )
                                                )
                                            ),
                                            "Percentage",
                                            If(
                                                fm_TargetNumber = -1,
                                                Blank(),
                                                fm_TargetNumber
                                            ),
                                            "Boolean",
                                            Switch(
                                                fm_TargetYesNo,
                                                1,
                                                "Yes",
                                                0,
                                                "No"
                                            ),
                                            "Text",
                                            If(
                                                Trim(fm_TargetText) = "",
                                                Blank(),
                                                fm_TargetText
                                            )
                                        ),
                                        "MetricValue",
                                        If(
                                            Text(ThisRecord.fm_IsNotApplicable) = "Yes",
                                            "N/A",
                                            Switch(
                                                var_BoardSrn_Selected_MetricValueType,
                                                "Boolean",
                                                Switch(
                                                    fm_ValueYesNo,
                                                    1,
                                                    "Yes",
                                                    0,
                                                    "No"
                                                ),
                                                "Number",
                                                If(
                                                    IsBlank(fm_ValueNumber),
                                                    Blank(),
                                                    If(
                                                        fm_ValueNumber < 1.0,
                                                        Text(
                                                            Round(
                                                                fm_ValueNumber,
                                                                4
                                                            )
                                                        ),
                                                        If(
                                                            EndsWith(
                                                                Text(
                                                                    fm_ValueNumber,
                                                                    "[$-en-US]###,###,###.##"
                                                                ),
                                                                "."
                                                            ),
                                                            Text(
                                                                fm_ValueNumber,
                                                                "[$-en-US]###,###,###"
                                                            ),
                                                            Text(
                                                                fm_ValueNumber,
                                                                "[$-en-US]###,###,###.00"
                                                            )
                                                        )
                                                    )
                                                ),
                                                "Text",
                                                If(
                                                    Trim(fm_ValueText) = "",
                                                    Blank(),
                                                    fm_ValueText
                                                ),
                                                "Percentage",
                                                fm_ValueNumber
                                            )
                                        )
                                    ),
                                    "ReviewMonth",
                                    "ReviewYear",
                                    "MetricTarget",
                                    "MetricValue",
                                    "fm_Comment",
                                    "fm_IsNotApplicable",
                                    "fm_ValueDate"
                                ),
                                "ReviewYear",
                                "ReviewMonth",
                                "GroupByMonthYear"
                            ),
                            "MetricTarget",
                            Last(GroupByMonthYear).MetricTarget,
                            "MetricValue",
                            Last(GroupByMonthYear).MetricValue,
                            "fm_Comment",
                            Last(GroupByMonthYear).fm_Comment,
                            "IsNotApplicable",
                            Text(Last(GroupByMonthYear).fm_IsNotApplicable),
                            "fm_ValueDate",
                            Last(GroupByMonthYear).fm_ValueDate,
                            "ReviewMonthStart",
                            DateValue(ThisRecord.ReviewMonth & "/01/" & ThisRecord.ReviewYear)
                        )
                    );
                ),
                ClearCollect(
                    clln_IndivMetricHistory,
                    AddColumns(
                        GroupBy(
                            ShowColumns(
                                AddColumns(
                                    SortByColumns(
                                        Filter(
                                            clln_factMetrics_Graphs,
                                            fm_ProductMetricID = var_BoardSrn_Selected_MetricID
                                        ),
                                        "fm_ReviewLockDate",
                                        SortOrder.Ascending
                                    ),
                                    "ReviewMonth",
                                    Month(fm_ReviewLockDate),
                                    "ReviewYear",
                                    Year(fm_ReviewLockDate),
                                //Trend Chart
                                    "MetricTarget",
                                    Switch(
                                        var_BoardSrn_Selected_MetricValueType,
                                        "Number",
                                        If(
                                            IsBlank(fm_TargetNumber) || fm_TargetNumber = -1,
                                            Blank(),
                                            If(
                                                fm_TargetNumber < 1.0,
                                                Text(
                                                    Round(
                                                        fm_TargetNumber,
                                                        4
                                                    )
                                                ),
                                                If(
                                                    EndsWith(
                                                        Text(
                                                            fm_TargetNumber,
                                                            "[$-en-US]###,###,###.##"
                                                        ),
                                                        "."
                                                    ),
                                                    Text(
                                                        fm_TargetNumber,
                                                        "[$-en-US]###,###,###"
                                                    ),
                                                    Text(
                                                        fm_TargetNumber,
                                                        "[$-en-US]###,###,###.00"
                                                    )
                                                )
                                            )
                                        ),
                                        "Percentage",
                                        If(
                                            fm_TargetNumber = -1,
                                            Blank(),
                                            fm_TargetNumber
                                        ),
                                        "Boolean",
                                        Switch(
                                            fm_TargetYesNo,
                                            1,
                                            "Yes",
                                            0,
                                            "No"
                                        ),
                                        "Text",
                                        If(
                                            Trim(fm_TargetText) = "",
                                            Blank(),
                                            fm_TargetText
                                        )
                                    ),
                                    "MetricValue",
                                    If(
                                        Text(ThisRecord.fm_IsNotApplicable) = "Yes",
                                        "N/A",
                                        Switch(
                                            var_BoardSrn_Selected_MetricValueType,
                                            "Boolean",
                                            Switch(
                                                fm_ValueYesNo,
                                                1,
                                                "Yes",
                                                0,
                                                "No"
                                            ),
                                            "Number",
                                            If(
                                                IsBlank(fm_ValueNumber),
                                                Blank(),
                                                If(
                                                    fm_ValueNumber < 1.0,
                                                    Text(
                                                        Round(
                                                            fm_ValueNumber,
                                                            4
                                                        )
                                                    ),
                                                    If(
                                                        EndsWith(
                                                            Text(
                                                                fm_ValueNumber,
                                                                "[$-en-US]###,###,###.##"
                                                            ),
                                                            "."
                                                        ),
                                                        Text(
                                                            fm_ValueNumber,
                                                            "[$-en-US]###,###,###"
                                                        ),
                                                        Text(
                                                            fm_ValueNumber,
                                                            "[$-en-US]###,###,###.00"
                                                        )
                                                    )
                                                )
                                            ),
                                            "Text",
                                            If(
                                                Trim(fm_ValueText) = "",
                                                Blank(),
                                                fm_ValueText
                                            ),
                                            "Percentage",
                                            fm_ValueNumber
                                        )
                                    )
                                ),
                                "ReviewMonth",
                                "ReviewYear",
                                "MetricTarget",
                                "MetricValue",
                                "fm_Comment",
                                "fm_IsNotApplicable",
                                "fm_ValueDate"
                            ),
                            "ReviewYear",
                            "ReviewMonth",
                            "GroupByMonthYear"
                        ),
                        "MetricTarget",
                        Last(GroupByMonthYear).MetricTarget,
                        "MetricValue",
                        Last(GroupByMonthYear).MetricValue,
                        "fm_Comment",
                        Last(GroupByMonthYear).fm_Comment,
                        "IsNotApplicable",
                        Text(Last(GroupByMonthYear).fm_IsNotApplicable),
                        "fm_ValueDate",
                        Last(GroupByMonthYear).fm_ValueDate,
                        "ReviewMonthStart",
                        DateValue(ThisRecord.ReviewMonth & "/01/" & ThisRecord.ReviewYear)
                    )
                );
                
            );
            Select(bttn_LineChart_Variables);
            Set(
                var_MetricHistoryLoading,
                false
            );
        Visible: =false
        X: =60
        Y: =60
        ZIndex: =1

    Timer_IfGalleryLoaded As timer:
        AutoPause: =!IsBlankOrError(var_LastGalleryText)
        AutoStart: =true
        Duration: =500
        OnTimerEnd: |-
            =Set(var_LastGalleryText, Last(glry_BoardSrn_Subgroup.AllItems).mtd_MetricTypeName);
            
            //Next part is to trigger health rating generation. Task #14246722.
            /*
            If(
                !ctn_IfGalleryLoaded.Visible,
            ClearCollect(
                    clln_MetricTypeDetail_BS, 
                    ShowColumns(
                        AddColumns(
                            AddColumns(
                                Filter(
                                    ReviewHub_MetricTypeDetails,
                                    ThisRecord.mtd_BoardType.BoardTypeID = var_BoardTypeSelected_Home
                                        && ThisRecord.MetricTypeDetailTemplate.TemplateID = var_BoardSrn_FMB_TemplateID
                                        && (dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate < ThisRecord.MetricType.MetricTypeDeprecatedDate || IsBlank(ThisRecord.MetricType.MetricTypeDeprecatedDate))
                                        && ThisRecord.MetricType.MetricTypeEffectiveDate < dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                                ),
                                "TemplateRec", ThisRecord.MetricTypeDetailTemplate
                                // "MetricTemplateRec", LookUp(ReviewHub_MetricTemplates, ReviewHub_MetricTypeDetails[@MetricTypeDetailTemplate].TemplateID=ThisRecord.TemplateID)
                            ),
                            "mtd_TemplateID", TemplateRec.TemplateID, 
                            "mtd_TemplateName", TemplateRec.TemplateName,
                            "mtd_MetricTypeId", ThisRecord.MetricType.MetricTypeID,
                            "mtd_MetricTypeName", ThisRecord.MetricType.MetricTypeName,
                            "mtd_UpdateMethod", Text(ThisRecord.MetricTypeDetailUpdateMethod),
                            "mtd_MetricDeprecatedDate", ThisRecord.MetricType.MetricTypeDeprecatedDate,
                            "mtd_MetricCreatedDate", ThisRecord.MetricType.MetricTypeEffectiveDate,
                            "mtd_MetricShortName", ThisRecord.MetricType.MetricTypeShortName,
                            "mtd_BoardTypeID", ThisRecord.mtd_BoardType.BoardTypeID, //MetricTemplateRec.TemplateBoardType.BoardTypeID,
                            "mtd_BoardTypeName", ThisRecord.mtd_BoardType.BoardTypeName, //MetricTemplateRec.TemplateBoardType.BoardTypeName,
                            "mtd_MetricDisplayOrder", ThisRecord.mtd_DisplayOrder,
                            "mtd_MetricStage", Text(ThisRecord.MetricType.MetricTypeStage),
                            "mtd_MetricTypeSubgroup", ThisRecord.mtd_Objective.mto_ObjectiveName, //Text(ThisRecord.MetricType.MetricTypeSubgroup),
                            "mtd_MetricValueType", Text(ThisRecord.MetricType.ValueType),
                            "mtd_IsTrendDown", ThisRecord.MetricType.MetricTypeIsTrendDown,
                            "mtd_MetricTypeEnumerateOptions", ThisRecord.MetricType.MetricTypeEnumerateOptions,
                            "mtd_MetricTypeSource", ThisRecord.MetricType.MetricTypeSource,
                            "mtd_MetricTypeHealthWeight", ThisRecord.MetricType.MetricTypeHealthWeight,
                            "mtd_MetricPowerBIUrl", ThisRecord.MetricTypeDetailPowerBIUrl,
                            "mtd_MetricTypeDescription", ThisRecord.MetricType.MetricTypeDescription,
                            "mtd_MetricTypeQuaterlyCalcMethod", If(IsBlank(ThisRecord.MetricTypeQuaterlyCalcMethod), "Average", Text(ThisRecord.MetricTypeQuaterlyCalcMethod))
                        ),
                        "mtd_TemplateID", "mtd_TemplateName", "mtd_BoardTypeID", "mtd_BoardTypeName",
                        "mtd_MetricTypeId", "mtd_MetricTypeName","mtd_MetricShortName","mtd_MetricDeprecatedDate", "mtd_MetricCreatedDate",
                        "mtd_UpdateMethod", "mtd_MetricPowerBIUrl", "mtd_MetricDisplayOrder", "mtd_MetricStage", "mtd_MetricTypeSubgroup",
                        "mtd_MetricValueType", "mtd_IsTrendDown", "mtd_MetricTypeEnumerateOptions", "mtd_MetricTypeSource", "mtd_MetricTypeHealthWeight", "mtd_MetricTypeDescription", "mtd_MetricTypeQuaterlyCalcMethod"
                    )
                ));
                */
            If(
                !ctn_IfGalleryLoaded.Visible  //If loading animation GIF is invisible, and this user is either a Review Owner or a Stakeholder, and this scorecard should be not rated yet.
                    && (IsReviewOwner || IsStakeholder)
                    && bttn_HealthRating.Text = "Not Rated",
            
                //The following is copied from the component, bttn_HealthRating.OnSelect.
                ClearCollect(
                    clln_MetricWeight,
                    {
                        MetricID: Blank(),
                        EarnedWeight: Blank(),
                        DefaultWeight: Blank()
                    }
                );
                ForAll(
                    glry_BoardSrn_Group.AllItems.glry_BoardSrn_Subgroup,
                    ForAll(
                        ThisRecord.glry_BoardSrn_Subgroup.AllItems.MetricWgt,
                        Collect(
                            clln_MetricWeight,//clln_MetricWeight,
                            {
                                MetricID: First(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value})).Result,
                                EarnedWeight: Last(FirstN(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value}), 2)).Result,
                                DefaultWeight: Last(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value})).Result
                            }
                        )
                    )
                );
                //The above is replicating the behavior of bttn_HealthRating.OnSelect.
                If(
                    CountRows(Filter(clln_MetricWeight, !(ThisRecord.EarnedWeight in ["NA", "0", Blank()]))) = 0,
                    false,  //Do nothing if no metric values exist.
                    Select(bttn_BoardSrn_HScore_Refresh)  //Refresh Health Score in backend.
                ),
                
                false //If criterion not matched, do nothing.
            )
        Repeat: =true
        Visible: =false
        X: =1196
        Y: =75
        ZIndex: =2

    Timer_DelayRefreshHScore As timer:
        BorderThickness: =0
        Duration: =3000
        Fill: =LEFTNAVBKGDCOLOR
        Height: =35
        OnSelect: =
        OnTimerEnd: =Set(var_Timer_DelayRefreshHScore, false); Select(bttn_BoardSrn_HScore_Refresh);
        Start: =var_Timer_DelayRefreshHScore
        Visible: =false
        Width: =117
        X: =1162
        Y: =40
        ZIndex: =3

    Timer_DelayRefreshFactMetric As timer:
        AutoStart: =var_Timer_DelayRefreshFactMetric
        BorderThickness: =0
        Duration: =1500
        Fill: =LEFTNAVBKGDCOLOR
        Height: =35
        OnSelect: =
        OnTimerEnd: |+
            =//Update the related record in cached collections.
            
            If(
                !IsBlank(var_cllnFactMetricsID_ToUpdate),
                Set(var_cllnFactMetricsRecord_ToUpdate, LookUp(ReviewHub_FactMetrics, craf2_factmetricid = var_cllnFactMetricsID_ToUpdate));
                Patch(
                        clln_factMetrics,
                        LookUp(clln_factMetrics, fm_ID=var_cllnFactMetricsID_ToUpdate),
                        {
                            //Modified: Now(),
                            fm_ValueNumber: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuenumber,
                            fm_ValueYesNo: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valueyesno,
                            fm_ValueText: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuetext,
                            fm_TargetNumber: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_targetnumber,
                            fm_TargetText: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_targettext,
                            fm_TargetYesNo: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_targetyesno,
                            fm_YellowTargetStart: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_yellowtargetstart,
                            fm_GreenTargetStart: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_greentargetstart,
                            fm_Comment: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_comment,
                            fm_ValueDate: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuedate,
                            fm_ValueMonth: Month(var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuedate),
                            fm_ValueYear: Year(var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuedate),
                            fm_IsNotApplicable: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_isnotapplicable
                        }
                    );
                
                /*Concurrent(
                    Patch(
                        clln_factMetrics_BS,
                        LookUp(clln_factMetrics_BS, fm_ID=var_cllnFactMetricsID_ToUpdate), 
                        {
                            //Modified: Now(),
                            fm_ValueNumber: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuenumber,
                            fm_ValueYesNo: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valueyesno,
                            fm_ValueText: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuetext,
                            fm_TargetNumber: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_targetnumber,
                            fm_TargetText: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_targettext,
                            fm_TargetYesNo: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_targetyesno,
                            fm_YellowTargetStart: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_yellowtargetstart,
                            fm_GreenTargetStart: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_greentargetstart,
                            fm_Comment: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_comment,
                            fm_ValueDate: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuedate,
                            fm_ValueMonth: Month(var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuedate),
                            fm_ValueYear: Year(var_cllnFactMetricsRecord_ToUpdate.craf2_fm_valuedate),
                            fm_IsNotApplicable: var_cllnFactMetricsRecord_ToUpdate.craf2_fm_isnotapplicable
                        }
                    ),
                    
                )
                */
            );
            
            Concurrent(
                Set(var_cllnFactMetricsID_ToUpdate, Blank()),
                Set(var_Timer_DelayRefreshFactMetric, false),
                Set(var_LastGalleryText, Last(glry_BoardSrn_Subgroup.AllItems).mtd_MetricTypeName),
                Set(var_ctn_IfGalleryLoaded_ForceOn, false)
            )
            
        Start: =var_Timer_DelayRefreshFactMetric
        Visible: =false
        Width: =117
        X: =1045
        ZIndex: =4

    Timer_Capture_factMetricBoard_ID As timer:
        AutoStart: =true
        Duration: =300
        OnSelect: =
        OnTimerEnd: |
            =If(
                124 in clln_AppPerf_120.RunID,
                Patch(
                    clln_AppPerf_120,
                    LookUp(
                        clln_AppPerf_120,
                        ThisRecord.RunID = 124
                    ),
                    {
                        Description: "BoardScreen.LoadBoardTypeData - Loading clln_ProductMetrics & clln_FactMetrics collection",
                        StartTime: Now(),
                        EndTime: Blank()
                    }
                ),
                Collect(
                    clln_AppPerf_120,
                    {
                        RunID: 124,
                        Description: "BoardScreen.LoadBoardTypeData - Loading clln_ProductMetrics & clln_FactMetrics collection",
                        StartTime: Now(),
                        EndTime: Blank()
                    }
                );
                
            );
            //Define all important variables in this timer. Otherwise, users will experience significant interactive delays while clicking on gallery or drop-down list.
            //Capture if FactMetricBoard ID has changed.
            
            Set(
                var_BoardTypeSelected_Home_Temp,
                LookUp(
                    varLeftNavOptions,
                    ID = varSelectedBoardId
                ).BoardTypeID
            );
            Set(
                var_BoardSrn_ProductID_Temp,
                LookUp(
                    varLeftNavOptions,
                    ID = varSelectedBoardId
                ).PID
            );
            Set(var_ChangedBS, var_BoardTypeSelected_Home <> var_BoardTypeSelected_Home_Temp || var_BoardSrn_ProductID <> var_BoardSrn_ProductID_Temp );
            Set(
                var_BoardTypeSelected_Home,
                var_BoardTypeSelected_Home_Temp
            );
            Set(
                var_BoardSrn_ProductID,
                var_BoardSrn_ProductID_Temp
            );
            Concurrent(
                Set(
                    var_BoardSrn_FMB_TemplateID,
                    LookUp(
                        varLeftNavOptions,
                        ID = varSelectedBoardId
                    ).TemplateID
                ),
                ClearCollect(
                    clln_Last3Months,
                    Filter(
                        AddColumns(
                            ForAll(
                                Sequence(
                                    3,
                                    0,
                                    -1
                                ),
                                With(
                                    {
                                        currentDate: DateAdd(
                                            dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate,
                                            Value,
                                            TimeUnit.Months
                                        )
                                    },
                                    Date(
                                        Year(currentDate),
                                        Month(currentDate) + 1,
                                        0
                                    )
                                )
                            ),
                            "BoardTypeID",
                            var_BoardTypeSelected_Home,
                            "ProductID",
                            var_BoardSrn_ProductID,
                            "ReviewLockDate",
                            ThisRecord.Value
                        ),
                        !(ThisRecord.ReviewLockDate in clln_LoadedBoardTypes.ReviewLockDate && ThisRecord.ProductID in clln_LoadedBoardTypes.ProductID && ThisRecord.BoardTypeID in clln_LoadedBoardTypes.BoardTypeID)
                    )
                );
                
            );
            //Actions when users go to a different scorecard screen.
            If(
                IsBlankOrError(var_BoardSrn_FMB_ID) || var_BoardSrn_FMB_ID <>//If user goes to a different scorecard screen.
             LookUp(
                    clln_factMetricBoard,
                    fmb_ProductID = var_BoardSrn_ProductID && fmb_ReviewLockDate = dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate && fmb_MetricBoardTypeID = var_BoardTypeSelected_Home
                ).fmb_ID || var_ShowQuarters_BS,
                Concurrent(
                    If(
                        IsEmpty(clln_MetricTypeDetail_BS) || !(var_BoardTypeSelected_Home in clln_MetricTypeDetail_BS.mtd_BoardTypeID && var_BoardSrn_FMB_TemplateID in clln_MetricTypeDetail_BS.mtd_TemplateID),
                        ClearCollect(
                            clln_MetricTypeDetail_BS,
                            Filter(
                                clln_MetricTypeDetail,
                                mtd_BoardTypeID = var_BoardTypeSelected_Home && mtd_TemplateID = var_BoardSrn_FMB_TemplateID && (dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate < mtd_MetricDeprecatedDate || IsBlank(mtd_MetricDeprecatedDate)) && mtd_MetricCreatedDate < dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                            )
                        )
                    ),
            
                    If(
                        IsEmpty(clln_LoadedBoardTypes) || !(var_BoardSrn_ProductID in clln_LoadedBoardTypes.ProductID && var_BoardTypeSelected_Home in clln_LoadedBoardTypes.BoardTypeID),
                        Collect(
                            clln_ProductMetrics,
                            RenameColumns(
                                ShowColumns(
                                    AddColumns(
                                        Filter(
                                            ReviewHub_ProductMetrics,
                                            pm_BoardTypeID = var_BoardTypeSelected_Home && pm_ProductID = var_BoardSrn_ProductID//var_BoardTypeSelected_Home
                                        ),
                                        "pm_ID",
                                        ThisRecord.ProductMetricID,
                                        "pm_MetricTypeName",
                                        ThisRecord.pm_MetricType.MetricTypeName,
                                        "pm_MetricTypeShortName",
                                        ThisRecord.pm_MetricType.MetricTypeShortName,
                                        "pm_MetricValueType",
                                        Text(ThisRecord.pm_MetricType.ValueType),
                                        "pm_ProductName",
                                        ThisRecord.pm_Product.ProductName,
                                        "IsMetricActive",
                                        If(
                                            Text(ThisRecord.pm_IsMetricActive) = "Yes",
                                            true,
                                            false
                                        )
                                    ),
                                    "pm_ID",
                                    "pm_MetricTypeName",
                                    "pm_MetricTypeShortName",
                                    "pm_MetricValueType",
                                    "pm_ProductName",
                                    "IsMetricActive",
                                    "craf2_pm_latesttargetnumber",
                                    "craf2_pm_latesttargetyesno",
                                    "craf2_pm_latesttargettext",
                                    "craf2_pm_latestgreentargetstart",
                                    "craf2_pm_latestyellowtargetstart",
                                    "craf2_pm_boardtypeid",
                                    "chub_pm_metrictypeid",
                                    "chub_pm_productid"
                                ),
                                "chub_pm_productid",
                                "pm_ProductID",
                                "chub_pm_metrictypeid",
                                "pm_MetricTypeID",
                                "IsMetricActive",
                                "pm_IsMetricActive",
                                "craf2_pm_latesttargetnumber",
                                "pm_LatestTargetNumber",
                                "craf2_pm_latesttargetyesno",
                                "pm_LatestTargetYesNo",
                                "craf2_pm_latesttargettext",
                                "pm_LatestTargetText",
                                "craf2_pm_latestgreentargetstart",
                                "pm_LatestGreenTargetStart",
                                "craf2_pm_latestyellowtargetstart",
                                "pm_LatestYellowTargetStart",
                                "craf2_pm_boardtypeid",
                                "pm_BoardTypeID"
                            )
                        );
                    ),
                    If(
                        CountRows(clln_Last3Months) > 0,
                        Collect(
                            clln_factMetrics,
                            RenameColumns(
                                ShowColumns(
                                    AddColumns(
                                        Filter(
                                            ReviewHub_FactMetrics,
                                            fm_BoardTypeID = var_BoardTypeSelected_Home && fm_ProductID = var_BoardSrn_ProductID && fm_ReviewLockDate in clln_Last3Months.ReviewLockDate
                                        ),
                                        "fm_ValueMonth",
                                        Month(fm_ValueDate),
                                        "fm_ValueYear",
                                        Year(fm_ValueDate),
                                        "fm_MetricType",
                                        fm_ProductMetric
                                    ),
                                    "craf2_factmetrictitle",
                                    "craf2_factmetricid",
                                    "chub_fm_productmetricid",
                                    "craf2_fm_productid",
                                    "craf2_fm_valuenumber",
                                    "craf2_fm_valueyesno",
                                    "craf2_fm_valuetext",
                                    "craf2_fm_targetnumber",
                                    "craf2_fm_targetyesno",
                                    "craf2_fm_targettext",
                                    "craf2_fm_greentargetstart",
                                    "craf2_fm_yellowtargetstart",
                                    "craf2_fm_comment",
                                    "craf2_fm_valuedate",
                                    "fm_ValueMonth",
                                    "fm_ValueYear",
                                    "craf2_fm_isnotapplicable",
                                    "craf2_fm_reviewlockdate",
                                    "chub_fm_boardtypeid",
                                    "craf2_variancetotarget",
                                    "craf2_mom",
                                    "craf2_yoy",
                                    "fm_MetricType"
                                ),
                                "chub_fm_productmetricid",
                                "fm_ProductMetricID",
                                "craf2_factmetrictitle",
                                "fm_Title",
                                "craf2_factmetricid",
                                "fm_ID",
                                "craf2_fm_productid",
                                "fm_ProductID",
                                "craf2_fm_valuenumber",
                                "fm_ValueNumber",
                                "craf2_fm_valueyesno",
                                "fm_ValueYesNo",
                                "craf2_fm_valuetext",
                                "fm_ValueText",
                                "craf2_fm_targetnumber",
                                "fm_TargetNumber",
                                "craf2_fm_targetyesno",
                                "fm_TargetYesNo",
                                "craf2_fm_targettext",
                                "fm_TargetText",
                                "craf2_fm_greentargetstart",
                                "fm_GreenTargetStart",
                                "craf2_fm_yellowtargetstart",
                                "fm_YellowTargetStart",
                                "craf2_fm_comment",
                                "fm_Comment",
                                "craf2_fm_valuedate",
                                "fm_ValueDate",
                                "craf2_fm_isnotapplicable",
                                "fm_IsNotApplicable",
                                "craf2_fm_reviewlockdate",
                                "fm_ReviewLockDate",
                                "chub_fm_boardtypeid",
                                "fm_BoardTypeID",
                                "craf2_variancetotarget",
                                "fm_VarianceToTarget",
                                "craf2_mom",
                                "fm_MoM",
                                "craf2_yoy",
                                "fm_YoY"
                            )
                        );
                    ),
                    If(
                        var_ShowQuarters_BS = true && (IsEmpty(clln_FactMetric_Quarterly) || !(var_BoardSrn_ProductID in clln_FactMetric_Quarterly.fm_ProductID && var_BoardTypeSelected_Home in clln_FactMetric_Quarterly.fm_BoardTypeID)),
                        Collect(
                            clln_FactMetric_Quarterly,
                            SortByColumns(
                                DropColumns(
                                    AddColumns(
                                        RenameColumns(
                                            GroupBy(
                                                AddColumns(
                                                    ShowColumns(
                                                        Filter(
                                                            ReviewHub_FactMetrics,
                                                            fm_BoardTypeID = var_BoardTypeSelected_Home && fm_ProductID = var_BoardSrn_ProductID
                                                        ),
                                                        "chub_fm_productmetricid",
                                                        "chub_fm_boardtypeid",
                                                        "chub_fm_metrictypeid",
                                                        "craf2_fm_valuenumber",
                                                        "craf2_fm_reviewlockdate",
                                                        "craf2_fm_productid"
                                                    ),
                                                    "Quarter",
                                                    With(
                                                        {
                                                            Q: RoundUp(
                                                                (If(
                                                                    Month(DateAdd(craf2_fm_reviewlockdate, -1, TimeUnit.Months)) >= 7,
                                                                    Month(DateAdd(craf2_fm_reviewlockdate, -1, TimeUnit.Months)) - 6,
                                                                    Month(DateAdd(craf2_fm_reviewlockdate, -1, TimeUnit.Months)) + 6
                                                                ) / 3),
                                                                0
                                                            )
                                                        },
                                                        "FY" & If(
                                                            Q = 1 || Q = 2,
                                                            Year(DateAdd(craf2_fm_reviewlockdate, -1, TimeUnit.Months)) + 1,
                                                            Year(DateAdd(craf2_fm_reviewlockdate, -1, TimeUnit.Months))
                                                        ) & "Q" & Q
                                                    )
                                                ),
                                                "chub_fm_productmetricid",
                                                "chub_fm_boardtypeid",
                                                "chub_fm_metrictypeid",
                                                "craf2_fm_productid",
                                                "Quarter",
                                                "factMetrics"
                                            ),
                                            "chub_fm_boardtypeid",
                                            "fm_BoardTypeID",
                                            "chub_fm_productmetricid",
                                            "fm_ProductMetricID",
                                            "chub_fm_metrictypeid",
                                            "fm_MetricTypeID",
                                            "craf2_fm_productid",
                                            "fm_ProductID"
                                        ),
                                        "Quarter Result",
                                        With(
                                            {
                                                metricType: LookUp(
                                                    clln_MetricTypeDetail,
                                                    mtd_MetricTypeId = fm_MetricTypeID
                                                )
                                            },
                                            If(
                                                metricType.mtd_MetricValueType = "Percentage" || metricType.mtd_MetricValueType = "Number",
                                                If(
                                                    metricType.mtd_MetricTypeQuaterlyCalcMethod = "Average" || IsBlank(metricType.mtd_MetricTypeQuaterlyCalcMethod),
                                                    Average(
                                                        factMetrics,
                                                        craf2_fm_valuenumber
                                                    ),
                                                    If(
                                                        metricType.mtd_MetricTypeQuaterlyCalcMethod = "Sum",
                                                        Sum(
                                                            factMetrics,
                                                            craf2_fm_valuenumber
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                    "factMetrics"
                                ),
                                "fm_ProductMetricID"
                            )
                        );
                    ),
                    If(
                        IsEmpty(clln_LoadedBoardTypes) || !(var_BoardSrn_ProductID in clln_LoadedBoardTypes.ProductID && var_BoardTypeSelected_Home in clln_LoadedBoardTypes.BoardTypeID),
                        Collect(
                            clln_factMetrics_Graphs_BS,
                            RenameColumns(
                                ShowColumns(
                                    Filter(
                                        ReviewHub_FactMetrics,
                                        fm_BoardTypeID = var_BoardTypeSelected_Home && fm_ProductID = var_BoardSrn_ProductID && fm_IsNotApplicable = 'fm_IsNotApplicable (ReviewHub_FactMetrics)'.No
                                    ),
                                    "chub_fm_productmetricid",
                                    "craf2_fm_reviewlockdate",
                                    "craf2_fm_valuenumber"
                                ),
                                "craf2_fm_reviewlockdate",
                                "fm_ReviewLockDate",
                                "craf2_fm_valuenumber",
                                "fm_ValueNumber",
                                "chub_fm_productmetricid",
                                "fm_ProductMetricID"
                            )
                        );
                    ),
                    //Use this variable, var_BoardSrn_FMB_ID, to filter data for all galleries in this screen!!
                    Set(
                        var_BoardSrn_FMB_ID,
                        LookUp(
                            clln_factMetricBoard,
                            ThisRecord.fmb_ProductID = var_BoardSrn_ProductID && ThisRecord.fmb_ReviewLockDate = dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate && ThisRecord.fmb_MetricBoardTypeID = var_BoardTypeSelected_Home
                        ).fmb_ID
                    ),
                    Set(
                        var_Display_SmileyFaceContainer,
                        false
                    ),
                    Select(Close_BS_MetricContainer),
                    Select(btn_Close_ctn_Stakeholders),
                    Select(btn_Close_ctn_ExecSummary_BS),
                    //Capture if this user is a stakeholder of this product and boardtype.
                    If(var_ChangedBS,
                    If(
                        IsMatch(
                            LookUp(
                                ReviewHub_Stakeholders,
                                ThisRecord.craf2_Product.craf2_productid = var_BoardSrn_ProductID && ThisRecord.craf2_BoardType.craf2_boardtypeid = var_BoardTypeSelected_Home
                            ).ProductStakeholderEmails,
                            User().Email,
                            MatchOptions.Contains & MatchOptions.IgnoreCase
                        ),
                        Set(
                            IsStakeholder,
                            true
                        ),
                        Set(
                            IsStakeholder,
                            false
                        )
                    )),
                    //Only the latest reivew owner is treated as the valid Review Owner. Review owner can change over time.
                    If(var_ChangedBS,
                    If(
                        IsMatch(
                            First(
                                Sort(
                                    Filter(
                                        clln_factMetricBoard,
                                        ThisRecord.fmb_ProductID = var_BoardSrn_ProductID && ThisRecord.fmb_MetricBoardTypeID = var_BoardTypeSelected_Home
                                    ),
                                    fmb_ReviewLockDate,
                                    SortOrder.Descending
                                )
                            ).fmb_ReviewOwnerClaims,
                            User().Email,
                            MatchOptions.Contains & MatchOptions.IgnoreCase
                        ),
                        Set(
                            IsReviewOwner,
                            true
                        ),
                        Set(
                            IsReviewOwner,
                            false
                        )
                    )),
                    //Capture if the user stays at the latest Review Cycle, because users are not allowed to modify older review cycle.
                    If(
                        dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate = Max(
                            Filter(
                                clln_factMetricBoard,
                                fmb_ProductID = var_BoardSrn_ProductID && fmb_MetricBoardTypeID = var_BoardTypeSelected_Home
                            ),
                            fmb_ReviewLockDate
                        ) && LookUp(
                            clln_BoardTypes,
                            bt_BoardTypeID = dpdn_Scorecard_BS.Selected.BoardTypeID
                        ).bt_ReviewLockDay > Day(Now()),
                        Set(
                            IsLatestReviewCycle,
                            true
                        ),
                        Set(
                            IsLatestReviewCycle,
                            false
                        )
                    )
                )
            );
            Concurrent(
                Set(
                    StartTimer_Capture_factMetricBoard_ID,
                    false
                ),//Set this time to sleep until being triggered next time.
                Set(
                    var_ctn_IfGalleryLoaded_ForceOn,
                    false
                ),
                Collect(
                    clln_LoadedBoardTypes,
                    clln_Last3Months
                ),
                Patch(
                    clln_AppPerf_120,
                    LookUp(
                        clln_AppPerf_120,
                        ThisRecord.RunID = 124
                    ),
                    {
                        Description: "BoardScreen.LoadBoardTypeData - Loading clln_ProductMetrics & clln_FactMetrics collection",
                        EndTime: Now()
                    }
                )
            );
        OnTimerStart: =Set(var_UserViewMyAccess_BS, false)
        Start: =StartTimer_Capture_factMetricBoard_ID = true
        Text: |-
            =//Define all important variables in this timer. Otherwise, users will experience significant interactive delays while clicking on gallery or drop-down list.
            
            //Text(Time(0, 0, Self.Value/1000), "hh:mm:ss")
        Visible: =false
        X: =1166
        Y: =90
        ZIndex: =5

    bttn_LineChart_Variables As button:
        Height: =80
        OnSelect: |-
            =//Important variables for Line Chart - YAxisMax and YAxisMin
            ClearCollect(
                clln_IndivMetricHistory_ByMonthNumber,
                LastN(
                    Filter(
                        clln_IndivMetricHistory,
                        ThisRecord.ReviewMonthStart<=dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                            && ThisRecord.MetricValue <> "N/A"
                    ),
                    dpdn_ShowMonths.Selected.Value
                )
            );
            
            If(
                varSelectedItem.mtd_MetricValueType = "Number" || varSelectedItem.mtd_MetricValueType = "Percentage",
                Concurrent(
                    Set(
                        IMH_MinTarget, 
                        If(
                            CountRows(Filter(clln_IndivMetricHistory_ByMonthNumber, !IsBlank(ThisRecord.MetricTarget))) = 0, 
                            //If all are blank values.
                            Blank(),
                            If(
                                CountRows(Filter(clln_IndivMetricHistory_ByMonthNumber, IsBlank(ThisRecord.MetricTarget))) <> 0,
                                //If there is at least 1 blank value. 
                                0,
                                Min(clln_IndivMetricHistory_ByMonthNumber, MetricTarget)
                            )
                            
                        )
                    ),
            
                    Set(
                        IMH_MaxTarget, 
                        If(
                            CountRows(Filter(clln_IndivMetricHistory_ByMonthNumber, !IsBlank(ThisRecord.MetricTarget))) = 0, 
                            //If all are blank values.
                            Blank(),
                            Max(clln_IndivMetricHistory_ByMonthNumber, MetricTarget)
                        )
                    ),
            
                    Set(
                        IMH_MinValue, 
                        If(
                            CountRows(Filter(clln_IndivMetricHistory_ByMonthNumber, IsBlank(ThisRecord.MetricValue))) <> 0, 
                            //If there is at least 1 blank value.
                            0,
                            Min(clln_IndivMetricHistory_ByMonthNumber, MetricValue)
                        )
                    ),
            
                    Set(IMH_MaxValue, Max(clln_IndivMetricHistory_ByMonthNumber, MetricValue))
                )
            );
        Size: =12
        Text: ="Get Important variables for Line Chart - YAxisMax and YAxisMin" //Hidden button
        Visible: =false
        Width: =300
        X: =1056
        Y: =51
        ZIndex: =6

    glry_BoardSrn_Group As gallery.variableTemplateHeightGallery:
        Fill: =GrayCanvasBackground
        Height: =App.Height - Self.Y - 3  //ctn_EditMetric.Y - Self.Y - 3
        Items: |-
            =//SortByColumns(
                AddColumns(
                    GroupBy(
                        Sort(
                           /* Filter(
                                clln_MetricTypeDetail,
                                ThisRecord.mtd_BoardTypeID = var_BoardTypeSelected_Home
                                    && ThisRecord.mtd_TemplateID = var_BoardSrn_FMB_TemplateID
                                    && (dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate < ThisRecord.mtd_MetricDeprecatedDate || IsBlank(ThisRecord.mtd_MetricDeprecatedDate))
                                    && ThisRecord.mtd_MetricCreatedDate < dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                            ), */
                            
                            clln_MetricTypeDetail_BS,
                            mtd_MetricDisplayOrder
                        ),
                        "mtd_MetricStage",
                        "mtd_MetricTypeSubgroup",
                        "MetricGroup"
                    ), 
                    "SubgroupDisplayOrder",
                    First(ThisRecord.MetricGroup).mtd_MetricDisplayOrder
                )
             /*   ,
                "",
                "mtd_MetricStage"
            )
            */
        Layout: =Layout.Vertical
        TemplatePadding: =0
        TemplateSize: =280
        Visible: =!var_Display_ExecSummaryContainer
        Width: =glry_BoardSrn_Headers.Width
        X: =glry_BoardSrn_Headers.X
        Y: =glry_BoardSrn_Headers.Y + glry_BoardSrn_Headers.Height
        ZIndex: =7

        lbl_BoardSrn_WhiteBackgrd As label:
            BorderColor: =btn_BS_Stage.Fill
            BorderThickness: =1
            Color: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =Self.BorderColor
            DisabledColor: =RGBA(0, 0, 0, 0)
            DisabledFill: =Color.White
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(255, 255, 255, 1)
            Height: =Label_MetricType_SubGroup.Height
            OnSelect: =Select(Parent)
            Text: =""
            Width: =btn_BS_Stage.Width - 2
            X: =btn_BS_Stage.X + 1
            Y: =Label_MetricType_SubGroup.Y - 1
            ZIndex: =1

        glry_BoardSrn_Subgroup As gallery.variableTemplateHeightGallery:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Height: =Sum(glry_BoardSrn_Subgroup.AllItems, Value(EachRowHeight.Text)) + 5
            Items: |-
                =AddColumns(
                    AddColumns(
                        AddColumns(
                            AddColumns(
                                ThisItem.MetricGroup,
                                "factMetricBoard1",
                                LookUp(
                                    clln_factMetricBoard,
                                    fmb_ID = var_BoardSrn_FMB_ID//This variable is captured within Timer_Capture_factMetricBoard_ID.
                                )
                            ),
                            "ProductMetrics1",
                            LookUp(
                                clln_ProductMetrics,
                                ThisRecord.pm_ProductID = var_BoardSrn_ProductID && ThisRecord.pm_MetricTypeID = mtd_MetricTypeId
                            )
                        ),
                        "factMetric1",
                        First(
                            Sort(
                                Filter(
                                    clln_factMetrics,
                                    ThisRecord.fm_ProductMetricID = ProductMetrics1[@pm_ID] && Month(factMetricBoard1[@fmb_ReviewLockDate]) = Month(ThisRecord.fm_ReviewLockDate) && Year(factMetricBoard1[@fmb_ReviewLockDate]) = Year(ThisRecord.fm_ReviewLockDate)
                                ),
                                fm_ValueDate,
                                SortOrder.Descending
                            )
                        )
                    ),
                    "factMetric_LastPeriod",
                    First(
                        Sort(
                            ShowColumns(
                                Filter(
                                    clln_factMetrics,
                                    ThisRecord.fm_ProductMetricID = ProductMetrics1[@pm_ID] && ThisRecord.fm_ReviewLockDate < factMetric1[@fm_ReviewLockDate] && !ThisRecord.fm_IsNotApplicable
                                ),
                                "fm_ValueDate",
                                "fm_ID",
                                "fm_ProductMetricID",
                                "fm_ValueNumber",
                                "fm_ValueText",
                                "fm_ValueYesNo"
                            ),
                            fm_ValueDate,
                            SortOrder.Descending
                        )
                    ),
                    "factMetric_LastPeriod1",
                    LookUp(
                        clln_factMetrics,
                        ThisRecord.fm_ProductMetricID = ProductMetrics1[@pm_ID] && Month(ThisRecord.fm_ReviewLockDate) = Month(
                            DateAdd(
                                factMetric1[@fm_ReviewLockDate],
                                -1,
                                TimeUnit.Months
                            )
                        ) && Year(ThisRecord.fm_ReviewLockDate) = Year(
                            DateAdd(
                                factMetric1[@fm_ReviewLockDate],
                                -1,
                                TimeUnit.Months
                            )
                        )
                    ),
                    "factMetric_LastPeriod2",
                    LookUp(
                        clln_factMetrics,
                        ThisRecord.fm_ProductMetricID = ProductMetrics1[@pm_ID] && Month(ThisRecord.fm_ReviewLockDate) = Month(
                            DateAdd(
                                factMetric1[@fm_ReviewLockDate],
                                -2,
                                TimeUnit.Months
                            )
                        ) && Year(ThisRecord.fm_ReviewLockDate) = Year(
                            DateAdd(
                                factMetric1[@fm_ReviewLockDate],
                                -2,
                                TimeUnit.Months
                            )
                        )
                    ),
                    "CurrentQuarter",
                    With(
                        {
                            currentDate: Date(
                                var_CurrentQuarterYear_BS,
                                var_CurrentQuarterMonth_BS + 1,
                                0
                            )
                        },
                        With(
                            {
                                Q: RoundUp(
                                    (If(
                                        Month(currentDate) >= 7,
                                        Month(currentDate) - 6,
                                        Month(currentDate) + 6
                                    ) / 3),
                                    0
                                )
                            },
                            LookUp(
                                clln_FactMetric_Quarterly,
                                fm_ProductMetricID = ProductMetrics1[@pm_ID] && Quarter = "FY" & If(
                                    Q = 1 || Q = 2,
                                    Year(currentDate) + 1,
                                    Year(currentDate)
                                ) & "Q" & Q
                            ).'Quarter Result'
                        )
                    ),
                    "PreviousQuarter",
                    With(
                        {
                            currentDate: Date(
                                var_PreviousQuaterYear_BS,
                                var_PreviousQuaterMonth_BS + 1,
                                0
                            )
                        },
                        With(
                            {
                                Q: RoundUp(
                                    (If(
                                        Month(currentDate) >= 7,
                                        Month(currentDate) - 6,
                                        Month(currentDate) + 6
                                    ) / 3),
                                    0
                                )
                            },
                            LookUp(
                                clln_FactMetric_Quarterly,
                                fm_ProductMetricID = ProductMetrics1[@pm_ID] && Quarter = "FY" & If(
                                    Q = 1 || Q = 2,
                                    Year(currentDate) + 1,
                                    Year(currentDate)
                                ) & "Q" & Q
                            ).'Quarter Result'
                        )
                    ),
                    "Past2Quarter",
                    With(
                        {
                            currentDate: Date(
                                var_Past2QuaterYear_BS,
                                var_Past2QuaterMonth_BS + 1,
                                0
                            )
                        },
                        With(
                            {
                                Q: RoundUp(
                                    (If(
                                        Month(currentDate) >= 7,
                                        Month(currentDate) - 6,
                                        Month(currentDate) + 6
                                    ) / 3),
                                    0
                                )
                            },
                            LookUp(
                                clln_FactMetric_Quarterly,
                                fm_ProductMetricID = ProductMetrics1[@pm_ID] && Quarter = "FY" & If(
                                    Q = 1 || Q = 2,
                                    Year(currentDate) + 1,
                                    Year(currentDate)
                                ) & "Q" & Q
                            ).'Quarter Result'
                        )
                    ),
                    "Past3Quarter",
                    With(
                        {
                            currentDate: Date(
                                var_Past3QuaterYear_BS,
                                var_Past3QuaterMonth_BS + 1,
                                0
                            )
                        },
                        With(
                            {
                                Q: RoundUp(
                                    (If(
                                        Month(currentDate) >= 7,
                                        Month(currentDate) - 6,
                                        Month(currentDate) + 6
                                    ) / 3),
                                    0
                                )
                            },
                            LookUp(
                                clln_FactMetric_Quarterly,
                                fm_ProductMetricID = ProductMetrics1[@pm_ID] && Quarter = "FY" & If(
                                    Q = 1 || Q = 2,
                                    Year(currentDate) + 1,
                                    Year(currentDate)
                                ) & "Q" & Q
                            ).'Quarter Result'
                        )
                    ),
                    "target_",
                    First(
                        Sort(
                            If(
                                Month(factMetricBoard1[@fmb_ReviewLockDate]) >= 7,
                                Filter(
                                    clln_factMetrics,
                                    ThisRecord.fm_ProductMetricID = ProductMetrics1[@pm_ID] && Year(factMetricBoard1[@fmb_ReviewLockDate]) = Year(ThisRecord.fm_ReviewLockDate) && Month(ThisRecord.fm_ReviewLockDate) >= 7
                                ),
                                Filter(
                                    clln_factMetrics,
                                    ThisRecord.fm_ProductMetricID = ProductMetrics1[@pm_ID] && Year(factMetricBoard1[@fmb_ReviewLockDate]) = Year(ThisRecord.fm_ReviewLockDate) && Month(ThisRecord.fm_ReviewLockDate) < 7
                                )
                            ),
                            fm_ValueDate,
                            SortOrder.Descending
                        )
                    )
                )
            Layout: =Layout.Vertical
            OnSelect: |-
                =Concurrent(
                
                    Set(var_BoardSrnMetricUpdateMethod, With(
                                {
                                    update_method: LookUp(
                                        'ReviewHub ProductMetricUpdateMethods',
                                        'Product ID' = var_BoardSrn_ProductID && 'Metric Type ID' = ThisItem.mtd_MetricTypeId
                                    ),
                                    default_update_method: ThisItem.mtd_UpdateMethod
                                },
                                If(
                                    IsBlankOrError(update_method),
                                    default_update_method,
                                    Text(update_method.'Update Method')
                                )
                            )),
                    Set(varSelectedItem, ThisItem); 
                    Set(var_BoardSrn_Selected_MetricID, varSelectedItem.ProductMetrics1.pm_ID);
                    If(
                        IsBlankOrError(varSelectedItem.factMetric1),
                        NewForm(UpdateMetricValue_BS),
                        EditForm(UpdateMetricValue_BS)
                    );
                    Set(
                        var_BoardSrn_Selected_MetricValueType, 
                        LookUp(clln_ProductMetrics, ThisRecord.pm_ID = var_BoardSrn_Selected_MetricID).pm_MetricValueType
                    ),
                
                    If(!IsBlankOrError(ThisItem.ProductMetrics1.pm_ID), Set(IsDetailsSelected, true)),
                    EditForm(EditTargetForm_BS),
                    Set(var_MetricHistoryLoading, true);
                );
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =30
            Width: =btn_BS_Stage.Width + btn_BS_Stage.X - Self.X
            X: =Label_MetricType_SubGroup.X + Label_MetricType_SubGroup.Width
            Y: =Label_MetricType_SubGroup.Y
            ZIndex: =2

            Label_factMetric_Comment As label:
                AutoHeight: =true
                BorderStyle: =BorderStyle.None
                Color: =RGBA(0, 0, 0, 0)
                Font: =FontStyle
                FontWeight: =Label_MetricTypeName.FontWeight
                Height: =60
                HoverBorderColor: =
                LineHeight: =1.45
                OnSelect: =Select(Parent)
                Size: =10
                Text: =Trim(ThisItem.factMetric1.fm_Comment)
                Tooltip: =ThisItem.factMetric1.fm_Comment
                Visible: =!var_ShowQuarters_BS
                Width: =Parent.Width - Self.X 
                X: =LineChart_In_Glry.X + LineChart_In_Glry.Width
                Y: =0 //Max(0,(Label_MetricType_Title.Height-Self.Height)/2)
                ZIndex: =1

            bttn_factMetric_Comment As button:
                Align: =Align.Left
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =RGBA(0, 0, 0, 1)
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Color.Black
                HoverFill: =bttn_MetricTypeName.HoverFill
                OnSelect: =Select(Parent)
                PressedColor: =Color.White
                PressedFill: =ColorFade(LEFTNAVHIGLIGHTCOLOR, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: =Trim(ThisItem.factMetric1.fm_Comment)
                Tooltip: =Self.Text
                Visible: =!var_ShowQuarters_BS //If(Trim(Self.Text)="", false, true)
                Width: =Label_factMetric_Comment.Width
                X: =Label_factMetric_Comment.X
                Y: =Label_factMetric_Comment.Y
                ZIndex: =2

            bttn_LineChart As button:
                BorderThickness: =0
                Color: =
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                DisplayMode: =DisplayMode.View
                Fill: =bttn_MetricTypeName.Fill //If(LineChart_In_Glry.Visible, RGBA(0, 0, 0, 0), bttn_MetricTypeName.Fill)
                Font: =FONTNAME
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =2
                PaddingRight: =0
                PaddingTop: =0
                PressedColor: =Color.White
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: =//Needs this button for the Line Chart background color.
                Tooltip: =
                Visible: =!var_ShowQuarters_BS
                Width: =LineChart_In_Glry.Width
                X: =LineChart_In_Glry.X
                ZIndex: =3

            LineChart_In_Glry As lineChart:
                BorderStyle: =BorderStyle.None
                DisplayMode: =DisplayMode.Disabled
                Font: =Font.'Open Sans'
                GridStyle: =GridStyle.None
                Height: =If(Self.Visible, 50, 0)
                ItemColorSet: |-
                    =//[RGBA(49, 130, 93, 1)],RGBA(48,166,103, 1), RGBA(94,193,108,1), RGBA(246,199,144,1), RGBA(247,199,114,1), RGBA(247,180,91,1), RGBA(246,143,100,1), RGBA(212,96,104,1), RGBA(148, 110, 176, 1), RGBA(118, 154, 204, 1), RGBA(96, 197, 234, 1)]
                    
                    If(ThisItem.ProductMetrics1.pm_ID = varSelectedItem.ProductMetrics1.pm_ID, [RGBA(0, 0, 0, 0)], [RGBA(0, 204, 255, 1)])
                Items: |-
                    =LastN(
                        SortByColumns(
                            ShowColumns(
                                Filter(
                                    clln_factMetrics_Graphs_BS,
                                    ThisRecord.fm_ProductMetricID = ThisItem.ProductMetrics1.pm_ID
                                        && ThisRecord.fm_ReviewLockDate <= dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                                ),
                                "fm_ReviewLockDate",
                                "fm_ValueNumber"
                            ),
                            "fm_ReviewLockDate",
                            SortOrder.Ascending
                        ),
                        6
                    )
                Markers: =false
                OnSelect: =Select(Parent)
                PaddingBottom: =7
                PaddingRight: =0
                Size: =8
                Visible: =(ThisItem.mtd_MetricValueType = "Number" || ThisItem.mtd_MetricValueType = "Percentage") && !var_ShowQuarters_BS
                Width: =100
                X: =bttn_MetricTarget.X + bttn_MetricTarget.Width
                Y: =If(Self.Visible, bttn_MetricTarget.Height*0.5 - Self.Height*0.5, 0)
                YAxisMin: |-
                    =Min(
                        LastN(
                        SortByColumns(
                            ShowColumns(
                                Filter(
                                    clln_factMetrics_Graphs_BS,
                                    ThisRecord.fm_ProductMetricID = ThisItem.ProductMetrics1.pm_ID
                                        && ThisRecord.fm_ReviewLockDate <= dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                                ),
                                "fm_ReviewLockDate",
                                "fm_ValueNumber"
                            ),
                            "fm_ReviewLockDate",
                            SortOrder.Ascending
                        ),
                        6
                    ),
                        fm_ValueNumber-2
                    )
                ZIndex: =4

            bttn_LineChart_Front As button:
                BorderThickness: =0
                Color: =
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Fill: =RGBA(0, 0, 0, 0)
                Font: =FONTNAME
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverBorderColor: =
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: =Select(Parent);
                PaddingBottom: =0
                PaddingLeft: =2
                PaddingRight: =0
                PaddingTop: =0
                PressedColor: =Color.White
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: =
                Tooltip: =
                Visible: =!var_ShowQuarters_BS
                Width: =LineChart_In_Glry.Width
                X: =LineChart_In_Glry.X
                ZIndex: =5

            Image_TrendingDown As image:
                BorderColor: =RGBA(0, 0, 0, 0)
                Fill: =bttn_MetricTypeName.Fill
                Height: =bttn_MetricTypeName.Height
                Image: =TrendingDown
                OnSelect: =Select(Parent)
                Visible: =Text(ThisItem.mtd_IsTrendDown) = "Yes"
                Width: =20
                Y: =0 //Label_MetricType_Title.Height*0.5 - Self.Height*0.5
                ZIndex: =6

            bttn_MetricTarget As button:
                Align: |
                    =If(!var_ShowQuarters_BS, 
                    Align.Center,
                    Align.Left)
                BorderThickness: =0
                Color: =bttn_MetricTypeName.Color
                ContentLanguage: |
                    =If(!var_ShowQuarters_BS, 
                    135,
                    200)
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =Max(Label_factMetric_Comment.Height, Label_MetricTypeName.Height, LineChart_In_Glry.Height)
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =//EditForm(EditTargetForm_2);
                    Select(Parent);
                    /*Navigate(
                        EditTarget,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgReviewOwnerName: ThisItem.factMetricBoard1.ReviewOwner.DisplayName
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: |
                    =If(!var_ShowQuarters_BS, 
                    0,
                    15)
                PaddingRight: =0
                PaddingTop: =0
                PressedColor: =Color.White
                PressedFill: =ColorFade(LEFTNAVHIGLIGHTCOLOR, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: |+
                    =If (!var_ShowQuarters_BS, If(
                        IsBlankOrError(ThisItem.ProductMetrics1.pm_ID) 
                            || (!ThisItem.ProductMetrics1.pm_IsMetricActive && IsBlank(ThisItem.factMetric1.fm_ValueYesNo) && IsBlank(ThisItem.factMetric1.fm_ValueNumber) && IsBlank(ThisItem.factMetric1.fm_ValueText)),
                        "Not Applicable", //If Metric.IsMetricActive is False and has no [factMetric] values, then shows Blank.
                        Switch(
                            ThisItem.mtd_MetricValueType,
                            "Number",
                            If(
                                ThisItem.factMetric1.fm_TargetNumber = -1 || IsBlankOrError(ThisItem.factMetric1.fm_TargetNumber),
                                "Not Available",
                                If(
                                    ThisItem.factMetric1.fm_TargetNumber<1.0,
                                    Text(Round(ThisItem.factMetric1.fm_TargetNumber, 4)),
                                    If(
                                        EndsWith(Text(ThisItem.factMetric1.fm_TargetNumber, "[$-en-US]###,###,###.##"), "."), 
                                        If(
                                            ThisItem.factMetric1.fm_TargetNumber = 0,
                                            "0",
                                            Text(ThisItem.factMetric1.fm_TargetNumber, "[$-en-US]###,###,###") //
                                        ),
                                        Text(ThisItem.factMetric1.fm_TargetNumber,"[$-en-US]###,###,###.00")
                                    )
                                )
                            ),
                            "Percentage",
                            If(
                                ThisItem.factMetric1.fm_TargetNumber = -1 || IsBlankOrError(ThisItem.factMetric1.fm_TargetNumber),
                                "Not Available",
                                If(
                                    EndsWith(Text(ThisItem.factMetric1.fm_TargetNumber, "[$-en-US]#.##"), "."),
                                    If(ThisItem.factMetric1.fm_TargetNumber=0, "0%", Text(ThisItem.factMetric1.fm_TargetNumber, "[$-en-US]#%")),
                                    Text(ThisItem.factMetric1.fm_TargetNumber) & "%" //, "[$-en-US]#.##%")
                                )
                            ),
                            "Text",
                                If(IsBlankOrError(ThisItem.factMetric1.fm_TargetText), "Not Available", ThisItem.factMetric1.fm_TargetText),
                            "Boolean",
                            Switch(
                                ThisItem.factMetric1.fm_TargetYesNo, 
                                1, "Yes",
                                0, "No",
                                Blank(), "Not Available"
                            )
                        )
                    ),
                    If(
                        IsBlankOrError(ThisItem.ProductMetrics1.pm_ID) 
                            || (!ThisItem.ProductMetrics1.pm_IsMetricActive && IsBlank(ThisItem.target_.fm_ValueYesNo) && IsBlank(ThisItem.target_.fm_ValueNumber) && IsBlank(ThisItem.target_.fm_ValueText)),
                        "Not Applicable", //If Metric.IsMetricActive is False and has no [factMetric] values, then shows Blank.
                        Switch(
                            ThisItem.mtd_MetricValueType,
                            "Number",
                            If(
                                ThisItem.target_.fm_TargetNumber = -1 || IsBlankOrError(ThisItem.target_.fm_TargetNumber),
                                "Not Available",
                                If(
                                    ThisItem.target_.fm_TargetNumber<1.0,
                                    Text(Round(ThisItem.target_.fm_TargetNumber, 4)),
                                    If(
                                        EndsWith(Text(ThisItem.target_.fm_TargetNumber, "[$-en-US]###,###,###.##"), "."), 
                                        If(
                                            ThisItem.target_.fm_TargetNumber = 0,
                                            "0",
                                            Text(ThisItem.target_.fm_TargetNumber, "[$-en-US]###,###,###") //
                                        ),
                                        Text(ThisItem.target_.fm_TargetNumber,"[$-en-US]###,###,###.00")
                                    )
                                )
                            ),
                            "Percentage",
                            If(
                                ThisItem.target_.fm_TargetNumber = -1 || IsBlankOrError(ThisItem.target_.fm_TargetNumber),
                                "Not Available",
                                If(
                                    EndsWith(Text(ThisItem.target_.fm_TargetNumber, "[$-en-US]#.##"), "."),
                                    If(ThisItem.target_.fm_TargetNumber=0, "0%", Text(ThisItem.target_.fm_TargetNumber, "[$-en-US]#%")),
                                    Text(ThisItem.target_.fm_TargetNumber) & "%" //, "[$-en-US]#.##%")
                                )
                            ),
                            "Text",
                                If(IsBlankOrError(ThisItem.target_.fm_TargetText), "Not Available", ThisItem.target_.fm_TargetText),
                            "Boolean",
                            Switch(
                                ThisItem.target_.fm_TargetYesNo, 
                                1, "Yes",
                                0, "No",
                                Blank(), "Not Available"
                            )
                        )
                    ))
                    
                Tooltip: =If(Label_MetricTypeName.Color=RGBA(166, 166, 166, 1), "This metric is inactive for this period.", "click to edit")
                Width: |
                    =If(!var_ShowQuarters_BS, 
                    135,
                    200)
                X: =If ( !var_ShowQuarters_BS, bttn_MetricCurrValue.X + bttn_MetricCurrValue.Width, bttn_MetricQS_Curr.X + bttn_MetricQS_Curr.Width)
                ZIndex: =7

            bttn_MetricQS_Curr As button:
                BorderThickness: =0
                Color: |
                    =bttn_MetricTypeName.Color
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =If(icon_IndivMetricTrendDn.Visible || icon_IndivMetricTrendSame.Visible || icon_IndivMetricTrendUp.Visible, 4, 0)
                PaddingTop: =0
                PressedColor: =Self.Color
                PressedFill: =ColorFade(Self.Fill, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: |-
                    =If(IsError(ThisItem.CurrentQuarter), "..." , 
                    Switch(
                            ThisItem.mtd_MetricValueType, 
                            "Boolean",
                                "",
                            "Number",
                                If(
                                    IsBlank(ThisItem.CurrentQuarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        ThisItem.CurrentQuarter < 1.0, 
                                        Text(Round(ThisItem.CurrentQuarter, 4)),
                                        If(
                                            EndsWith(Text(ThisItem.CurrentQuarter, "[$-en-US]###,###,###.##"), "."),
                                            Text(ThisItem.CurrentQuarter, "[$-en-US]###,###,###"),
                                            Text(ThisItem.CurrentQuarter, "[$-en-US]###,###,###.00")
                                        )
                                    )
                                ),
                            
                            "Percentage",
                                If(
                                    IsBlank(ThisItem.CurrentQuarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        EndsWith(Text(ThisItem.CurrentQuarter, "[$-en-US]#.##"), "."),
                                        If(ThisItem.CurrentQuarter = 0, "0%", Text(ThisItem.CurrentQuarter,"[$-en-US]#%")),
                                        Text(ThisItem.CurrentQuarter, "[$-en-US]#.##%")
                                    )
                                ),
                            
                            "Text",
                                ""
                        )
                    )
                Tooltip: =If(Label_MetricTypeName.Color=RGBA(166, 166, 166, 1), "This metric is inactive for this period.", "click to edit")
                Visible: =var_ShowQuarters_BS
                Width: =bttn_MetricQS_Prev3.Width
                X: =bttn_MetricQS_Prev1.X + bttn_MetricQS_Prev1.Width
                ZIndex: =8

            bttn_MetricQS_Prev1 As button:
                BorderThickness: =0
                Color: |
                    =bttn_MetricTypeName.Color
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =If(icon_IndivMetricTrendDn.Visible || icon_IndivMetricTrendSame.Visible || icon_IndivMetricTrendUp.Visible, 4, 0)
                PaddingTop: =0
                PressedColor: =Self.Color
                PressedFill: =ColorFade(Self.Fill, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: |-
                    =If(IsError(ThisItem.PreviousQuarter), "..." , 
                    Switch(
                            ThisItem.mtd_MetricValueType, 
                            "Boolean",
                                "",
                            "Number",
                                If(
                                    IsBlank(ThisItem.PreviousQuarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        ThisItem.PreviousQuarter < 1.0, 
                                        Text(Round(ThisItem.PreviousQuarter, 4)),
                                        If(
                                            EndsWith(Text(ThisItem.PreviousQuarter, "[$-en-US]###,###,###.##"), "."),
                                            Text(ThisItem.PreviousQuarter, "[$-en-US]###,###,###"),
                                            Text(ThisItem.PreviousQuarter, "[$-en-US]###,###,###.00")
                                        )
                                    )
                                ),
                            
                            "Percentage",
                                If(
                                    IsBlank(ThisItem.PreviousQuarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        EndsWith(Text(ThisItem.PreviousQuarter, "[$-en-US]#.##"), "."),
                                        If(ThisItem.PreviousQuarter = 0, "0%", Text(ThisItem.PreviousQuarter,"[$-en-US]#%")),
                                        Text(ThisItem.PreviousQuarter, "[$-en-US]#.##%")
                                    )
                                ),
                            
                            "Text",
                                ""
                        )
                    )
                Tooltip: =If(Label_MetricTypeName.Color=RGBA(166, 166, 166, 1), "This metric is inactive for this period.", "click to edit")
                Visible: =var_ShowQuarters_BS
                Width: =bttn_MetricQS_Prev3.Width
                X: =bttn_MetricQS_Prev2.X + bttn_MetricQS_Prev2.Width
                ZIndex: =9

            bttn_MetricQS_Prev2 As button:
                BorderThickness: =0
                Color: |
                    =bttn_MetricTypeName.Color
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =If(icon_IndivMetricTrendDn.Visible || icon_IndivMetricTrendSame.Visible || icon_IndivMetricTrendUp.Visible, 4, 0)
                PaddingTop: =0
                PressedColor: =Self.Color
                PressedFill: =ColorFade(Self.Fill, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: |-
                    =If(IsError(ThisItem.Past2Quarter), "..." , 
                    Switch(
                            ThisItem.mtd_MetricValueType, 
                            "Boolean",
                                "",
                            "Number",
                                If(
                                    IsBlank(ThisItem.Past2Quarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        ThisItem.Past2Quarter < 1.0, 
                                        Text(Round(ThisItem.Past2Quarter, 4)),
                                        If(
                                            EndsWith(Text(ThisItem.Past2Quarter, "[$-en-US]###,###,###.##"), "."),
                                            Text(ThisItem.Past2Quarter, "[$-en-US]###,###,###"),
                                            Text(ThisItem.Past2Quarter, "[$-en-US]###,###,###.00")
                                        )
                                    )
                                ),
                            
                            "Percentage",
                                If(
                                    IsBlank(ThisItem.Past2Quarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        EndsWith(Text(ThisItem.Past2Quarter, "[$-en-US]#.##"), "."),
                                        If(ThisItem.Past2Quarter = 0, "0%", Text(ThisItem.Past2Quarter,"[$-en-US]#%")),
                                        Text(ThisItem.Past2Quarter, "[$-en-US]#.##%")
                                    )
                                ),
                            
                            "Text",
                                ""
                        )
                    )
                Tooltip: =If(Label_MetricTypeName.Color=RGBA(166, 166, 166, 1), "This metric is inactive for this period.", "click to edit")
                Visible: =var_ShowQuarters_BS
                Width: =bttn_MetricQS_Prev3.Width
                X: =bttn_MetricQS_Prev3.X + bttn_MetricQS_Prev3.Width
                ZIndex: =10

            bttn_MetricQS_Prev3 As button:
                BorderThickness: =0
                Color: |
                    =bttn_MetricTypeName.Color
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =If(icon_IndivMetricTrendDn.Visible || icon_IndivMetricTrendSame.Visible || icon_IndivMetricTrendUp.Visible, 4, 0)
                PaddingTop: =0
                PressedColor: =Self.Color
                PressedFill: =ColorFade(Self.Fill, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: |-
                    =If(IsError(ThisItem.Past3Quarter), "..." , 
                    Switch(
                            ThisItem.mtd_MetricValueType, 
                            "Boolean",
                                "",
                            "Number",
                                If(
                                    IsBlank(ThisItem.Past3Quarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        ThisItem.Past3Quarter < 1.0, 
                                        Text(Round(ThisItem.Past3Quarter, 4)),
                                        If(
                                            EndsWith(Text(ThisItem.Past3Quarter, "[$-en-US]###,###,###.##"), "."),
                                            Text(ThisItem.Past3Quarter, "[$-en-US]###,###,###"),
                                            Text(ThisItem.Past3Quarter, "[$-en-US]###,###,###.00")
                                        )
                                    )
                                ),
                            
                            "Percentage",
                                If(
                                    IsBlank(ThisItem.Past3Quarter),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "..."),
                                    If(
                                        EndsWith(Text(ThisItem.Past3Quarter, "[$-en-US]#.##"), "."),
                                        If(ThisItem.Past3Quarter = 0, "0%", Text(ThisItem.Past3Quarter,"[$-en-US]#%")),
                                        Text(ThisItem.Past3Quarter, "[$-en-US]#.##%")
                                    )
                                ),
                            
                            "Text",
                                ""
                        )
                    )
                Tooltip: =If(Label_MetricTypeName.Color=RGBA(166, 166, 166, 1), "This metric is inactive for this period.", "click to edit")
                Visible: =var_ShowQuarters_BS
                Width: =100
                X: =bttn_MetricCurrValue.X + bttn_MetricCurrValue.Width
                ZIndex: =11

            bttn_MetricPreOne As button:
                BorderThickness: =0
                Color: =bttn_MetricTypeName.Color //If(Self.Text="...", icon_NotAv_Info.Color, bttn_MetricTypeName.Color)
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedColor: =Color.White
                PressedFill: =ColorFade(LEFTNAVHIGLIGHTCOLOR, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: |-
                    =If(
                        IsBlankOrError(ThisItem.ProductMetrics1.pm_ID) || ThisItem.factMetric_LastPeriod1.fm_IsNotApplicable,
                        "Not Applicable",
                        Switch(
                            ThisItem.mtd_MetricValueType, 
                            "Boolean",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod1.fm_ValueYesNo), 
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    Switch(ThisItem.factMetric_LastPeriod1.fm_ValueYesNo, 1, "Yes", 0, "No")
                                ),
                    
                            "Number",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod1.fm_ValueNumber),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    If(
                                        ThisItem.factMetric_LastPeriod1.fm_ValueNumber<1.0, 
                                        Text(Round(ThisItem.factMetric_LastPeriod1.fm_ValueNumber, 4)),
                                        If(
                                            EndsWith(Text(ThisItem.factMetric_LastPeriod1.fm_ValueNumber, "[$-en-US]###,###,###.##"), "."),
                                            Text(ThisItem.factMetric_LastPeriod1.fm_ValueNumber, "[$-en-US]###,###,###"),
                                            Text(ThisItem.factMetric_LastPeriod1.fm_ValueNumber, "[$-en-US]###,###,###.00")
                                        )
                                    )
                                ),
                            
                            "Percentage",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod1.fm_ValueNumber),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    If(
                                        ThisItem.factMetric_LastPeriod1.fm_ValueNumber = 0, 
                                        "0.00%", 
                                        Text(ThisItem.factMetric_LastPeriod1.fm_ValueNumber, "[$-en-US]#.00") & "%"
                                    )
                                ),
                            
                            "Text",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod1.fm_ValueText) || Trim(ThisItem.factMetric_LastPeriod1.fm_ValueText)="", 
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    ThisItem.factMetric_LastPeriod1.fm_ValueText
                                )
                        )
                    )
                Tooltip: =
                Width: =bttn_MetricPreTwo.Width
                X: =bttn_MetricPreTwo.X+bttn_MetricPreTwo.Width
                ZIndex: =12

            bttn_MetricPreTwo As button:
                BorderThickness: =0
                Color: =bttn_MetricTypeName.Color //If(Self.Text="...", icon_NotAv_Info.Color, bttn_MetricTypeName.Color)
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                Fill: =bttn_MetricTypeName.Fill
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =bttn_MetricTarget.Height
                HoverColor: =Self.Color
                HoverFill: =
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedColor: =Color.White
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: |-
                    =If(
                        IsBlankOrError(ThisItem.ProductMetrics1.pm_ID) || ThisItem.factMetric_LastPeriod2.fm_IsNotApplicable,
                        "Not Applicable",
                        Switch(
                            ThisItem.mtd_MetricValueType, 
                            "Boolean",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod2.fm_ValueYesNo), 
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    Switch(ThisItem.factMetric_LastPeriod2.fm_ValueYesNo, 1, "Yes", 0, "No")
                                ),
                    
                            "Number",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod2.fm_ValueNumber),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    If(
                                        ThisItem.factMetric_LastPeriod2.fm_ValueNumber<1.0, 
                                        Text(Round(ThisItem.factMetric_LastPeriod2.fm_ValueNumber, 4)),
                                        If(
                                            EndsWith(Text(ThisItem.factMetric_LastPeriod2.fm_ValueNumber, "[$-en-US]###,###,###.##"), "."),
                                            Text(ThisItem.factMetric_LastPeriod2.fm_ValueNumber, "[$-en-US]###,###,###"),
                                            Text(ThisItem.factMetric_LastPeriod2.fm_ValueNumber, "[$-en-US]###,###,###.00")
                                        )
                                    )
                                ),
                            
                            "Percentage",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod2.fm_ValueNumber),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    If(
                                        ThisItem.factMetric_LastPeriod2.fm_ValueNumber = 0, 
                                        "0.00%", 
                                        Text(ThisItem.factMetric_LastPeriod2.fm_ValueNumber, "[$-en-US]#.00") & "%"
                                    )
                                ),
                            
                            "Text",
                                If(
                                    IsBlank(ThisItem.factMetric_LastPeriod2.fm_ValueText) || Trim(ThisItem.factMetric_LastPeriod2.fm_ValueText)="", 
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    ThisItem.factMetric_LastPeriod2.fm_ValueText
                                )
                        )
                    )
                Tooltip: =
                Width: =110
                X: =Label_MetricTypeName.X + Label_MetricTypeName.Width
                ZIndex: =13

            bttn_MetricCurrValue_Back As label:
                BorderStyle: =BorderStyle.None
                Color: =RGBA(0, 0, 0, 0)
                DisplayMode: =DisplayMode.View
                Fill: =bttn_MetricTypeName.Fill
                Height: =bttn_MetricTarget.Height
                OnSelect: =Select(Parent)
                Size: =10
                Text: =""
                Width: =bttn_MetricCurrValue.Width
                X: =bttn_MetricCurrValue.X
                Y: =bttn_MetricTarget.Y
                ZIndex: =14

            bttn_MetricCurrValue As button:
                BorderThickness: =0
                Color: |-
                    =If(
                        Self.Text="...", 
                        icon_NotAv_Info.Color, //Blue for manual metrics, Red for automated metrics
                        If(
                            Self.Text="Not Applicable",
                            GRAYCOLOR,
                            Switch(
                                Self.Fill,
                                GREENCOLOR, GreenFontColor,
                                YellowTargetColor, YellowFontColor,
                                REDCOLOR, RedFontColor,
                                RGBA(0, 0, 0, 0), RGBA(1, 1, 1, 1)
                            )
                        )
                    )
                ContentLanguage: =Switch(Self.Fill, GREENCOLOR, "G", REDCOLOR, "R", YellowTargetColor, "Y", Color.White, "W")
                Fill: |-
                    =//If you change color here, please also make sure the component MetricWgt is also updated.
                    If(
                        IsBlankOrError(bttn_MetricTarget.Text)
                            || IsBlankOrError(bttn_MetricCurrValue.Text) 
                            || bttn_MetricCurrValue.Text="..." 
                            || bttn_MetricCurrValue.Text="Not Applicable" 
                            || bttn_MetricTarget.Text="Not Available",
                    
                        RGBA(0, 0, 0, 0), //bttn_MetricTypeName.Fill,
                        
                        If(
                            ThisItem.mtd_MetricValueType = "Boolean" || ThisItem.mtd_MetricValueType = "Text",
                    
                            If(
                                bttn_MetricCurrValue.Text = bttn_MetricTarget.Text,
                                GREENCOLOR,
                                REDCOLOR
                            ),
                    
                            //Else "Percentage" or "Number"
                            If(
                                ThisItem.factMetric1.fm_TargetNumber = -1,
                                Color.White,
                                If(
                                    ThisItem.mtd_IsTrendDown,
                                    If(
                                        ThisItem.factMetric1.fm_ValueNumber <= ThisItem.factMetric1.fm_TargetNumber 
                                            || (!IsBlankOrError(ThisItem.factMetric1.fm_GreenTargetStart) && ThisItem.factMetric1.fm_ValueNumber <= ThisItem.factMetric1.fm_GreenTargetStart),
                                        GREENCOLOR,
                                        If(
                                            !IsBlankOrError(ThisItem.factMetric1.fm_YellowTargetStart) 
                                                && ThisItem.factMetric1.fm_ValueNumber <= ThisItem.factMetric1.fm_YellowTargetStart, 
                                            YellowTargetColor,
                                            REDCOLOR 
                                        )
                                    ),
                    
                                    If(
                                        ThisItem.factMetric1.fm_ValueNumber >= ThisItem.factMetric1.fm_TargetNumber  
                                            || (!IsBlankOrError(ThisItem.factMetric1.fm_GreenTargetStart) && ThisItem.factMetric1.fm_ValueNumber >= ThisItem.factMetric1.fm_GreenTargetStart),
                                        GREENCOLOR,
                                        If(
                                            !IsBlankOrError(ThisItem.factMetric1.fm_YellowTargetStart) 
                                                && ThisItem.factMetric1.fm_ValueNumber >= ThisItem.factMetric1.fm_YellowTargetStart, 
                                            YellowTargetColor,
                                            REDCOLOR 
                                        )
                                    )
                                )
                            )
                        )
                    )
                Font: =FontStyle
                FontWeight: =bttn_MetricTypeName.FontWeight
                Height: =25
                HoverColor: =Self.Color
                HoverFill: =ColorFade(Self.Fill, -10%)
                OnSelect: |-
                    =Select(Parent);
                    /*If(
                        IsBlankOrError(ButtonValue_1.Text),
                        NewForm(FormEditValue_1),
                        EditForm(FormEditValue_1)
                    );Navigate(
                        EditValue_1,
                        None,
                        {
                            ArgMetricId: Value(LabelMetricId_2.Text),
                            ArgMetricName: ThisItem.MetricTypeLookup.Value,
                            ArgMetricType: ThisItem.DeepLinkMetricType.ValueType.Value,
                            ArgFactMetric: ThisItem.factMetric1,
                            ArgUpdateMethod: ThisItem.DeepLinkMetricType.UpdateMethod
                        }
                    )*/
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =If(icon_IndivMetricTrendDn.Visible || icon_IndivMetricTrendSame.Visible || icon_IndivMetricTrendUp.Visible, 4, 0)
                PaddingTop: =0
                PressedColor: =Color.White
                PressedFill: =ColorFade(Self.Fill, 25%)
                RadiusBottomLeft: =15
                RadiusBottomRight: =15
                RadiusTopLeft: =15
                RadiusTopRight: =15
                Size: =10
                Text: |-
                    =If(
                        IsBlankOrError(ThisItem.ProductMetrics1.pm_ID) || ThisItem.factMetric1.fm_IsNotApplicable,
                        "Not Applicable",
                        Switch(
                            ThisItem.mtd_MetricValueType, 
                            "Boolean",
                                If(
                                    IsBlank(ThisItem.factMetric1.fm_ValueYesNo), 
                                        //|| (ThisItem.factMetric1.Created=ThisItem.factMetric1.Modified && ThisItem.mtd_MetricUpdateMethod="Manual"),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    Switch(ThisItem.factMetric1.fm_ValueYesNo, 1, "Yes", 0, "No")
                                ),
                    
                            "Number",
                                If(
                                    IsBlank(ThisItem.factMetric1.fm_ValueNumber),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    If(
                                        ThisItem.factMetric1.fm_ValueNumber<1.0, 
                                        Text(Round(ThisItem.factMetric1.fm_ValueNumber, 4)),
                                        If(
                                            EndsWith(Text(ThisItem.factMetric1.fm_ValueNumber, "[$-en-US]###,###,###.##"), "."),
                                            Text(ThisItem.factMetric1.fm_ValueNumber, "[$-en-US]###,###,###"),
                                            Text(ThisItem.factMetric1.fm_ValueNumber, "[$-en-US]###,###,###.00")
                                        )
                                    )
                                ),
                            
                            "Percentage",
                                If(
                                    IsBlank(ThisItem.factMetric1.fm_ValueNumber),
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    If(
                                        ThisItem.factMetric1.fm_ValueNumber = 0, 
                                        "0.00%",
                                        Text(ThisItem.factMetric1.fm_ValueNumber, "[$-en-US]#.00") & "%"
                                    )
                                ),
                            
                            "Text",
                                If(
                                    IsBlank(ThisItem.factMetric1.fm_ValueText) || Trim(ThisItem.factMetric1.fm_ValueText)="", 
                                    If(ThisItem.ProductMetrics1.pm_IsMetricActive, "...", "Not Applicable"),
                                    ThisItem.factMetric1.fm_ValueText
                                )
                        )
                    )
                Tooltip: |-
                    =If(
                        (ThisItem.mtd_MetricValueType="Number" || ThisItem.mtd_MetricValueType="Percentage") 
                            && Self.Text <> "Not Applicable",
                    
                        "YellowRangeStart:" & If(!IsBlankOrError(ThisItem.factMetric1.fm_YellowTargetStart), ThisItem.factMetric1.fm_YellowTargetStart & If(ThisItem.mtd_MetricValueType="Percentage", "%"), "??") 
                            & " | GreenRangeStart:" & If(!IsBlankOrError(ThisItem.factMetric1.fm_GreenTargetStart), ThisItem.factMetric1.fm_GreenTargetStart & If(ThisItem.mtd_MetricValueType="Percentage", "%"), "??") 
                            & " | Target:" & ThisItem.factMetric1.fm_TargetNumber & If(ThisItem.mtd_MetricValueType="Percentage", "%"),
                    
                        ""
                    )
                Width: =125
                X: =bttn_MetricPreOne.X + bttn_MetricPreOne.Width
                Y: =(bttn_MetricTarget.Height - Self.Height) * 0.50
                ZIndex: =15

            icon_IndivMetricTrendSame As rectangle:
                Fill: =RGBA(166, 166, 166, 1)
                Height: =4
                OnSelect: =Select(Parent)
                Visible: |-
                    =If(
                        IsBlankOrError(ThisItem.factMetric_LastPeriod.fm_ID)
                            ||ThisItem.mtd_MetricValueType="Text" ||ThisItem.mtd_MetricValueType="Boolean"
                            ||IsBlankOrError(ThisItem.ProductMetrics1.pm_ID) 
                            ||bttn_MetricCurrValue.Text="..." ||bttn_MetricCurrValue.Text="Not Applicable", 
                        false,
                        If(
                            ThisItem.mtd_MetricValueType="Number" || ThisItem.mtd_MetricValueType="Percentage",
                            If(
                                ThisItem.factMetric1.fm_ValueNumber - ThisItem.factMetric_LastPeriod.fm_ValueNumber=0, 
                                true , 
                                false 
                            )
                        )
                    )
                Width: =12
                X: =icon_IndivMetricTrendUp.X
                Y: =bttn_MetricTarget.Height * 0.5 - 1
                ZIndex: =16

            icon_IndivMetricTrendUp As triangle:
                Fill: =RGBA(0, 204, 0, 1) // RGBA(33,150,166,1)
                Height: =icon_IndivMetricTrendDn.Height
                OnSelect: =Select(Parent)
                Visible: |-
                    =If(
                        IsBlankOrError(ThisItem.factMetric_LastPeriod.fm_ID)
                            ||ThisItem.mtd_MetricValueType="Text"||ThisItem.mtd_MetricValueType="Boolean"
                            ||bttn_MetricCurrValue.Text="..." ||bttn_MetricCurrValue.Text="Not Applicable", 
                        false,
                        If(
                            ThisItem.mtd_MetricValueType="Number" || ThisItem.mtd_MetricValueType="Percentage",
                            If(
                                ThisItem.mtd_IsTrendDown,
                                If(
                                    ThisItem.factMetric1.fm_ValueNumber - ThisItem.factMetric_LastPeriod.fm_ValueNumber < 0, 
                                    true , 
                                    false 
                                ),
                                If(
                                    ThisItem.factMetric1.fm_ValueNumber - ThisItem.factMetric_LastPeriod.fm_ValueNumber > 0, 
                                    true , 
                                    false 
                                )
                            )
                        )
                    )
                Width: =icon_IndivMetricTrendDn.Width
                X: =icon_IndivMetricTrendDn.X
                Y: =bttn_MetricTarget.Height * 0.5 - 6
                ZIndex: =17

            icon_IndivMetricTrendDn As image:
                Height: =12
                Image: =Red_Triangle
                ImagePosition: =ImagePosition.Fill
                Visible: |-
                    =If(
                        IsBlankOrError(ThisItem.factMetric_LastPeriod.fm_ID)
                            ||ThisItem.mtd_MetricValueType="Text"||ThisItem.mtd_MetricValueType="Boolean"
                            ||bttn_MetricCurrValue.Text="..." ||bttn_MetricCurrValue.Text="Not Applicable", 
                        false,
                        If(
                            ThisItem.mtd_MetricValueType="Number" || ThisItem.mtd_MetricValueType="Percentage",
                            If(
                                Text(ThisItem.mtd_IsTrendDown)="Yes",
                                If(
                                    ThisItem.factMetric1.fm_ValueNumber - ThisItem.factMetric_LastPeriod.fm_ValueNumber > 0, 
                                    true , 
                                    false 
                                ),
                                If(
                                    ThisItem.factMetric1.fm_ValueNumber - ThisItem.factMetric_LastPeriod.fm_ValueNumber < 0, 
                                    true , 
                                    false 
                                )
                            )
                        )
                    )
                Width: =14
                X: =bttn_MetricCurrValue.X + bttn_MetricCurrValue.Width - 20
                Y: =icon_IndivMetricTrendUp.Y
                ZIndex: =18

            EachRowHeight As label:
                DisplayMode: =DisplayMode.View
                Height: =bttn_MetricTarget.Height
                OnSelect: =Select(Parent)
                Size: =10
                Text: =bttn_MetricTarget.Height 
                Visible: =false
                ZIndex: =19

            MetricWgt As label:
                Font: =FONTNAME
                Height: =20
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =8
                Text: |-
                    =//Each Metric's Earned Weight to calculate HealthScore (Smiley Faces). Pattern: {ProductMetricID|EarnedWeight|DefaultWeight}.
                    If(
                        bttn_MetricTarget.Text = "Not Available" 
                            || bttn_MetricCurrValue.Text = "Not Applicable",
                    
                        ThisItem.ProductMetrics1.pm_ID & "|NA|NA",
                        
                        Switch(
                            bttn_MetricCurrValue.Fill,
                            REDCOLOR,
                            ThisItem.ProductMetrics1.pm_ID & "|0",
                            GREENCOLOR,
                            ThisItem.ProductMetrics1.pm_ID & "|" & ThisItem.mtd_MetricTypeHealthWeight,
                            YellowTargetColor,
                            ThisItem.ProductMetrics1.pm_ID & "|" & (ThisItem.mtd_MetricTypeHealthWeight*YellowRangeHealthWeight),
                            Color.White,
                            ThisItem.ProductMetrics1.pm_ID & "|0",
                            RGBA(0, 0, 0, 0),
                            ThisItem.ProductMetrics1.pm_ID & "|0"
                        ) 
                        & "|" & ThisItem.mtd_MetricTypeHealthWeight
                    )
                Visible: =false
                Width: =100
                X: =800
                Y: =5
                ZIndex: =20

            Label_MetricTypeName As label:
                AutoHeight: =true
                Color: =RGBA(0, 0, 0, 0) //If(bttn_MetricValue.Text="Not Applicable", GRAYCOLOR, RGBA(0, 0, 0, 1))
                Fill: =RGBA(0, 0, 0, 0) //If(ThisItem.ProductMetrics1.pm_ID = varSelectedItem.ProductMetrics1.pm_ID, ROWHIGHLIGHTCOLOR, RGBA(0, 0, 0, 0))
                Font: =FontStyle
                FontWeight: =FontWeight.Normal //If(ThisItem.ProductMetrics1.pm_ID = varSelectedItem.ProductMetrics1.pm_ID, FontWeight.Semibold, FontWeight.Normal)
                Height: =60
                HoverColor: =RGBA(0, 0, 0, 0) // If(bttn_MetricValue.Text="Not Applicable", GRAYCOLOR, RGBA(0, 0, 0, 1))
                HoverFill: =
                OnSelect: =Select(Parent)
                Size: =bttn_MetricTypeName.Size + 0.5
                Text: =ThisItem.mtd_MetricTypeName
                Tooltip: =
                Width: |
                    =If(!var_ShowQuarters_BS, 
                    Parent.Width * 0.25 - If(ThisItem.mtd_IsTrendDown, Image_TrendingDown.Width, 0),
                    Parent.Width - bttn_MetricCurrValue.Width - bttn_MetricPreOne.Width - bttn_MetricPreTwo.Width - bttn_MetricQS_Prev3.Width - bttn_MetricQS_Prev2.Width - bttn_MetricQS_Prev1.Width - bttn_MetricQS_Curr.Width - bttn_MetricTarget.Width- If(ThisItem.mtd_IsTrendDown, Image_TrendingDown.Width, 0))
                X: =If(ThisItem.mtd_IsTrendDown, Image_TrendingDown.Width, 0)
                Y: =0 //Max(0, (Label_factMetric_Comment.Height-Self.Height)/2)
                ZIndex: =21

            bttn_MetricTypeName As button:
                Align: =Align.Left
                BorderColor: =RGBA(237, 237, 237, 1)
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =If(bttn_MetricCurrValue.Text="Not Applicable", GRAYCOLOR, RGBA(0, 0, 0, 1))
                Fill: =If(ThisItem.ProductMetrics1.pm_ID = varSelectedItem.ProductMetrics1.pm_ID, RowSelectedColor, RGBA(0, 0, 0, 0))
                Font: =FontStyle
                FontWeight: =If(ThisItem.ProductMetrics1.pm_ID = varSelectedItem.ProductMetrics1.pm_ID, FontWeight.Semibold, FontWeight.Normal)
                Height: =bttn_MetricTarget.Height //Max(bttn_MetricTarget.Height, Value(EachRowHeight.Text))
                HoverColor: =If(bttn_MetricCurrValue.Text="Not Applicable", GRAYCOLOR, RGBA(0, 0, 0, 1))
                HoverFill: =
                OnSelect: =Select(Parent)
                PressedColor: =Color.White
                PressedFill: =ColorFade(RowSelectedColor, 25%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: =ThisItem.mtd_MetricTypeName
                Tooltip: |-
                    =If(
                        IsBlankOrError(ThisItem.ProductMetrics1.pm_ID),
                        "This metric has been deleted for this product by the admin.",
                        Concatenate(
                            "MetricId-",
                            Text(ThisItem.ProductMetrics1.pm_ID),
                            ": ",
                            ThisItem.mtd_MetricTypeName
                        ) & If(!ThisItem.ProductMetrics1.pm_IsMetricActive, " [inactive]")
                    ) 
                Width: =Label_MetricTypeName.Width
                X: =If(ThisItem.mtd_IsTrendDown, Image_TrendingDown.Width, 0)
                Y: =0 //Max(0, (Label_factMetric_Comment.Height-Self.Height)/2)
                ZIndex: =22

            btn_BoardSrn_Subgroup_Top As button:
                BorderColor: =
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Fill: =RGBA(0,0,0,0)
                Height: =bttn_MetricTarget.Height
                HoverFill: =RowHoverOverColor
                OnSelect: =Select(Parent)
                PressedBorderColor: =
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Text: =""
                Tooltip: |-
                    =If(
                        IsBlankOrError(ThisItem.ProductMetrics1.pm_ID),
                        "This metric has been deleted for this product by the admin.",
                        Concatenate(
                            "ProductMetricID-",
                            Text(ThisItem.ProductMetrics1.pm_ID),
                            ": ",
                            ThisItem.mtd_MetricTypeName
                        ) & If(!ThisItem.ProductMetrics1.pm_IsMetricActive, " [inactive]")
                    ) & ".   "
                    & If(
                        (ThisItem.mtd_MetricValueType="Number" || ThisItem.mtd_MetricValueType="Percentage") 
                            && bttn_MetricCurrValue.Text <> "Not Applicable" && bttn_MetricTarget.Text <> "Not Available",
                    
                        "Yellow Range Start: " & If(!IsBlankOrError(ThisItem.factMetric1.fm_YellowTargetStart), ThisItem.factMetric1.fm_YellowTargetStart & If(ThisItem.mtd_MetricValueType="Percentage", "%"), "...") 
                            & " | Green Range Start: " & If(!IsBlankOrError(ThisItem.factMetric1.fm_GreenTargetStart), ThisItem.factMetric1.fm_GreenTargetStart & If(ThisItem.mtd_MetricValueType="Percentage", "%"), "...") 
                            & " | Target: " & ThisItem.factMetric1.fm_TargetNumber & If(ThisItem.mtd_MetricValueType="Percentage", "%"),
                    
                        ""
                    )
                Width: =Parent.Width
                ZIndex: =23

            icon_NotAv_Info As icon.Information:
                Color: =If(ThisItem.mtd_UpdateMethod = "Manual", BLUECOLOR, REDWARNINGCOLOR)
                Height: =15
                Icon: =If(ThisItem.mtd_UpdateMethod="Manual", Icon.Information, Icon.Warning) 
                OnSelect: =Select(Parent)
                Tooltip: |-
                    =Switch(
                        ThisItem.mtd_UpdateMethod,
                        "Manual", "Click on the Value column to provide data for this manual metric.",
                        "BAG IA automated", "Data for this automated metric is not available for current period"
                    )
                Visible: =bttn_MetricCurrValue.Text = "..."
                Width: =20
                X: =bttn_MetricCurrValue.X + 35
                Y: =icon_IndivMetricTrendUp.Y
                ZIndex: =24

        html_MetricType_Subgroup As htmlViewer:
            AutoHeight: =true
            Color: =RGBA(0, 0, 0, 0)
            Font: =FONTNAME
            HtmlText: =ThisItem.mtd_MetricTypeSubgroup
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingTop: =0
            Size: =10
            Width: =Label_MetricType_SubGroup.Width
            X: =btn_BS_Stage.X
            Y: =Label_MetricType_SubGroup.Y
            ZIndex: =3

        Label_MetricType_SubGroup As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Font: =FontStyle
            Height: =Max(glry_BoardSrn_Subgroup.Height, html_MetricType_Subgroup.Height)
            OnSelect: =Select(Parent)
            PaddingLeft: =10
            Size: =10
            Text: =ThisItem.mtd_MetricTypeSubgroup
            Visible: =If(Self.Height>5, true, false)
            Width: |
                =If (var_ShowQuarters_BS, If (App.Width > 1300, 300, 200), 180)
            X: =btn_BS_Stage.X
            Y: =If(btn_BS_Stage.Height = 0, 0, btn_BS_Stage.Y+btn_BS_Stage.Height)
            ZIndex: =4

        btn_BS_Stage As button:
            Align: =Align.Left
            BorderColor: =
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =DisplayMode.View
            Fill: =SUBGROUPCOLOR
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            Height: |-
                =If(
                    IsBlankOrError(
                        LookUp(
                            colStageOrder, 
                            ThisRecord.mtd_BoardTypeID = var_BoardTypeSelected_Home
                                && ThisRecord.mtd_TemplateID = var_BoardSrn_FMB_TemplateID
                                && ThisRecord.FirstDisplayOrder_ByStage = ThisItem.SubgroupDisplayOrder
                                && ThisRecord.mtd_MetricStage = ThisItem.mtd_MetricStage
                        ).FirstDisplayOrder_ByStage
                    ),
                    0,
                    30
                )
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: =Select(Parent)
            PaddingLeft: =15
            PressedBorderColor: =Self.BorderColor
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: |
                =20
            RadiusTopRight: |-
                =
                Self.RadiusTopLeft
            Size: =10.5
            Text: =ThisItem.mtd_MetricStage
            Tooltip: |-
                =If(
                    IsAdmin || IsCoordinator || var_IsDeveloper,
                    "(Highest Display Order: " & ThisItem.SubgroupDisplayOrder & ")",
                    ""
                )
            Width: |+
                =Parent.Width - 28
                
            X: =8
            Y: =Self.X
            ZIndex: =5

    glry_BoardSrn_Headers_QS As gallery.galleryVertical:
        Fill: =ColorFade(BlueNaviHightLightBackground, 50%)
        Height: =45
        Items: =clln_BoardSrn_Header
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(280, Self.Width - 60), Min(280, Self.Height - 60))
        Visible: =!var_Display_ExecSummaryContainer
        Width: =App.Width - Self.X
        X: =LeftNavi_BoardSrn.Width 
        Y: =ctn_BS_TopBanner.Y + ctn_BS_TopBanner.Height + 5
        ZIndex: =8

        bs_header_Target_QS As label:
            Color: =bs_header_MetricName_QS.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName_QS.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =15
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName_QS.Size
            Text: |-
                =If(!var_ShowQuarters_BS, 
                        ThisItem.TargetName, 
                        
                        "FY" & 
                        var_Year_BS
                        & " " & ThisItem.TargetName
                
                )
            Width: =190
            X: =bs_header_QS_Current.X + bs_header_QS_Current.Width
            ZIndex: =1

        bs_header_QS_Current As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: |
                ="FY" & var_Year_BS  & " " & If(var_CurrentQuarterMonth_BS >= 7 && var_CurrentQuarterMonth_BS <= 9, "Q1", 
                    If(var_CurrentQuarterMonth_BS >= 10 && var_CurrentQuarterMonth_BS <= 12, "Q2",
                        If(var_CurrentQuarterMonth_BS >= 1 && var_CurrentQuarterMonth_BS <= 3, "Q3",
                            If(var_CurrentQuarterMonth_BS >= 4 && var_CurrentQuarterMonth_BS <= 6, "Q4")
                        )
                    )
                )
            Width: =100
            X: =bs_header_QS_Prev1.X + bs_header_QS_Prev1.Width
            ZIndex: =2

        bs_header_QS_Prev1 As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: |
                ="FY" & If(var_PreviousQuaterMonth_BS >= 7, Right(Year(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -4, TimeUnit.Months)), 2) + 1, Right(Year(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -4, TimeUnit.Months)), 2))  & " " & If(var_PreviousQuaterMonth_BS >= 7 && var_PreviousQuaterMonth_BS <= 9, "Q1", 
                    If(var_PreviousQuaterMonth_BS >= 10 && var_PreviousQuaterMonth_BS <= 12, "Q2",
                        If(var_PreviousQuaterMonth_BS >= 1 && var_PreviousQuaterMonth_BS <= 3, "Q3",
                            If(var_PreviousQuaterMonth_BS >= 4 && var_PreviousQuaterMonth_BS <= 6, "Q4")
                        )
                    )
                )
            Width: =bs_header_QS_Current.Width
            X: =bs_header_QS_Prev2.X + bs_header_QS_Prev2.Width
            ZIndex: =3

        bs_header_QS_Prev2 As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: |
                ="FY" & If(var_Past2QuaterMonth_BS >= 7, Right(Year(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -7, TimeUnit.Months)), 2) + 1, Right(Year(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -7, TimeUnit.Months)), 2))  & " " & If(var_Past2QuaterMonth_BS >= 7 && var_Past2QuaterMonth_BS <= 9, "Q1", 
                    If(var_Past2QuaterMonth_BS >= 10 && var_Past2QuaterMonth_BS <= 12, "Q2",
                        If(var_Past2QuaterMonth_BS >= 1 && var_Past2QuaterMonth_BS <= 3, "Q3",
                            If(var_Past2QuaterMonth_BS >= 4 && var_Past2QuaterMonth_BS <= 6, "Q4")
                        )
                    )
                )
            Width: =bs_header_QS_Current.Width
            X: =bs_header_QS_Prev3.X + bs_header_QS_Prev3.Width
            ZIndex: =4

        bs_header_QS_Prev3 As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: |
                ="FY" & If(var_Past3QuaterMonth_BS >= 7, Right(Year(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -10, TimeUnit.Months)), 2) + 1, Right(Year(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -10, TimeUnit.Months)), 2))  & " " & If(var_Past3QuaterMonth_BS >= 7 && var_Past3QuaterMonth_BS <= 9, "Q1", 
                    If(var_Past3QuaterMonth_BS >= 10 && var_Past3QuaterMonth_BS <= 12, "Q2",
                        If(var_Past3QuaterMonth_BS >= 1 && var_Past3QuaterMonth_BS <= 3, "Q3",
                            If(var_Past3QuaterMonth_BS >= 4 && var_Past3QuaterMonth_BS <= 6, "Q4")
                        )
                    )
                )
            Width: =bs_header_QS_Current.Width
            X: =bs_header_CurrValue_QS.X + bs_header_CurrValue_QS.Width
            ZIndex: =5

        bs_header_CurrValue_QS As label:
            Align: =Align.Center
            Color: =bs_header_MetricName_QS.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName_QS.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName_QS.Size
            Text: =Text(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -1, TimeUnit.Months), "mmm yyyy")
            Width: =bttn_MetricCurrValue.Width
            X: =bs_header_PreOne_QS.X + bs_header_PreOne_QS.Width
            ZIndex: =6

        img_MetricIcon_ToolTip_BS_QS As image:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =
            Height: =Parent.Height
            Image: =icon_Information
            OnSelect: |-
                =If(
                    var_Show_ctn_TopTooltip_BS = true, 
                    Set(var_Show_ctn_TopTooltip_BS, false), 
                    Set(var_Show_ctn_TopTooltip_BS, true)
                )
            PaddingBottom: =6
            PaddingLeft: =7
            PaddingTop: =6
            Tooltip: =If(var_Show_ctn_TopTooltip_BS, "Hide", "Show")
            Width: =30
            X: =bs_header_CurrValue_QS.X + bs_header_CurrValue_QS.Width - Self.Width
            ZIndex: =7

        bs_header_PreOne_QS As label:
            Align: =Align.Center
            BorderStyle: =BorderStyle.None
            Color: =bs_header_MetricName_QS.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName_QS.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName_QS.Size
            Text: =Text(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -2, TimeUnit.Months), "mmm yyyy")
            Width: =bttn_MetricPreTwo.Width
            X: =bs_header_PreTwo_QS.X + bs_header_PreTwo_QS.Width
            ZIndex: =8

        bs_header_PreTwo_QS As label:
            Align: =Align.Center
            Color: =bs_header_MetricName_QS.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName_QS.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName_QS.Size
            Text: =Text(DateAdd(dpdn_BS_ReviewQuarter.Selected.max_date, -3, TimeUnit.Months), "mmm yyyy")
            Width: =bttn_MetricPreTwo.Width
            X: =bs_header_MetricName_QS.X + bs_header_MetricName_QS.Width
            ZIndex: =9

        bs_header_MetricName_QS As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =11
            Text: =ThisItem.MetricName
            Width: =Parent.Width - bs_header_CurrValue.Width - bs_header_PreTwo.Width - bs_header_PreTwo.Width - bs_header_QS_Current.Width - bs_header_QS_Prev1.Width - bs_header_QS_Prev2.Width - bs_header_QS_Prev3.Width - bs_header_Target_QS.Width - Self.X - 30
            X: =bs_header_Obj_QS.X + bs_header_Obj_QS.Width
            ZIndex: =10

        bs_header_Obj_QS As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =20
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName_QS.Size
            Text: ="Objective"
            Width: =If (App.Width > 1300, 300, 200)
            ZIndex: =11

    glry_BoardSrn_Headers As gallery.galleryVertical:
        Fill: =ColorFade(BlueNaviHightLightBackground, 50%)
        Height: =45
        Items: =clln_BoardSrn_Header
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(280, Self.Width - 60), Min(280, Self.Height - 60))
        Visible: =!var_Display_ExecSummaryContainer && !var_ShowQuarters_BS
        Width: =App.Width - Self.X
        X: =LeftNavi_BoardSrn.Width 
        Y: =ctn_BS_TopBanner.Y + ctn_BS_TopBanner.Height + 5
        ZIndex: =9

        bs_header_Comment As label:
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: =ThisItem.CommentName
            Tooltip: ="Comment"
            Width: =Parent.Width - Self.X
            X: =bs_header_Trend.X + bs_header_Trend.Width
            ZIndex: =1

        bs_header_Target As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: =ThisItem.TargetName
            Width: =125
            X: =bs_header_CurrValue.X + bs_header_CurrValue.Width
            ZIndex: =2

        bs_header_Trend As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =bs_header_CurrValue.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: ="Trend (6mo)"
            Width: =LineChart_In_Glry.Width + 10
            X: =bs_header_Target.X + bs_header_Target.Width
            ZIndex: =3

        bs_header_CurrValue As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: =Text(DateAdd(dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate, -1, TimeUnit.Months), "mmm yyyy")
            Width: =bttn_MetricCurrValue.Width
            X: =bs_header_PreOne.X + bs_header_PreOne.Width
            ZIndex: =4

        img_MetricIcon_ToolTip_BS As image:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Fill: =
            Height: =30
            Image: =icon_Information
            OnSelect: |-
                =If(
                    var_Show_ctn_TopTooltip_BS = true, 
                    Set(var_Show_ctn_TopTooltip_BS, false), 
                    Set(var_Show_ctn_TopTooltip_BS, true)
                )
            PaddingBottom: =6
            PaddingLeft: =7
            PaddingTop: =6
            Tooltip: =If(var_Show_ctn_TopTooltip_BS, "Hide", "Show")
            Width: =30
            X: =bs_header_CurrValue.X + bs_header_CurrValue.Width - Self.Width
            Y: =(bs_header_CurrValue.Height - Self.Height) * 0.50
            ZIndex: =5

        bs_header_PreOne As label:
            Align: =Align.Center
            BorderStyle: =BorderStyle.None
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: =Text(DateAdd(dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate, -2, TimeUnit.Months), "mmm yyyy")
            Width: =bttn_MetricPreTwo.Width
            X: =bs_header_PreTwo.X + bs_header_PreTwo.Width
            ZIndex: =6

        bs_header_PreTwo As label:
            Align: =Align.Center
            Color: =bs_header_MetricName.Color
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: =Text(DateAdd(dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate, -3, TimeUnit.Months), "mmm yyyy")
            Width: =bttn_MetricPreTwo.Width
            X: =bs_header_MetricName.X + bs_header_MetricName.Width
            ZIndex: =7

        bs_header_MetricName As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =11
            Text: =ThisItem.MetricName
            Width: =(Parent.Width - Self.X) * 0.25
            X: =bs_header_Obj.X + bs_header_Obj.Width
            ZIndex: =8

        bs_header_Obj As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            Height: =Parent.Height
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =20
            PaddingRight: =0
            PaddingTop: =0
            Size: =bs_header_MetricName.Size
            Text: ="Objective"
            Width: |
                =If (var_ShowQuarters_BS, If (App.Width > 1300, 300, 200), 180)
            ZIndex: =9

    Rectangle_EditMetric_Mask As rectangle:
        DisplayMode: =DisplayMode.View
        Fill: =RGBA(255, 255, 255, 0.7)
        Height: =App.Height - Self.Y
        Visible: =If(IsDetailsSelected && !IsBlankOrError(varSelectedItem.ProductMetrics1.pm_ID), true, false)
        Width: =glry_BoardSrn_Headers.Width
        X: =glry_BoardSrn_Headers.X
        Y: =glry_BoardSrn_Headers.Y //glry_BoardSrn_Headers.Y + glry_BoardSrn_Headers.Height
        ZIndex: =10

    ctn_BS_TopBanner As groupContainer.manualLayoutContainer:
        Height: =100
        Width: =App.Width - Self.X
        X: =LeftNavi_BoardSrn.Width
        Y: =BAGIAAppHeader_BS.Height
        ZIndex: =11

        dpdn_BS_ReviewQuarter As dropdown:
            BorderColor: =
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            ChevronBackground: =Self.Fill
            ChevronFill: =RGBA(0, 0, 0, 1)
            ChevronHoverBackground: =BlueControlLightBackground
            ChevronHoverFill: =RGBA(0, 0, 0, 1)
            Default: |-
                =If(Month(DateAdd(LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).ReviewDate, -1, TimeUnit.Months)) >=7, 
                                                "FY" & Right(Year(DateAdd(LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).ReviewDate, -1, TimeUnit.Months)), 2) + 1 & " " &
                                                If(Month(DateAdd(LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).ReviewDate, -1, TimeUnit.Months)) <=9, "Q1", "Q2"),
                                                "FY" & Right(Year(DateAdd(LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).ReviewDate, -1, TimeUnit.Months)), 2) & " " &
                                                If(Month(DateAdd(LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).ReviewDate, -1, TimeUnit.Months)) >= 4, "Q4", "Q3")
                                            )
            Fill: =GrayControlBackground
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverFill: =Self.ChevronHoverBackground
            Items: |
                =Sort(
                    AddColumns(
                        GroupBy(
                            AddColumns(Filter(clln_factMetricBoard, fmb_ProductID=var_BoardSrn_ProductID && fmb_MetricBoardTypeID=var_BoardTypeSelected_Home),
                                "quarter", If(Month(DateAdd(fmb_ReviewLockDate, -1, TimeUnit.Months)) >=7, 
                                    "FY" & Right(Year(DateAdd(fmb_ReviewLockDate, -1, TimeUnit.Months)), 2) + 1 & " " &
                                    If(Month(DateAdd(fmb_ReviewLockDate, -1, TimeUnit.Months)) <=9, "Q1", "Q2"),
                
                                    "FY" & Right(Year(DateAdd(fmb_ReviewLockDate, -1, TimeUnit.Months)), 2) & " " &
                                    If(Month(DateAdd(fmb_ReviewLockDate, -1, TimeUnit.Months)) >= 4, "Q4", "Q3")
                                )
                            ), 
                        "quarter", "data"),
                    "max_date", First(Sort(data, fmb_ReviewLockDate, SortOrder.Descending)).fmb_ReviewLockDate ),
                "max_date", SortOrder.Descending)
            OnChange: |+
                =Set(var_ctn_IfGalleryLoaded_ForceOn, true); //This variable will be set to false within Timer_Capture_factMetricBoard_ID.
                
                Concurrent(
                    Set(var_LastGalleryText, Blank()),
                    Set(var_Display_SmileyFaceContainer, false),
                    Set(var_Display_ExecSummaryContainer, false),
                    Set(var_UserViewMyAccess_BS, false),
                    Select(Close_BS_MetricContainer),
                    Set(var_CurrentQuarterMonth_BS, Month(DateAdd(Self.Selected.max_date, -1, TimeUnit.Months))),
                    Set(var_PreviousQuaterMonth_BS, Month(DateAdd(Self.Selected.max_date, -4, TimeUnit.Months))),
                    Set(var_Past2QuaterMonth_BS, Month(DateAdd(Self.Selected.max_date, -7, TimeUnit.Months))),
                    Set(var_Past3QuaterMonth_BS, Month(DateAdd(Self.Selected.max_date, -10, TimeUnit.Months))),
                    Set(var_CurrentQuarterYear_BS, Year(DateAdd(Self.Selected.max_date, -1, TimeUnit.Months))),
                    Set(var_PreviousQuaterYear_BS, Year(DateAdd(Self.Selected.max_date, -4, TimeUnit.Months))),
                    Set(var_Past2QuaterYear_BS, Year(DateAdd(Self.Selected.max_date, -7, TimeUnit.Months))),
                    Set(var_Past3QuaterYear_BS, Year(DateAdd(Self.Selected.max_date, -10, TimeUnit.Months))),
                    Set(var_Year_BS, If(Month(DateAdd(Self.Selected.max_date, -1, TimeUnit.Months)) >= 7, Right(Year(DateAdd(Self.Selected.max_date, -1, TimeUnit.Months)), 2) + 1, Right(Year(DateAdd(Self.Selected.max_date, -1, TimeUnit.Months)), 2))),
                    Patch(
                        varLeftNavOptions,
                        LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID),
                        {
                            ReviewDate: DateValue(Text(First(Sort(Self.Selected.data, fmb_ReviewLockDate, SortOrder.Descending)).fmb_ReviewLockDate, DateTimeFormat.ShortDate))
                        }
                    )
                );
                
                Set(StartTimer_Capture_factMetricBoard_ID, true); //Start the timer - Timer_Capture_factMetricBoard_ID
                
            OnSelect: =
            PaddingBottom: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedColor: =BlueControlDarkBackground
            PressedFill: =BlueControlLightBackground
            SelectionFill: =BlueNaviHightLightBackground
            Size: =11
            Visible: =Label_BS_ReviewQuarter.Visible
            Width: =155
            X: =Label_BS_ReviewQuarter.X + Label_BS_ReviewQuarter.Width
            Y: =Label_BS_ReviewQuarter.Y
            ZIndex: =1

        Label_BS_ReviewQuarter As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =30
            PaddingRight: =0
            Size: =14
            Text: |-
                ="Review Quarter:
                "
            Visible: =var_ShowQuarters_BS
            X: =Parent.Width - 360
            Y: =15
            ZIndex: =2

        img_BS_ReviewMonth_Info As image:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisplayMode: =DisplayMode.View
            Height: =Self.Width
            Image: =icon_Information
            PaddingBottom: =6
            PaddingLeft: =5
            PaddingRight: =5
            PaddingTop: =6
            Tooltip: ="Data as of " & Text(DateAdd(Date(dpdn_BS_ReviewMonth.Selected.fmb_ReviewYear, dpdn_BS_ReviewMonth.Selected.fmb_ReviewMonth, 1), -1, TimeUnit.Days), "mmmm dd, yyyy")
            Width: =30
            X: =dpdn_BS_ReviewMonth.X + dpdn_BS_ReviewMonth.Width + 8
            Y: =dpdn_BS_ReviewMonth.Y + 2
            ZIndex: =3

        dpdn_BS_ReviewMonth As dropdown:
            BorderColor: =
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            ChevronBackground: =Self.Fill
            ChevronFill: =RGBA(0, 0, 0, 1)
            ChevronHoverBackground: =BlueControlLightBackground
            ChevronHoverFill: =RGBA(0, 0, 0, 1)
            Default: =Text(DateAdd(LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).ReviewDate, -1, TimeUnit.Months), "mmmm yyyy")
            Fill: =GrayControlBackground
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverFill: =Self.ChevronHoverBackground
            Items: |-
                =AddColumns(
                    ShowColumns(
                        Sort(
                            Filter(clln_factMetricBoard, fmb_ProductID=var_BoardSrn_ProductID && fmb_MetricBoardTypeID=var_BoardTypeSelected_Home), 
                            fmb_ReviewLockDate, 
                            SortOrder.Descending
                        ),
                    "fmb_ReviewLockDate", "fmb_ReviewYear", "fmb_ReviewMonth", "fmb_ID"
                    ),
                    "Review_Month", Text(ThisRecord.fmb_ReviewLockDate, "mmmm yyyy"),
                    "displayReviewMonth", Text(DateAdd(fmb_ReviewLockDate, -1, TimeUnit.Months), "mmmm yyyy")
                )
            OnChange: |
                =
                Set(var_ctn_IfGalleryLoaded_ForceOn, true); //This variable will be set to false within Timer_Capture_factMetricBoard_ID.
                
                Concurrent(
                    Set(var_LastGalleryText, Blank()),
                    Set(var_Display_SmileyFaceContainer, false),
                    Set(var_Display_ExecSummaryContainer, false),
                    Set(var_UserViewMyAccess_BS, false),
                    Select(Close_BS_MetricContainer),
                    Set(var_CurrentQuarterMonth_BS, Month(DateAdd(Self.Selected.fmb_ReviewLockDate, -1, TimeUnit.Months))),
                    Set(var_PreviousQuaterMonth_BS, Month(DateAdd(Self.Selected.fmb_ReviewLockDate, -4, TimeUnit.Months))),
                    Set(var_Past2QuaterMonth_BS, Month(DateAdd(Self.Selected.fmb_ReviewLockDate, -7, TimeUnit.Months))),
                    Set(var_Past3QuaterMonth_BS, Month(DateAdd(Self.Selected.fmb_ReviewLockDate, -10, TimeUnit.Months))),
                    Set(var_CurrentQuarterYear_BS, Year(DateAdd(Self.Selected.fmb_ReviewLockDate, -1, TimeUnit.Months))),
                    Set(var_PreviousQuaterYear_BS, Year(DateAdd(Self.Selected.fmb_ReviewLockDate, -4, TimeUnit.Months))),
                    Set(var_Past2QuaterYear_BS, Year(DateAdd(Self.Selected.fmb_ReviewLockDate, -7, TimeUnit.Months))),
                    Set(var_Past3QuaterYear_BS, Year(DateAdd(Self.Selected.fmb_ReviewLockDate, -10, TimeUnit.Months))),
                    Set(var_Year_BS, If(Month(DateAdd(Self.Selected.fmb_ReviewLockDate, -1, TimeUnit.Months)) >= 7, Right(Year(DateAdd(Self.Selected.fmb_ReviewLockDate, -1, TimeUnit.Months)), 2) + 1, Right(Year(DateAdd(Self.Selected.fmb_ReviewLockDate, -1, TimeUnit.Months)), 2))),
                
                    Patch(
                        varLeftNavOptions,
                        LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID),
                        {
                            ReviewDate: DateValue(Text(Self.Selected.fmb_ReviewLockDate, DateTimeFormat.ShortDate))
                        }
                    )
                );
                
                Set(StartTimer_Capture_factMetricBoard_ID, true); //Start the timer - Timer_Capture_factMetricBoard_ID
            OnSelect: =
            PaddingBottom: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedColor: =BlueControlDarkBackground
            PressedFill: =BlueControlLightBackground
            SelectionFill: =BlueNaviHightLightBackground
            Size: =11
            Visible: =!var_ShowQuarters_BS
            Width: =155
            X: =Label_BS_ReviewMonth.X + Label_BS_ReviewMonth.Width
            Y: =Label_BS_ReviewMonth.Y
            ZIndex: =4

        Label_BS_ReviewMonth As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =30
            PaddingRight: =0
            Size: =14
            Text: |-
                ="Review Month:"
            Visible: =!var_ShowQuarters_BS
            Width: =145
            X: =Parent.Width - 360
            Y: =15
            ZIndex: =5

        Image_SmileyFace As image:
            Height: =Self.Width
            Image: |-
                =LookUp(
                    clln_MetricBoardHealth,
                    Rating=bttn_HealthRating.Text
                ).Image
            ImagePosition: =ImagePosition.Stretch
            OnSelect: =Select(bttn_HealthRating)
            PaddingBottom: =2
            PaddingLeft: =2
            PaddingRight: =2
            PaddingTop: =2
            Visible: =!ctn_IfGalleryLoaded.Visible
            Width: =25
            X: =Label_BS_HealthRating.X + Label_BS_HealthRating.Width
            Y: =Label_BS_HealthRating.Y
            ZIndex: =6

        bttn_HealthRating As button:
            Align: =Align.Left
            BorderThickness: =0
            Color: =LEFTNAVBKGDCOLOR
            Fill: =RGBA(0, 0, 0, 0)
            Font: =FontStyle
            FontWeight: =FontWeight.Normal
            Height: =Image_SmileyFace.Height
            HoverColor: =Color.Blue
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(var_Display_SmileyFaceContainer, !var_Display_SmileyFaceContainer);
                
                //If you change anything here as followed, please also change the component, Timer_IfGalleryLoaded.OnTimerEnd.
                ClearCollect(
                    clln_MetricWeight,
                    {
                        MetricID: Blank(),
                        EarnedWeight: Blank(),
                        DefaultWeight: Blank()
                    }
                );
                ForAll(
                    glry_BoardSrn_Group.AllItems.glry_BoardSrn_Subgroup,
                    ForAll(
                        ThisRecord.glry_BoardSrn_Subgroup.AllItems.MetricWgt,
                        Collect(
                            clln_MetricWeight,//clln_MetricWeight,
                            {
                                MetricID: First(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value})).Result,
                                EarnedWeight: Last(FirstN(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value}), 2)).Result,
                                DefaultWeight: Last(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value})).Result
                            }
                        )
                    )
                );
            PressedColor: =Color.Purple
            PressedFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =11
            Text: |
                =If(
                    IsBlankOrError(LookUp(ReviewHub_FactMetricBoards, craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_fmb_healthscore),
                    LookUp(clln_MetricBoardHealth, MinScore<=-999).Rating,
                    LookUp(
                        clln_MetricBoardHealth,
                        MinScore <= LookUp(ReviewHub_FactMetricBoards, craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_fmb_healthscore 
                            && MaxScore > LookUp(ReviewHub_FactMetricBoards, craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_fmb_healthscore
                    ).Rating
                )
            Underline: =true
            Visible: =!ctn_IfGalleryLoaded.Visible
            Width: =170
            X: =Image_SmileyFace.X + Image_SmileyFace.Width
            Y: =Image_SmileyFace.Y
            ZIndex: =7

        bttn_HealthRating_Loading As image:
            Height: =btn_Apply_Target.Height
            Image: =img_loading
            Visible: =ctn_IfGalleryLoaded.Visible
            Width: =Self.Height
            X: =Label_BS_HealthRating.X + Label_BS_HealthRating.Width
            Y: =Label_BS_HealthRating.Y 
            ZIndex: =8

        Label_BS_HealthRating As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =25
            PaddingRight: =0
            Size: =10
            Text: |-
                ="Health Rating:"
            Width: =102
            X: =Parent.Width - 360
            Y: |
                =Label_BS_ReviewMonth.Y + Label_BS_ReviewMonth.Height + 15
            ZIndex: =9

        html_BS_TopBanner As htmlViewer:
            BorderColor: =RGBA(0, 0, 0, 0)
            Font: =FontStyle
            Height: =Parent.Height - Self.Y
            HtmlText: |-
                ="<font style='font-weight: 700; font-size: 22px;'>" 
                & If(Img_BS_Product.Visible, LookUp(glry_LeftNavi_7.AllItems, ThisRecord.ID = varSelectedBoardId).Title, "") //When image is not visible, it means user go to a different product screen. The data will be loading for 1~2 seconds. 
                & "</font><br>"
                & "<font style='font-weight: 600; font-size: 14px; line-height:100%;'>Review Owner: </font>" 
                & If(ctn_IfGalleryLoaded.Visible, "", LookUp(clln_factMetricBoard, ThisRecord.fmb_ID = var_BoardSrn_FMB_ID).fmb_ReviewOwnerName)
                & "<br><font style='font-weight: 600; font-size: 14px; line-height:180%;'>Stakeholders: </font>" 
            PaddingBottom: =0
            PaddingLeft: =15
            PaddingTop: =0
            Width: =Parent.Width * 0.7 - Self.X
            X: =Img_BS_Product.X + Img_BS_Product.Width
            Y: =10
            ZIndex: =10

        lbl_BS_EditStakeholders As label:
            AutoHeight: =true
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 0)
            DisplayMode: =DisplayMode.View
            Font: =FontStyle
            FontWeight: =btn_BS_EditStakeholders.FontWeight
            PaddingTop: =3
            Size: =btn_BS_EditStakeholders.Size
            Text: =btn_BS_EditStakeholders.Text
            Width: =btn_BS_EditStakeholders.Width
            X: =btn_BS_EditStakeholders.X
            Y: =btn_BS_EditStakeholders.Y
            ZIndex: =11

        btn_BS_EditStakeholders As button:
            Align: =Align.Left
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =LEFTNAVBKGDCOLOR
            DisabledBorderColor: =RGBA(255, 255, 255, 1)
            DisabledColor: =RGBA(109, 49, 162, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =FontStyle
            FontWeight: =FontWeight.Normal
            Height: =lbl_BS_EditStakeholders.Height
            HoverColor: =Color.Blue
            HoverFill: =Self.Fill
            OnSelect: |-
                =ClearCollect(
                    clln_BoardSrn_Stakeholders,
                    DropColumns(
                    AddColumns(
                        AddColumns(
                            Filter(
                                ForAll(Split(LookUp(ReviewHub_Stakeholders, ThisRecord.craf2_Product.craf2_productid = var_BoardSrn_ProductID && ThisRecord.craf2_BoardType.craf2_boardtypeid = var_BoardTypeSelected_Home).ProductStakeholderEmails, "|"), {Result: ThisRecord.Value}), 
                                !IsBlank(ThisRecord.Result)
                            ),
                            "UserProfileV2_Rec", 
                            If(
                                IsBlankOrError(Office365Users.UserProfileV2(ThisRecord.Result)),
                                {
                                    displayName: "*User_Profile_Invalid",
                                    givenName: "",
                                    surname: "",
                                    department: ""
                                },
                                Office365Users.UserProfileV2(ThisRecord.Result)
                            )
                        ),
                        "DisplayName", UserProfileV2_Rec.displayName,
                        "GivenName", UserProfileV2_Rec.givenName,
                        "Surname", UserProfileV2_Rec.surname,
                        "Department", UserProfileV2_Rec.department
                    ), "UserProfileV2_Rec"
                    )
                );
                
                Concurrent(
                    If(
                        Toggle_ctn_Stakeholders = true,
                        Select(btn_Close_ctn_Stakeholders), //Set(Toggle_ctn_Stakeholders, false); Set(ctn_Stakeholder_Logs, Blank()),
                        Set(Toggle_ctn_Stakeholders, true); Set(ctn_Stakeholder_Logs, Blank())
                    ),
                    Set(var_Display_ExecSummaryContainer, false)
                )
            PaddingTop: =3
            PressedColor: =Color.Purple
            PressedFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =11
            Text: |-
                =Left(
                    Substitute(
                        LookUp(
                            ReviewHub_Stakeholders,
                            ThisRecord.craf2_Product.craf2_productid = var_BoardSrn_ProductID && ThisRecord.craf2_BoardType.craf2_boardtypeid = var_BoardTypeSelected_Home
                        ).StakeholderNames, 
                        "|", 
                        ", "
                    ),
                    100
                )
                &
                If(
                    Len(
                        Substitute(
                            LookUp(
                                ReviewHub_Stakeholders,
                                ThisRecord.craf2_Product.craf2_productid = var_BoardSrn_ProductID && ThisRecord.craf2_BoardType.craf2_boardtypeid = var_BoardTypeSelected_Home
                            ).StakeholderNames, 
                            "|", 
                            ", "
                        )
                    ) > 100, 
                    "...  ",   
                    "  "
                )
                & 
                If(
                    IsAdmin 
                        || IsReviewOwner
                        || IsStakeholder 
                        || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes),
                    "  (Manage Stakeholders)", " (View All Stakeholders)"
                )
            Tooltip: =Self.Text
            Underline: =true
            VerticalAlign: =VerticalAlign.Top
            Visible: =info_Stakeholders_Loading.Visible = false && html_BS_TopBanner.Visible
            Width: =Min(930, bttn_ExecSummary_BS.X - Self.X - 10)
            X: =185
            Y: =58
            ZIndex: =12

        info_ReviewOwner_Loading As image:
            DisplayMode: =DisplayMode.View
            Height: =btn_Apply_Target.Height
            Image: =img_loading
            Visible: =ctn_IfGalleryLoaded.Visible && html_BS_TopBanner.Visible
            Width: =Self.Height
            X: =info_Stakeholders_Loading.X + 10
            Y: =info_Stakeholders_Loading.Y - 23
            ZIndex: =13

        info_Stakeholders_Loading As image:
            DisplayMode: =DisplayMode.View
            Height: =btn_Apply_Target.Height
            Image: =img_loading
            Visible: =ctn_IfGalleryLoaded.Visible && html_BS_TopBanner.Visible
            Width: =Self.Height
            X: =btn_BS_EditStakeholders.X + 6
            Y: =btn_BS_EditStakeholders.Y + 2
            ZIndex: =14

        NoImage_BS As label:
            Align: =Align.Center
            BorderColor: =GrayBorderDark
            BorderThickness: =2
            Color: =RGBA(149, 149, 149, 1)
            FocusedBorderThickness: =1
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =Img_BS_Product.Height
            OnSelect: =
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =18
            Text: =Upper(Left(LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).Title, 2))
            Tooltip: =
            Visible: |-
                =If(
                    IsBlankOrError(LookUp(ReviewHub_Products, ThisRecord.ProductID = var_BoardSrn_ProductID).LogoImage), //When on scorecard tab, the product logo is missing, 
                    true,
                    false
                )
            Width: =Img_BS_Product.Width
            X: =Img_BS_Product.X
            Y: =Img_BS_Product.Y
            ZIndex: =15

        Img_BS_Product As image:
            Height: =Self.Width
            Image: |-
                =If(
                    IsBlankOrError(LookUp(ReviewHub_Products, ThisRecord.ProductID = var_BoardSrn_ProductID).LogoImage), //When on scorecard tab, the product logo is missing, 
                    Blank(),
                    LookUp(glry_LeftNavi_7.AllItems, ThisRecord.ID = varSelectedBoardId && ThisRecord.ID > 0).img_LN_7.Image
                )
            Width: =70
            X: =15
            Y: =(Parent.Height - Self.Height) * 0.50 - 2
            ZIndex: =16

        img_ExecSummary_BS As image:
            Height: =bttn_ExecSummary_BS.Height
            Image: =icon_ExecSummary
            OnSelect: =Select(bttn_ExecSummary_BS)
            PaddingBottom: =1
            PaddingTop: =1
            Visible: =bttn_ExecSummary_BS.Visible
            Width: =Self.Height
            X: |
                =bttn_ExecSummary_BS.X
            Y: =bttn_ExecSummary_BS.Y
            ZIndex: =17

        tgl_BS_SwitchDisplay As toggleSwitch:
            Default: =var_ShowQuarters_BS
            FalseFill: =GrayControlBackground
            FalseHoverFill: =BlueControlLightBackground
            FalseText: ="Quarterly View"
            FocusedBorderThickness: =0
            Font: =dpdn_BS_ReviewQuarter.Font
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverBorderColor: =Color.White
            OnCheck: |-
                =Set(
                    var_ctn_IfGalleryLoaded_ForceOn,
                    true
                );
                Set(
                    var_ShowQuarters_BS,
                    true
                );
                
                Set(
                    StartTimer_Capture_factMetricBoard_ID,
                    true
                );
                /*
                //Set this time to sleep until being triggered next time.
                
                */
            OnUncheck: =Set(var_ShowQuarters_BS, false)
            PressedBorderColor: =Color.White
            Size: =14
            Tooltip: ="Switch between a monthly view with more details and a quarterly view"
            TrueFill: =GrayControlBackground
            TrueHoverFill: =BlueControlLightBackground
            TrueText: ="Quarterly View"
            Width: =192
            X: =If (var_ShowQuarters_BS, Label_BS_ReviewQuarter.X - tgl_BS_SwitchDisplay.Width - 15, Label_BS_ReviewMonth.X - tgl_BS_SwitchDisplay.Width - 15)
            Y: =Label_BS_ReviewQuarter.Y
            ZIndex: =19

        tgl_BS_Monthly_Label As label:
            Font: =dpdn_BS_ReviewQuarter.Font
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =14
            Text: ="Monthly View"
            Width: =129
            X: =tgl_BS_SwitchDisplay.X - Self.Width
            Y: =Label_BS_ReviewQuarter.Y
            ZIndex: =20

        bttn_ExecSummary_BS As button:
            Align: =Align.Left
            AutoDisableOnSelect: =false
            BorderColor: =Self.Fill
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =LEFTNAVBKGDCOLOR
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(109, 49, 162, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =FontStyle
            FontWeight: =FontWeight.Normal
            Height: =Image_SmileyFace.Height
            HoverColor: =Color.Blue
            HoverFill: =Self.Fill
            OnSelect: |-
                =Concurrent(
                    Set(var_Display_ExecSummaryContainer, !var_Display_ExecSummaryContainer),
                    Set(Toggle_ctn_Stakeholders, false),
                    Set(var_ctn_IfExecSummary_ForceOn, true),
                    Set(var_MetricToAdd_Colors, Blank()),
                    Clear(clln_ExecSummaryMetricType),
                    Clear(clln_HighlightMetricType),
                    Clear(clln_LowlightMetricType),
                    Clear(clln_NolightMetricType)
                );
                
                ForAll(
                    glry_BoardSrn_Group.AllItems.glry_BoardSrn_Subgroup, 
                    ForAll(
                        Filter(ThisRecord.glry_BoardSrn_Subgroup.AllItems, bttn_MetricCurrValue.Text<>"..." && bttn_MetricCurrValue.Text<>"Not Applicable"), 
                        //Metrics with non-available or non-applicable values should not be added to Exec Summary. 
                        Collect(
                            clln_ExecSummaryMetricType,
                            {
                                FactMetricID: ThisRecord.factMetric1.fm_ID,
                                MetricTypeID: ThisRecord.mtd_MetricTypeId,
                                MetricValueType: ThisRecord.mtd_MetricValueType,
                                MetricTypeName: ThisRecord.mtd_MetricTypeName,
                                MetricTypeShortName: ThisRecord.mtd_MetricShortName,
                                MetricValue: ThisRecord.bttn_MetricCurrValue.Text,
                                MetricValueFill: ThisRecord.bttn_MetricCurrValue.ContentLanguage, //Color Code: G/R/Y/W 
                                MetricComment: ThisRecord.bttn_factMetric_Comment.Text,
                                MetricTarget: If(ThisRecord.bttn_MetricTarget.Text="Not Available" || ThisRecord.bttn_MetricTarget.Text="Not Applicable", Blank(), ThisRecord.bttn_MetricTarget.Text),
                                YellowRangeTarget: ThisRecord.factMetric1.fm_YellowTargetStart,
                                GreenRangeTarget: ThisRecord.factMetric1.fm_GreenTargetStart,
                                IsTrendDown: Text(ThisRecord.mtd_IsTrendDown)
                            }
                        )
                    )
                );
                
                If(
                    IsBlankOrError(LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID)), 
                    //If never generated, get all records having Metric Values into [clln_HighlightMetricType] and [clln_LowlightMetricType].
                    Concurrent(
                        Collect(clln_HighlightMetricType, Filter(clln_ExecSummaryMetricType, MetricValueFill="G")),
                        Collect(clln_LowlightMetricType, Filter(clln_ExecSummaryMetricType, MetricValueFill="R")),
                        Collect(clln_NolightMetricType, Filter(clln_ExecSummaryMetricType, MetricValueFill="W" || MetricValueFill="Y"))
                    ),
                
                    //If find records in the [ReviewHub_FactExecutiveSummaries] table.
                    Concurrent(
                        ClearCollect(
                            clln_HLRecord_FES, 
                            AddColumns(
                                ForAll(Split(LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_highlightmetrictypeid, "|"), {Result: ThisRecord.Value}),
                                "HighLight_MetricTypeID", Value(First(ForAll(Split(ThisRecord.Result, "-"), {Result: ThisRecord.Value})).Result),
                                "HighLight_FactMetricID", Value(Last(ForAll(Split(ThisRecord.Result, "-"), {Result: ThisRecord.Value})).Result)
                            )
                        ),
                        ClearCollect(
                            clln_LLRecord_FES,
                            AddColumns(
                                ForAll(Split(LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_lowlightmetrictypeid, "|"), {Result: ThisRecord.Value}),
                                "LowLight_MetricTypeID", Value(First(ForAll(Split(ThisRecord.Result, "-"), {Result: ThisRecord.Value})).Result),
                                "LowLight_FactMetricID", Value(Last(ForAll(Split(ThisRecord.Result, "-"), {Result: ThisRecord.Value})).Result)
                            )
                        )
                    );
                    Concurrent(
                        Collect(
                            clln_HighlightMetricType,
                            Filter(
                                clln_ExecSummaryMetricType, 
                                MetricTypeID in clln_HLRecord_FES.HighLight_MetricTypeID
                            )
                        ),
                        Collect(
                            clln_LowlightMetricType,
                            Filter(
                                clln_ExecSummaryMetricType,
                                MetricTypeID in clln_LLRecord_FES.LowLight_MetricTypeID
                            )
                        ),
                        Collect(
                            clln_NolightMetricType,
                            Filter(
                                clln_ExecSummaryMetricType, 
                                !(MetricTypeID in clln_HLRecord_FES.HighLight_MetricTypeID) && !(MetricTypeID in clln_LLRecord_FES.LowLight_MetricTypeID)
                            )
                        )
                    )
                );
                
                Set(var_ctn_IfExecSummary_ForceOn, false)
            PaddingBottom: =0
            PaddingLeft: =30
            PaddingRight: =0
            PaddingTop: =0
            PressedColor: =Color.Purple
            PressedFill: =Self.Fill
            RadiusBottomLeft: =15
            RadiusBottomRight: =15
            RadiusTopLeft: =15
            RadiusTopRight: =15
            Size: =11
            Text: |-
                =If(
                    IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), 
                    If(
                        IsBlankOrError(LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID)),
                        If(var_Display_ExecSummaryContainer, "View Scorecard", "Create Executive Summary"),
                        If(var_Display_ExecSummaryContainer, "View Scorecard", "Edit Executive Summary")
                    ),
                    If(
                        IsBlankOrError(LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID)),
                        "",
                        If(var_Display_ExecSummaryContainer, "View Scorecard", "View Executive Summary")
                    )
                )
            Underline: =true
            Visible: |-
                =If(
                    ctn_IfGalleryLoaded.Visible,
                    false,
                    Self.Text <> "" && !IsBlankOrError(Self.Text)
                )
            Width: =225
            X: |
                =Label_BS_HealthRating.X - Self.Width - 40
            Y: =Label_BS_HealthRating.Y 
            ZIndex: =21

    ctn_TopTooltip_BS As groupContainer.manualLayoutContainer:
        Height: =icon_ManualMetrics_BS.Height * 2
        Visible: =var_Show_ctn_TopTooltip_BS
        Width: =note_AutoMetric_BS.Y + note_AutoMetric_BS.Width
        X: |
            =glry_BoardSrn_Headers.X + bs_header_Obj.Width + bs_header_PreOne.Width * 2 + (glry_BoardSrn_Headers.Width - bs_header_Obj.Width) * 0.25 + 10
        Y: =glry_BoardSrn_Headers.Y - 30
        ZIndex: =12

        Back_TopToolTip_BS As button:
            BorderColor: =GRAYCOLOR
            DisabledBorderColor: =Self.BorderColor
            DisabledColor: =RGBA(255, 255, 255, 1)
            DisabledFill: =RGBA(255, 255, 255, 1)
            DisplayMode: =DisplayMode.Disabled
            Height: =Parent.Height - 4
            Text: =""
            Width: =Parent.Width - 4
            X: =2
            Y: =2
            ZIndex: =1

        note_AutoMetric_BS As label:
            Color: =RGBA(149, 149, 149, 1)
            DisplayMode: =DisplayMode.View
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =icon_ManualMetrics_BS.Height
            PaddingBottom: =4
            PaddingLeft: =note_ManualMetric_BS.PaddingLeft
            PaddingTop: =0
            Size: =10
            Text: ="Automated Metric"
            Width: =125
            X: =icon_AutoMetrics_BS.X + icon_AutoMetrics_BS.Width
            Y: =icon_AutoMetrics_BS.Y
            ZIndex: =2

        icon_AutoMetrics_BS As icon.Information:
            Color: =REDWARNINGCOLOR
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =Self.Color
            DisplayMode: =DisplayMode.Disabled
            Height: =20
            Icon: =Icon.Warning
            PaddingBottom: =4
            Tooltip: ="This is an automated metric icon."
            Width: =20
            X: =icon_ManualMetrics_BS.X
            Y: =icon_ManualMetrics_BS.Y + icon_ManualMetrics_BS.Height
            ZIndex: =3

        note_ManualMetric_BS As label:
            Color: =RGBA(149, 149, 149, 1)
            DisplayMode: =DisplayMode.View
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =icon_ManualMetrics_BS.Height
            PaddingBottom: =0
            PaddingLeft: =2
            PaddingRight: =0
            PaddingTop: =4
            Size: =10
            Text: ="Manual Metric"
            Width: =115
            X: =icon_ManualMetrics_BS.X + icon_ManualMetrics_BS.Width
            Y: =icon_ManualMetrics_BS.Y
            ZIndex: =4

        icon_ManualMetrics_BS As icon.Information:
            Color: =BlueControlDarkBackground
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =BlueControlDarkBackground
            DisplayMode: =DisplayMode.Disabled
            Height: =20
            Icon: =Icon.Information
            PaddingTop: =4
            Tooltip: ="This is a manual metric icon."
            Width: =20
            X: =6
            ZIndex: =5

    ctn_EditMetric As groupContainer.manualLayoutContainer:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Fill: =RGBA(0,0,0,0) //GrayCanvasBackground
        Height: =App.Height - Self.Y - 3
        Visible: =!var_Display_ExecSummaryContainer
        Width: =App.Width - Self.X
        X: =LeftNavi_BoardSrn.Width
        Y: =If(IsDetailsSelected && !IsBlankOrError(varSelectedItem.ProductMetrics1.pm_ID), App.Height * 0.38, App.Height-1)
        ZIndex: =13

        lbl_EditMetric_Back As label:
            BorderColor: =ctn_EditMetric_TopBar.Fill
            BorderThickness: =2
            Color: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =Self.BorderColor
            DisabledColor: =Self.Color
            DisabledFill: =Self.Fill
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(255, 255, 255, 1)
            Height: =Parent.Height - Self.Y - 1
            Size: =10
            Text: =""
            Width: =ctn_EditMetric_TopBar.Width - 2
            X: =ctn_EditMetric_TopBar.X + 1
            Y: =ctn_EditMetric_TopBar.Y + ctn_EditMetric_TopBar.Height
            ZIndex: =1

        ctn_EditMetric_TopBar As button:
            Align: =Align.Left
            Color: =bs_header_MetricName.Color
            DisplayMode: =DisplayMode.View
            Fill: =glry_BoardSrn_Headers.Fill
            Font: =FontStyle
            FontWeight: =bs_header_MetricName.FontWeight
            Height: =35
            PaddingLeft: =If(varSelectedItem.mtd_IsTrendDown, img_EditMetric_TrendDown.Width + 10, 15)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: |
                =20
            RadiusTopRight: |
                =20
            Size: =bs_header_MetricName.Size
            Text: =varSelectedItem.mtd_MetricTypeName & If(!IsBlank(varSelectedItem.mtd_MetricDeprecatedDate), " (Deprecated on " & varSelectedItem.mtd_MetricDeprecatedDate & ")")
            Width: =Parent.Width - Self.X - 10
            X: =10
            ZIndex: =2

        img_EditMetric_TrendDown As image:
            DisplayMode: =DisplayMode.View
            Height: =ctn_EditMetric_TopBar.Height
            Image: =TrendingDown
            PaddingLeft: =5
            PaddingRight: =5
            PaddingTop: =4
            Tooltip: ="This is a trending down metric. (The smaller value represents the better performance.)"
            Visible: =varSelectedItem.mtd_IsTrendDown
            Width: =ctn_EditMetric_TopBar.Height
            X: |
                =ctn_EditMetric_TopBar.X + 5
            Y: =ctn_EditMetric_TopBar.Y
            ZIndex: =3

        btn_ViewAccessLower_BS As button:
            BorderColor: =Self.Fill
            Color: =BlueControlDarkBackground
            DisplayMode: =If(ctn_IfGalleryLoaded.Visible, DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =ctn_EditMetric_TopBar.Height
            HoverColor: =Color.Purple
            HoverFill: =Self.Fill
            OnSelect: =Set(var_UserViewMyAccess_BS, true)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="View My Access"
            Underline: =true
            Visible: =true 
            Width: =130
            X: =Close_BS_MetricContainer.X - Self.Width - 15
            Y: =Close_BS_MetricContainer.Y
            ZIndex: =4

        Close_BS_MetricContainer As icon.Add:
            BorderColor: =Self.Fill
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0,0,0,0)
            Height: =ctn_EditMetric_TopBar.Height
            HoverBorderColor: =Self.BorderColor
            HoverColor: =BlueControlDarkBackground
            Icon: =Icon.Cancel
            OnSelect: |+
                =Concurrent(
                    Set(IsDetailsSelected, false), 
                    Set(var_Update_AutoFM, false),
                    Set(var_EditMetric_LastModified, false),
                    Set(var_btn_Apply_Target_Succeed, Blank()),
                    Set(var_btn_Apply_MetricValue_Succeed, Blank())
                );
                
            PaddingBottom: =5
            PaddingLeft: =6
            PaddingRight: =6
            PaddingTop: =8
            PressedColor: =Color.Purple
            Tooltip: ="Close"
            Width: =Self.Height + 8
            X: =ctn_EditMetric_TopBar.X + ctn_EditMetric_TopBar.Width - Self.Width 
            Y: =ctn_EditMetric_TopBar.Y 
            ZIndex: =5

        ctn_IndivMetricHistory As groupContainer.manualLayoutContainer:
            BorderColor: =EditMetric_Desc.BorderColor
            BorderThickness: =1
            Fill: =EditMetric_Desc.Fill
            Height: =EditMetric_Desc.Height
            Width: =lbl_EditMetric_Back.Width - EditMetric_Desc.Width - EditMetric_Value.Width - EditMetric_Target.Width - 1
            X: =EditMetric_Target.X + EditMetric_Target.Width
            Y: =EditMetric_Desc.Y
            ZIndex: =6

            glry_IndivMetricHistory As gallery.variableTemplateHeightGallery:
                Default: |-
                    =LookUp(
                        Filter(
                            clln_IndivMetricHistory,
                            IsNotApplicable = "No"
                        ),
                        ThisRecord.ReviewYear = dpdn_BS_ReviewMonth.Selected.fmb_ReviewYear 
                            && ThisRecord.ReviewMonth = dpdn_BS_ReviewMonth.Selected.fmb_ReviewMonth 
                    )
                Height: =Parent.Height - Self.Y //If(IsMetricCommentSelectedforCopy, Parent.Height - Self.Y - ctn_CopyComment.Height, Parent.Height - Self.Y)
                Items: |-
                    =Sort(
                        Filter(
                            clln_IndivMetricHistory,
                            IsNotApplicable = "No"
                        ),
                        ReviewMonthStart,
                        SortOrder.Descending
                    )
                Layout: =Layout.Vertical
                OnSelect: =Set(IsMetricCommentSelectedforCopy, true);
                TemplatePadding: =0
                TemplateSize: =30
                Width: =Parent.Width
                X: =MetricHistory_TargetHeader.X
                Y: =MetricHistory_ValueHeader.Y + MetricHistory_ValueHeader.Height
                ZIndex: =1

                Value_For_AdjustHeight As label:
                    Align: =Align.Center
                    AutoHeight: =true
                    Color: =RGBA(0, 0, 0, 0)
                    Font: =FontStyle
                    Height: =30
                    OnSelect: =Select(Parent)
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =7
                    Size: =10
                    Text: =MetricHistory_Value.Text
                    Width: =MetricHistory_Value.Width
                    X: =MetricHistory_Value.X
                    ZIndex: =1

                Target_For_AdjustHeight As label:
                    Align: =Align.Center
                    AutoHeight: =true
                    Color: =RGBA(0, 0, 0, 0)
                    Font: =FontStyle
                    Height: =30
                    OnSelect: =Select(Parent)
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =7
                    Size: =10
                    Text: =MetricHistory_Target.Text
                    Width: =MetricHistory_TargetHeader.Width
                    ZIndex: =2

                MetricHistory_Comment As button:
                    Align: =Align.Left
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =MetricHistory_Value.Color
                    Fill: =If(ThisItem.IsSelected, RowHoverOverColor, RGBA(0, 0, 0, 0))
                    Font: =FontStyle
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =MetricHistory_Target.Height
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RowHoverOverColor
                    OnSelect: =Select(Parent)
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =7
                    PressedColor: =Self.Color
                    PressedFill: =ColorFade(TABLEHEADERCOLOR, 50%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Text: =ThisItem.fm_Comment
                    Tooltip: =ThisItem.fm_Comment
                    VerticalAlign: =VerticalAlign.Top
                    Visible: =!var_TargetIsYearly_BS
                    Width: =MetricHistory_CommentHeader.Width
                    X: =MetricHistory_Date.X + MetricHistory_Date.Width
                    ZIndex: =3

                MetricHistory_Date As button:
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =MetricHistory_Value.Color
                    Fill: =If(ThisItem.IsSelected, RowHoverOverColor, RGBA(0, 0, 0, 0))
                    Font: =FontStyle
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =MetricHistory_Target.Height
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RowHoverOverColor
                    OnSelect: =Select(Parent)
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =7
                    PressedColor: =Self.Color
                    PressedFill: =ColorFade(TABLEHEADERCOLOR, 50%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Text: =Text(DateAdd(ThisItem.ReviewMonthStart, -1, TimeUnit.Months), "mmm-yyyy")
                    Tooltip: |-
                        ="Value Date: " & Text(ThisItem.fm_ValueDate, "mm/dd/yyyy")
                    Width: =MetricHistory_DateHeader.Width
                    X: =MetricHistory_Value.X + MetricHistory_Value.Width
                    ZIndex: =4

                MetricHistory_Value As button:
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =If(Self.Text = "N/A", GRAYCOLOR, RGBA(0, 0, 0, 1))
                    Fill: =If(ThisItem.IsSelected, RowHoverOverColor, RGBA(0, 0, 0, 0))
                    Font: =FontStyle
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =MetricHistory_Target.Height
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RowHoverOverColor
                    OnSelect: =Select(Parent)
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =7
                    PressedColor: =Self.Color
                    PressedFill: =ColorFade(TABLEHEADERCOLOR, 50%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Text: |-
                        =If(
                            IsBlankOrError(ThisItem.MetricValue) || Trim(ThisItem.MetricValue) = "" || ThisItem.MetricValue="...",
                            If(
                                ThisItem.IsNotApplicable = "Yes", "N/A", "..."
                            ),
                            If(
                                varSelectedItem.mtd_MetricValueType="Percentage" && !IsBlank(ThisItem.MetricValue), 
                                Concatenate(Text(ThisItem.MetricValue), "%"), 
                                ThisItem.MetricValue
                            )
                        )
                    Tooltip: |-
                        =If(
                            Self.Text = "N/A",
                            "Not Applicable",
                            If(
                                Self.Text = "...",
                                "Data Not Available",
                                ThisItem.MetricValue
                            )
                        )
                    Width: =MetricHistory_ValueHeader.Width
                    X: =MetricHistory_Target.X + MetricHistory_Target.Width
                    ZIndex: =5

                MetricHistory_Target As button:
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =If(Self.Text = "N/A", GRAYCOLOR, RGBA(0, 0, 0, 1))
                    Fill: =If(ThisItem.IsSelected, RowHoverOverColor, RGBA(0, 0, 0, 0))
                    Font: =FontStyle
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Max(Target_For_AdjustHeight.Height, Value_For_AdjustHeight.Height)
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RowHoverOverColor
                    OnSelect: =Select(Parent)
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =7
                    PressedColor: =Self.Color
                    PressedFill: =ColorFade(TABLEHEADERCOLOR, 50%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Text: |-
                        =If(
                            varSelectedItem.mtd_MetricValueType = "Percentage" && !IsBlank(ThisItem.MetricTarget),
                            Concatenate(
                                Text(ThisItem.MetricTarget),
                                "%"
                            ),
                            If(IsBlank(ThisItem.MetricTarget), "...", ThisItem.MetricTarget)
                        )
                    Tooltip: |-
                        =If(
                            Self.Text = "N/A",
                            "Not Applicable",
                            If(
                                Self.Text = "...",
                                "Target Not Available",
                                ThisItem.MetricTarget
                            )
                        )
                    Width: =MetricHistory_ValueHeader.Width
                    ZIndex: =6

            LineChart_IndivMetricHistory As lineChart:
                DisplayMode: =DisplayMode.View
                Font: =FontStyle
                Height: =200
                ItemColorSet: =[GRAYCOLOR, RGBA(0, 204, 255, 1)]
                Items: |-
                    =If(
                        IsBlank(IMH_MaxTarget) && IsBlank(IMH_MinTarget), 
                        //When all targets are not available, copy metric values to targets so it looks like 1 line in the chart (line for values). Otherwise, there will be error in the chart.  
                        LastN(
                            RenameColumns(
                                ShowColumns(
                                    AddColumns(
                                        Filter(
                                            clln_IndivMetricHistory, 
                                            ThisRecord.MetricValue <> "N/A" 
                                                && ThisRecord.ReviewMonthStart<=dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                                        ),
                                        "MonthName",
                                        Text(
                                            DateAdd(ThisRecord.ReviewMonthStart, -1, TimeUnit.Months),
                                            "mmm-yy"
                                        ),
                                        "DummyMetricTarget", //copy metric values to targets
                                        MetricValue
                                    ),
                                    "MonthName",
                                    "DummyMetricTarget",
                                    "MetricValue"
                                ),
                                "DummyMetricTarget",
                                "Target",
                                "MetricValue",
                                "Value"
                            ),
                            dpdn_ShowMonths.Selected.Value
                        ),
                        LastN(
                            RenameColumns(
                                ShowColumns(
                                    AddColumns(
                                        Filter(
                                            clln_IndivMetricHistory, 
                                            ThisRecord.MetricValue <> "N/A" 
                                                && ThisRecord.ReviewMonthStart<=dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate
                                        ),
                                        "MonthName",
                                        Text(
                                            DateAdd(ThisRecord.ReviewMonthStart, -1, TimeUnit.Months),
                                            "mmm-yy"
                                        )
                                    ),
                                    "MonthName",
                                    "MetricTarget",
                                    "MetricValue"
                                ),
                                "MetricTarget",
                                "Target",
                                "MetricValue",
                                "Value"
                            ),
                            dpdn_ShowMonths.Selected.Value
                        )
                    )
                NumberOfSeries: =2
                PaddingLeft: =5
                PaddingRight: =10
                Size: =10
                Visible: =varSelectedItem.mtd_MetricValueType = "Number" || varSelectedItem.mtd_MetricValueType = "Percentage"
                Width: =Parent.Width
                XLabelAngle: =20
                Y: =lbl_IndivMetricHistory.Y + lbl_IndivMetricHistory.Height - 10
                YAxisMax: |-
                    =If(
                        varSelectedItem.mtd_MetricValueType = "Percentage", 
                        Min(Max(IMH_MaxTarget, IMH_MaxValue) + 10, 102),
                        If(
                            varSelectedItem.mtd_MetricValueType = "Number" && IMH_MinTarget=IMH_MaxTarget && IMH_MaxTarget=IMH_MinValue && IMH_MinValue=IMH_MaxValue,
                            IMH_MaxTarget + 2
                        )
                    )
                YAxisMin: |-
                    =If(
                        varSelectedItem.mtd_MetricValueType = "Percentage", 
                        If(
                            IsBlank(IMH_MaxTarget) && IsBlank(IMH_MinTarget), //When all targets are not available
                            IMH_MinValue - 10,
                            Max(Min(IMH_MinTarget, IMH_MinValue) - 10, -2)
                        ),
                        If(
                            varSelectedItem.mtd_MetricValueType = "Number" && IMH_MinTarget=IMH_MaxTarget && IMH_MaxTarget=IMH_MinValue && IMH_MinValue=IMH_MaxValue, 
                            //if there is only 1 horizontal straight line, this avoids Y-axis show at very tinny grain. 
                            IMH_MinTarget - 2,
                            Min(IMH_MinTarget, IMH_MinValue) - (Max(IMH_MaxTarget, IMH_MaxValue) - Min(IMH_MinTarget, IMH_MinValue))*0.06
                        )
                    )
                ZIndex: =2

            MetricHistory_CommentHeader As label:
                Align: =Align.Center
                BorderColor: =RGBA(255, 255, 255, 1)
                BorderStyle: =BorderStyle.None
                Fill: =SUBGROUPCOLOR
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =25
                Size: =10
                Text: ="Comment 📝"
                Visible: =!var_TargetIsYearly_BS
                Width: =Parent.Width - MetricHistory_TargetHeader.Width - MetricHistory_ValueHeader.Width - MetricHistory_DateHeader.Width
                X: =MetricHistory_DateHeader.X + MetricHistory_DateHeader.Width
                Y: =MetricHistory_DateHeader.Y
                ZIndex: =3

            MetricHistory_DateHeader As label:
                Align: =Align.Center
                BorderColor: =RGBA(255, 255, 255, 1)
                BorderStyle: =BorderStyle.None
                Fill: =SUBGROUPCOLOR
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =25
                Size: =10
                Text: ="Month"
                Width: =If(!var_TargetIsYearly_BS, 85, Parent.Width * 0.4)
                X: =MetricHistory_ValueHeader.X + MetricHistory_ValueHeader.Width
                Y: =MetricHistory_ValueHeader.Y
                ZIndex: =4

            MetricHistory_ValueHeader As label:
                Align: =Align.Center
                BorderColor: =RGBA(255, 255, 255, 1)
                BorderStyle: =BorderStyle.None
                Fill: =SUBGROUPCOLOR
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =25
                Size: =10
                Text: ="Value"
                Width: =If(!var_TargetIsYearly_BS, 80, Parent.Width * 0.3)
                X: =MetricHistory_TargetHeader.X + MetricHistory_TargetHeader.Width
                Y: =If(LineChart_IndivMetricHistory.Visible, TrendChart_Legend.Y + TrendChart_Legend.Height, lbl_IndivMetricHistory.Y + lbl_IndivMetricHistory.Height)
                ZIndex: =5

            MetricHistory_TargetHeader As label:
                Align: =Align.Center
                BorderColor: =RGBA(255, 255, 255, 1)
                BorderStyle: =BorderStyle.None
                Fill: =SUBGROUPCOLOR
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =25
                Size: =10
                Text: ="Target"
                Width: =If(!var_TargetIsYearly_BS, 80, Parent.Width * 0.3)
                Y: =If(LineChart_IndivMetricHistory.Visible, TrendChart_Legend.Y + TrendChart_Legend.Height, lbl_IndivMetricHistory.Y + lbl_IndivMetricHistory.Height)
                ZIndex: =6

            TrendChart_Legend As legend:
                Font: =FontStyle
                Height: =25
                ItemColorSet: =LineChart_IndivMetricHistory.ItemColorSet
                Items: =LineChart_IndivMetricHistory.SeriesLabels
                Size: =9
                Visible: =LineChart_IndivMetricHistory.Visible
                Width: =LineChart_IndivMetricHistory.Width - Self.X
                X: =LineChart_IndivMetricHistory.X + LineChart_IndivMetricHistory.Width * 0.50 - 60
                Y: =LineChart_IndivMetricHistory.Y + LineChart_IndivMetricHistory.Height - 20
                ZIndex: =7

            dpdn_ShowMonths As dropdown:
                BorderColor: =
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                ChevronBackground: =Self.Fill
                ChevronFill: =RGBA(0, 0, 0, 1)
                ChevronHoverBackground: =BlueControlLightBackground
                ChevronHoverFill: =RGBA(0, 0, 0, 1)
                Default: ="6"
                Fill: =GrayControlBackground
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =20
                HoverFill: =Self.ChevronHoverBackground
                Items: |-
                    =Table(
                        {Value: 6},
                        {Value: 12}
                    )
                OnChange: =Select(bttn_LineChart_Variables);
                PaddingBottom: =5
                PaddingLeft: =8
                PaddingTop: =5
                PressedFill: =BlueNaviHightLightBackground
                SelectionFill: =BlueNaviHightLightBackground
                Size: =9
                Visible: =LineChart_IndivMetricHistory.Visible
                Width: =65
                X: =Parent.Width - Self.Width - 35
                Y: =lbl_ShowMonths.Y
                ZIndex: =8

            lbl_ShowMonths As label:
                Align: =Align.Right
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =20
                PaddingLeft: =0
                Size: =9
                Text: |-
                    ="Show months: "
                Visible: =LineChart_IndivMetricHistory.Visible
                Width: =100
                X: =dpdn_ShowMonths.X - Self.Width
                Y: |
                    =lbl_IndivMetricHistory.Y + lbl_IndivMetricHistory.Height - Self.Height - 3
                ZIndex: =9

            lbl_IndivMetricHistory As label:
                Font: =FontStyle
                FontWeight: =FontWeight.Bold
                Height: =30
                PaddingBottom: =0
                PaddingLeft: =10
                PaddingTop: =0
                Size: =11.5
                Text: ="Historical Values"
                Width: =180
                ZIndex: =11

            ctn_CopyComment As groupContainer.manualLayoutContainer:
                BorderColor: =GRAYCOLOR
                BorderThickness: =2
                Fill: =RGBA(255, 255, 255, 1)
                Height: =glry_IndivMetricHistory.Height + MetricHistory_TargetHeader.Height - 5 //Parent.Height * 0.35
                Visible: =IsMetricCommentSelectedforCopy
                Width: =Parent.Width - Self.X * 2
                X: =5
                Y: =Parent.Height - Self.Height - 5
                ZIndex: =12

                txt_CopyComment As text:
                    BorderColor: =LEFTNAVHIGLIGHTCOLOR
                    BorderThickness: =1
                    Color: |-
                        =If(
                            IsBlankOrError(glry_IndivMetricHistory.Selected.fm_Comment) || Trim(glry_IndivMetricHistory.Selected.fm_Comment) = "", 
                            GRAYCOLOR, 
                            RGBA(0, 0, 0, 1)
                        )
                    Default: |-
                        =If(
                            IsBlankOrError(glry_IndivMetricHistory.Selected.fm_Comment) || Trim(glry_IndivMetricHistory.Selected.fm_Comment) = "", 
                            "(No comment)", 
                            glry_IndivMetricHistory.Selected.fm_Comment
                        )
                    DisplayMode: =DisplayMode.View
                    Font: =FontStyle
                    Height: =Parent.Height - Label_CopyTip.Height
                    Mode: =TextMode.MultiLine
                    PaddingBottom: =2
                    PaddingLeft: =2
                    PaddingRight: =2
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Width: =Parent.Width - Self.X - 10
                    X: =10
                    Y: =Label_CopyTip.Y + Label_CopyTip.Height
                    ZIndex: =1

                Icon_CloseCopyComment As icon.CancelBadge:
                    Color: =BlueControlDarkBackground
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =20
                    Icon: =Icon.CancelBadge
                    OnSelect: =Set(IsMetricCommentSelectedforCopy, false)
                    Width: =20
                    X: =Parent.Width - Self.Width - 2
                    Y: =2
                    ZIndex: =2

                Label_CopyTip As label:
                    AutoHeight: =true
                    Color: =BlueControlDarkBackground
                    Font: =FontStyle
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    PaddingBottom: =2
                    PaddingTop: =2
                    Size: =10
                    Text: |-
                        ="Selected month: " & glry_IndivMetricHistory.Selected.MetricHistory_Date.Text & ". (Press Ctrl+A to select all comment.)"
                    Width: =Parent.Width - Self.X - 35
                    X: =12
                    ZIndex: =3

            Label3 As label:
                DisplayMode: =DisplayMode.View
                FontWeight: =FontWeight.Semibold
                Height: =25
                Size: =11
                Text: ="(%)"
                Visible: =varSelectedItem.mtd_MetricValueType = "Percentage"
                Width: =40
                X: =4
                Y: =172
                ZIndex: =13

            ctn_IfMetricHistoryLoaded As groupContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Fill: =RGBA(255, 255, 255, 0.9)
                Height: =Parent.Height
                Visible: =var_MetricHistoryLoading
                Width: =Parent.Width
                ZIndex: =14

                Label_BoardSrn_Loading_2 As label:
                    Align: =Align.Center
                    Color: =LEFTNAVHIGLIGHTCOLOR
                    Font: =FONTNAME
                    Size: =12
                    Text: ="Getting data..."
                    Width: =Image_BoardSrn_Loading_2.Width
                    X: =Image_BoardSrn_Loading_2.X
                    Y: =Image_BoardSrn_Loading_2.Y + Image_BoardSrn_Loading_2.Height - 10
                    ZIndex: =1

                Image_BoardSrn_Loading_2 As image:
                    Image: =boardsrn_loading
                    PaddingBottom: =20
                    PaddingRight: =10
                    PaddingTop: =10
                    Width: =300
                    X: =Parent.Width * 0.5 - Self.Width * 0.5
                    Y: =Parent.Height * 0.5 - Self.Height * 0.5 - 50
                    ZIndex: =2

        EditMetric_Target As groupContainer.manualLayoutContainer:
            BorderColor: =EditMetric_Desc.BorderColor
            BorderThickness: =1
            Fill: =EditMetric_Desc.Fill
            Height: =EditMetric_Value.Height
            Width: =Parent.Width * 0.16
            X: =EditMetric_Value.X + EditMetric_Value.Width
            Y: =EditMetric_Value.Y
            ZIndex: =7

            EditTargetForm_BS As form:
                AcceptsFocus: =false
                DataSource: =ReviewHub_FactMetrics
                DefaultMode: |-
                    =If(
                        IsAdmin || (IsReviewOwner && IsLatestReviewCycle),
                        FormMode.Edit,
                        FormMode.View
                    )
                Fill: =RGBA(255, 255, 255, 1)
                Height: =btn_Apply_Target.Y - html_UpdateTargets.Height
                Item: =If(!var_TargetIsYearly_BS, LookUp(ReviewHub_FactMetrics, FactMetricID = varSelectedItem.factMetric1.fm_ID), LookUp(ReviewHub_FactMetrics, FactMetricID = varSelectedItem.target_.fm_ID))
                NumberOfColumns: =1
                Width: =Parent.Width
                Y: =html_UpdateTargets.Height
                ZIndex: =1

                Card_Update_fmGreenTargetStart As typedDataCard.numberEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="GreenTargetStart"
                    Default: =ThisItem.fm_GreenTargetStart
                    DisplayMode: =Card_Update_fmTargetNumber.DisplayMode
                    DisplayName: ="GreenTargetStart"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =CardKey_GreenTargetStart.Height + CardKey_GreenTargetStart.Height + 10
                    Required: =false
                    Update: =
                    Visible: =Card_Update_fmYellowTargetStart.Visible
                    Width: =Parent.Width
                    X: =0
                    Y: =3
                    ZIndex: =1

                    CardKey_GreenTargetStart As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =CardKey_YellowTargetStart.Height
                        Size: =CardKey_YellowTargetStart.Size
                        Text: |-
                            ="Green Range Start Value" & 
                            Switch(
                                varSelectedItem.mtd_MetricValueType,
                                "Percentage", "  (%)",
                                "Number", ""
                            )
                        Tooltip: =Self.Text
                        Width: =Parent.Width - Self.X - 20
                        Wrap: =false
                        X: =CardKey_YellowTargetStart.X
                        Y: =CardKey_YellowTargetStart.Y
                        ZIndex: =1

                    Card_GreenTargetStart As text:
                        BorderColor: =If(IsBlank(Parent.Error), GRAYCOLOR, Color.Red)
                        BorderThickness: =1
                        Default: =If(Check_TargetIsNotAvailable.Value=true, Blank(), Parent.Default)
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =FontStyle
                        Format: =TextFormat.Number
                        Height: =Card_YellowTargetStart.Height
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =ColorFade(BlueControlLightBackground, 75%)
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =Card_YellowTargetStart.Size
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - Self.X - 30
                        X: =Card_YellowTargetStart.X
                        Y: =CardKey_GreenTargetStart.Y + CardKey_GreenTargetStart.Height
                        ZIndex: =2

                Card_Update_fmYellowTargetStart As typedDataCard.numberEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="YellowTargetValue"
                    Default: =ThisItem.fm_YellowTargetStart
                    DisplayMode: =Card_Update_fmTargetNumber.DisplayMode
                    DisplayName: ="YellowTargetValue"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =Card_YellowTargetStart.Height + CardKey_YellowTargetStart.Height + 10
                    Required: =false
                    Update: =
                    Visible: =Card_Update_fmTargetNumber.Visible && !Check_TargetIsNotAvailable.Value
                    Width: =Parent.Width
                    WidthFit: =false
                    X: =0
                    Y: =4
                    ZIndex: =1

                    CardKey_YellowTargetStart As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =34
                        Size: =10
                        Text: |-
                            ="Yellow Range Start Value" & 
                            Switch(
                                varSelectedItem.mtd_MetricValueType,
                                "Percentage", "  (%)",
                                "Number", ""
                            )
                        Tooltip: =Self.Text
                        Width: =Parent.Width - Self.X - 20
                        Wrap: =false
                        X: =15
                        ZIndex: =1

                    Card_YellowTargetStart As text:
                        BorderColor: =If(IsBlank(Parent.Error), GRAYCOLOR, Color.Red)
                        BorderThickness: =1
                        Default: =If(Check_TargetIsNotAvailable.Value=true, Blank(), Parent.Default)
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =FontStyle
                        Format: =TextFormat.Number
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverColor: =Self.Color
                        HoverFill: =ColorFade(BlueControlLightBackground, 75%)
                        PaddingLeft: =5
                        PressedBorderColor: =Self.BorderColor
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - Self.X - 30
                        X: =15
                        Y: =CardKey_YellowTargetStart.Y + CardKey_YellowTargetStart.Height
                        ZIndex: =2

                Card_UpdateTargetWarning As typedDataCard.blankCard:
                    BorderStyle: =BorderStyle.Solid
                    DisplayMode: =DisplayMode.Edit
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =html_UpdateTargetWarning.Height + 5
                    Visible: =Card_Update_fmYellowTargetStart.Visible
                    Width: =Parent.Width
                    X: =0
                    Y: =5
                    ZIndex: =1

                    html_UpdateTargetWarning As htmlViewer:
                        AutoHeight: =true
                        Color: =RGBA(255, 0, 0, 1)
                        DisplayMode: =DisplayMode.View
                        Font: =FontStyle
                        HtmlText: |-
                            =If(
                                !varSelectedItem.mtd_IsTrendDown,
                                If(
                                    (!IsBlank(Card_GreenTargetStart.Text) && !IsBlank(Card_YellowTargetStart.Text))
                                    && Value(Card_GreenTargetStart.Text) < Value(Card_YellowTargetStart.Text),
                                    "Green Range Start Value cannot be smaller than Yellow Range Start Value. <br><font color='0072c6'>Please follow: <br><b>Yellow Start < Green Start < Target Value</b></font>",
                                    If(
                                        (!IsBlank(Card_GreenTargetStart.Text) && !IsBlank(Card_TargetNumber.Text))
                                        && Value(Card_TargetNumber.Text) < Value(Card_GreenTargetStart.Text),
                                        "Target Value cannot be smaller than Green Range Start Value. <br><font color='0072c6'>Please follow: <br><b>Yellow Start < Green Start < Target Value</b></font>",
                                        If(
                                            (!IsBlank(Card_YellowTargetStart.Text) && !IsBlank(Card_TargetNumber.Text))
                                            && Value(Card_TargetNumber.Text) < Value(Card_YellowTargetStart.Text),
                                            "Target Value cannot be smaller than Yellow Range Start Value. <br><font color='0072c6'>Please follow: <br><b>Yellow Start < Green Start < Target Value</b></font>"
                                        )
                                    )
                                ),
                                If(
                                    (!IsBlank(Card_GreenTargetStart.Text) && !IsBlank(Card_YellowTargetStart.Text))
                                    && Value(Card_GreenTargetStart.Text) > Value(Card_YellowTargetStart.Text),
                                    "This is a trending down metric. Green Range Start Value cannot be greater than Yellow Range Start Value. <br><font color='0072c6'>Please follow: <br><b>Target Value < Green Start < Yellow Start</b></font>",
                                    If(
                                        (!IsBlank(Card_GreenTargetStart.Text) && !IsBlank(Card_TargetNumber.Text))
                                        && Value(Card_TargetNumber.Text) > Value(Card_GreenTargetStart.Text),
                                        "Target Value cannot be greater than Green Range Start Value. <br><font color='0072c6'>Please follow: <br><b>Target Value < Green Start < Yellow Start</b></font>",
                                        If(
                                            (!IsBlank(Card_YellowTargetStart.Text) && !IsBlank(Card_TargetNumber.Text))
                                            && Value(Card_TargetNumber.Text) > Value(Card_YellowTargetStart.Text),
                                            "Target Value cannot be greater than Yellow Range Start Value. <br><font color='0072c6'>Please follow: <br><b>Target Value < Green Start < Yellow Start</b></font>"
                                        )
                                    )
                                )
                            )
                        PaddingLeft: =20
                        PaddingTop: =0
                        Size: =10
                        Width: =Parent.Width - Self.X - 20
                        ZIndex: =2

                Card_Update_fmTargetNumber As typedDataCard.numberEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="TargetNumber"
                    Default: =ThisItem.fm_TargetNumber
                    DisplayMode: |-
                        =If(
                            IsAdmin 
                                || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes)
                                || (IsReviewOwner && IsLatestReviewCycle),
                            DisplayMode.Edit,
                            DisplayMode.View
                        )
                    DisplayName: ="TargetNumber"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: |-
                        =If(
                            Check_TargetIsNotAvailable.Value, 
                            Check_TargetIsNotAvailable.Height + 15,
                            Check_TargetIsNotAvailable.Height + DataCardKey7_2.Height + Card_TargetNumber.Height + 15
                        )
                    Required: =false
                    Update: =
                    Visible: =If(varSelectedItem.mtd_MetricValueType = "Number" || varSelectedItem.mtd_MetricValueType = "Percentage", true, false)
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =4

                    Card_TargetNumber As text:
                        BorderColor: =If(IsBlank(Parent.Error), GRAYCOLOR, Color.Red)
                        BorderThickness: =1
                        Default: =If(Check_TargetIsNotAvailable.Value=true, -1, Parent.Default) //&& (varSelectedItem.MetricValueType="Number" || varSelectedItem.MetricValueType="Percentage")
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =FontStyle
                        Format: =TextFormat.Number
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =ColorFade(BlueControlLightBackground, 75%)
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Tooltip: =Parent.DisplayName
                        Visible: =!Check_TargetIsNotAvailable.Value
                        Width: =Parent.Width - Self.X - 30
                        X: =15
                        Y: =DataCardKey7_2.Y + DataCardKey7_2.Height
                        ZIndex: =1

                    DataCardKey7_2 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =34
                        Size: =10
                        Text: |-
                            ="Target Value" & 
                            Switch(
                                varSelectedItem.mtd_MetricValueType,
                                "Percentage", "  (%)",
                                "Number", ""
                            )
                        Tooltip: =Self.Text
                        Visible: =!Check_TargetIsNotAvailable.Value
                        Width: =Parent.Width - Self.X - 20
                        Wrap: =false
                        X: =15
                        Y: =Check_TargetIsNotAvailable.Height + 5
                        ZIndex: =3

                    StarVisible11_2 As label:
                        Align: =Align.Center
                        Font: =FontStyle
                        Height: =DataCardKey7_2.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =20
                        Wrap: =false
                        Y: =DataCardKey7_2.Y
                        ZIndex: =4

                    Check_TargetIsNotAvailable As checkbox:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        CheckboxBorderColor: =Color.Gray
                        CheckboxSize: =30
                        CheckmarkFill: =LEFTNAVBKGDCOLOR
                        Color: |-
                            =If( 
                                (ThisItem.craf2_fm_targetnumber = -1  && Check_TargetIsNotAvailable.Value) || (ThisItem.craf2_fm_targetnumber <> -1 && !Check_TargetIsNotAvailable.Value), 
                                RGBA(0, 0, 0, 1), 
                                BlueControlDarkBackground
                            )
                        Default: =If(Parent.Default=-1 || IsBlankOrError(Parent.Default), true, false)
                        DisplayMode: |-
                            =If(
                                IsAdmin 
                                    || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes)
                                    || (IsReviewOwner && IsLatestReviewCycle),
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        Font: =FontStyle
                        FontWeight: |
                            =If( 
                                (ThisItem.fm_TargetNumber = -1  && Check_TargetIsNotAvailable.Value) || (ThisItem.fm_TargetNumber <> -1 && !Check_TargetIsNotAvailable.Value), 
                                FontWeight.Normal, 
                                FontWeight.Semibold
                            )
                        Height: =35
                        HoverBorderColor: =
                        HoverColor: =Self.Color
                        OnCheck: |-
                            =Concurrent(
                                Reset(Card_TargetNumber),
                                Reset(Card_GreenTargetStart),
                                Reset(Card_YellowTargetStart)
                            )
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =Self.Color
                        Size: =10
                        Text: ="Not Available"
                        Width: =DataCardKey7_2.Width
                        X: =DataCardKey7_2.X
                        ZIndex: =5

                Card_Update_fmTargetYesNo As typedDataCard.toggleEditCard:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    DataField: ="TargetYesNo"
                    Default: =ThisItem.fm_TargetYesNo
                    DisplayMode: |-
                        =If(
                            IsAdmin 
                                || (IsReviewOwner && IsLatestReviewCycle) 
                                || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), 
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    DisplayName: ="TargetYesNo"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =60
                    Required: =false
                    Update: =Card_TargetYesNo.Value
                    Visible: =If(varSelectedItem.mtd_MetricValueType = "Boolean", true, false)
                    Width: =Parent.Width
                    WidthFit: =true
                    X: =0
                    Y: =1
                    ZIndex: =4

                    DataCardKey6_2 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =34
                        PaddingBottom: =0
                        PaddingTop: =0
                        Size: =10
                        Text: ="Target (Yes/No)"
                        Width: =Parent.Width - Self.X - 25
                        Wrap: =false
                        X: =15
                        ZIndex: =1

                    Card_TargetYesNo As toggleSwitch:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderStyle: =BorderStyle.None
                        Default: =Parent.Default
                        DisplayMode: =Parent.DisplayMode
                        FalseText: ="No"
                        Font: =FontStyle
                        Height: =25
                        Size: =10
                        Tooltip: =Parent.DisplayName
                        TrueFill: =LEFTNAVHIGLIGHTCOLOR
                        TrueText: ="Yes"
                        X: =20
                        Y: =DataCardKey6_2.Y + DataCardKey6_2.Height + 5
                        ZIndex: =2

                    StarVisible8_2 As label:
                        Align: =Align.Center
                        Font: =FontStyle
                        Height: =DataCardKey6_2.Height
                        Size: =10
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =20
                        Wrap: =false
                        Y: =DataCardKey6_2.Y
                        ZIndex: =4

                Card_Update_fmTargetText As typedDataCard.textualEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="TargetText"
                    Default: =ThisItem.fm_TargetText
                    DisplayMode: =Card_Update_fmTargetYesNo.DisplayMode
                    DisplayName: ="Metric Target"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =60
                    MaxLength: =DataSourceInfo([@ReviewHub_FactMetrics], DataSourceInfo.MaxLength, "craf2_fm_targettext")
                    Required: =false
                    Update: =Dropdown_TargetText.Selected.Result
                    Visible: =If(varSelectedItem.mtd_MetricValueType="Text", true, false)
                    Width: =Parent.Width
                    X: =0
                    Y: =2
                    ZIndex: =4

                    DataCardKey10_2 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =34
                        Size: =10
                        Text: ="Target (Text)"
                        Width: =Parent.Width - Self.X - 30
                        Wrap: =false
                        X: =20
                        ZIndex: =1

                    StarVisible13_2 As label:
                        Align: =Align.Center
                        Font: =FontStyle
                        Height: =DataCardKey10_2.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =20
                        Wrap: =false
                        Y: =DataCardKey10_2.Y
                        ZIndex: =4

                    Dropdown_TargetText As dropdown:
                        BorderColor: =GRAYCOLOR
                        BorderThickness: =1
                        ChevronBackground: =dpdn_BS_ReviewMonth.ChevronBackground
                        ChevronFill: =dpdn_BS_ReviewMonth.ChevronFill
                        ChevronHoverBackground: =dpdn_BS_ReviewMonth.ChevronHoverBackground
                        ChevronHoverFill: =dpdn_BS_ReviewMonth.ChevronHoverFill
                        Color: =DataValue_fmValueText.Color
                        Default: =Parent.Default
                        Fill: =DataValue_fmValueText.Fill
                        Font: =FontStyle
                        Height: =30
                        HoverFill: =DataValue_fmValueText.HoverFill
                        Items: |-
                            =ForAll(Trim(ForAll(Split(varSelectedItem.mtd_MetricTypeEnumerateOptions, "|"), {Result: ThisRecord.Value})), {Result: ThisRecord.Value})
                        PressedBorderColor: =DataValue_fmValueText.PressedBorderColor
                        PressedColor: =DataValue_fmValueText.PressedColor
                        PressedFill: =DataValue_fmValueText.PressedFill
                        SelectionFill: =DataValue_fmValueText.SelectionFill
                        Size: =10
                        Width: =Parent.Width - Self.X - 30
                        X: =20
                        Y: =DataCardKey10_2.Y + DataCardKey10_2.Height
                        ZIndex: =5

            html_TargetEditWarning As htmlViewer:
                AutoHeight: =true
                Height: =0
                HtmlText: ="<font color=red>*Only Review Owner and Admin can edit target.</font>"
                Size: =9
                Visible: =false //!(IsAdmin || IsReviewOwner)
                Width: =Parent.Width
                Y: =430
                ZIndex: =2

            lbl_Apply_Target_Succeed As label:
                Align: =Align.Right
                Color: =If(var_btn_Apply_Target_Succeed, GreenFontColor, RedFontColor)
                DisplayMode: =DisplayMode.View
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =btn_Apply_Target.Height
                PaddingRight: =8
                Size: =10
                Text: =If(var_btn_Apply_Target_Succeed, "Saved!", "Failed!")
                Tooltip: =If(var_btn_Apply_Target_Succeed, "Data is successfully saved!", "Data is not saved! Please try again later and check if you have the valid Write Permission of the ReviewHubAccess.")
                Visible: =!IsBlank(var_btn_Apply_Target_Succeed) && !btn_Apply_Target_Loading.Visible
                Width: =75
                X: =btn_Apply_Target.X - Self.Width
                Y: =btn_Apply_Target.Y
                ZIndex: =3

            btn_Apply_Target_Loading As image:
                Height: =btn_Apply_Target.Height
                Image: =img_loading
                Visible: |-
                    =If(
                        var_btn_Apply_Target_Loading_On,
                        ctn_IfGalleryLoaded.Visible,
                        false
                    )
                Width: =Self.Height
                X: =btn_Apply_Target.X - Self.Width
                Y: =btn_Apply_Target.Y 
                ZIndex: =4

            btn_Apply_Target As button:
                BorderColor: =Self.Fill
                DisplayMode: |-
                    =If(
                        btn_Apply_Target_Loading.Visible, 
                        DisplayMode.Disabled, 
                        If(
                            (IsAdmin 
                                || (IsReviewOwner && IsLatestReviewCycle)
                                || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes)
                            )
                            && Trim(html_UpdateTargetWarning.HtmlText) = "", //This means target value inputs has no error.
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    )
                Fill: =BlueControlDarkBackground
                Font: =FontStyle
                FontWeight: =FontWeight.Bold
                Height: =25
                HoverColor: =Self.Fill
                HoverFill: =Self.Color
                OnSelect: |-
                    =//Send data to backend table.
                    If(
                        !IsError(  //This syntax will send data to backend, and also check if it failed or succeed.
                    If(!var_TargetIsYearly_BS,
                    Patch(
                        ReviewHub_FactMetrics,
                        LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID=varSelectedItem.factMetric1.fm_ID),
                        {
                            fm_TargetNumber: 
                            If(
                                Card_Update_fmTargetNumber.Visible, 
                                If(
                                    Check_TargetIsNotAvailable.Value = true, 
                                    -1, 
                                    If(IsBlank(Trim(Card_TargetNumber.Text)), Blank(), Value(Card_TargetNumber.Text))
                                ), 
                                Blank()
                            ),
                            fm_TargetText: If(Card_Update_fmTargetText.Visible, Dropdown_TargetText.Selected.Result, Blank()),
                            fm_TargetYesNo: If(Card_Update_fmTargetYesNo.Visible, If(Card_TargetYesNo.Value=true, 1, 0), Blank()),
                            fm_GreenTargetStart: 
                            If(
                                Card_Update_fmGreenTargetStart.Visible, 
                                If(
                                    Check_TargetIsNotAvailable.Value = true,
                                    Blank(), 
                                    If(IsBlank(Trim(Card_GreenTargetStart.Text)), Blank(), Value(Card_GreenTargetStart.Text))
                                ),
                                Blank()
                            ),
                            fm_YellowTargetStart: 
                            If(
                                Card_Update_fmYellowTargetStart.Visible, 
                                If(
                                    Check_TargetIsNotAvailable.Value = true,
                                    Blank(), 
                                    If(IsBlank(Trim(Card_YellowTargetStart.Text)), Blank(), Value(Card_YellowTargetStart.Text))
                                ),
                                Blank()
                            )
                        }
                    ),
                    Patch(
                        ReviewHub_FactMetrics,
                        LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID=varSelectedItem.target_.fm_ID),
                        {
                            fm_TargetNumber: 
                            If(
                                Card_Update_fmTargetNumber.Visible, 
                                If(
                                    Check_TargetIsNotAvailable.Value = true, 
                                    -1, 
                                    If(IsBlank(Trim(Card_TargetNumber.Text)), Blank(), Value(Card_TargetNumber.Text))
                                ), 
                                Blank()
                            ),
                            fm_TargetText: If(Card_Update_fmTargetText.Visible, Dropdown_TargetText.Selected.Result, Blank()),
                            fm_TargetYesNo: If(Card_Update_fmTargetYesNo.Visible, If(Card_TargetYesNo.Value=true, 1, 0), Blank()),
                            fm_GreenTargetStart: 
                            If(
                                Card_Update_fmGreenTargetStart.Visible, 
                                If(
                                    Check_TargetIsNotAvailable.Value = true,
                                    Blank(), 
                                    If(IsBlank(Trim(Card_GreenTargetStart.Text)), Blank(), Value(Card_GreenTargetStart.Text))
                                ),
                                Blank()
                            ),
                            fm_YellowTargetStart: 
                            If(
                                Card_Update_fmYellowTargetStart.Visible, 
                                If(
                                    Check_TargetIsNotAvailable.Value = true,
                                    Blank(), 
                                    If(IsBlank(Trim(Card_YellowTargetStart.Text)), Blank(), Value(Card_YellowTargetStart.Text))
                                ),
                                Blank()
                            )
                        }
                    )
                    )),
                    
                    Concurrent(  //If no error, execute this part.
                        Set(var_Timer_DelayRefreshHScore, true),
                        Set(var_cllnFactMetricsID_ToUpdate, varSelectedItem.factMetric1.fm_ID); Set(var_Timer_DelayRefreshFactMetric, true),
                        Set(var_ctn_IfGalleryLoaded_ForceOn, true), //This will be turned to false by the Timer_DelayRefreshFactMetric.
                        Set(var_btn_Apply_Target_Loading_On, true), 
                        Set(var_btn_Apply_Target_Succeed, true),
                        Set(var_btn_Apply_MetricValue_Succeed, Blank()),
                    
                        //Update the latest targets in the ReviewHub_ProductMetrics table.
                        If(
                            //If user is on the latest review cycle, otherwise, do nothing.
                            dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate = 
                                First(
                                    Sort(
                                        Filter(clln_factMetricBoard, ThisRecord.fmb_ProductID=var_BoardSrn_ProductID && ThisRecord.fmb_MetricBoardTypeID=var_BoardTypeSelected_Home), 
                                        fmb_ReviewLockDate, 
                                        SortOrder.Descending
                                    )
                                ).fmb_ReviewLockDate, 
                            Switch(
                                varSelectedItem.mtd_MetricValueType,
                                "Number", 
                                Patch(
                                    ReviewHub_ProductMetrics, 
                                    LookUp(ReviewHub_ProductMetrics, ProductMetricID=varSelectedItem.ProductMetrics1.pm_ID),
                                    {
                                        pm_LatestTargetNumber: If(IsBlank(Card_TargetNumber.Text), Blank(), Value(Card_TargetNumber.Text)),
                                        pm_LatestGreenTargetStart: If(IsBlank(Card_GreenTargetStart.Text), Blank(), Value(Card_GreenTargetStart.Text)), 
                                        pm_LatestYellowTargetStart: If(IsBlank(Card_YellowTargetStart.Text), Blank(), Value(Card_YellowTargetStart.Text)), 
                                        pm_LatestTargetYesNo: Blank(),
                                        pm_LatestTargetText: Blank()
                                    }
                                ),
                                "Percentage", 
                                Patch(
                                    ReviewHub_ProductMetrics, 
                                    LookUp(ReviewHub_ProductMetrics, ProductMetricID=varSelectedItem.ProductMetrics1.pm_ID),
                                    {
                                        pm_LatestTargetNumber: If(IsBlank(Card_TargetNumber.Text), Blank(), Value(Card_TargetNumber.Text)),
                                        pm_LatestGreenTargetStart: If(IsBlank(Card_GreenTargetStart.Text), Blank(), Value(Card_GreenTargetStart.Text)), 
                                        pm_LatestYellowTargetStart: Value(Card_YellowTargetStart.Text),
                                        pm_LatestTargetYesNo: Blank(),
                                        pm_LatestTargetText: Blank()
                                    }
                                ),
                                "Text",
                                Patch(
                                    ReviewHub_ProductMetrics, 
                                    LookUp(ReviewHub_ProductMetrics, ProductMetricID=varSelectedItem.ProductMetrics1.pm_ID),
                                    {
                                        pm_LatestTargetNumber: Blank(),
                                        pm_LatestGreenTargetStart: Blank(),
                                        pm_LatestYellowTargetStart: Blank(),
                                        pm_LatestTargetYesNo: Blank(),
                                        pm_LatestTargetText: Dropdown_TargetText.Selected.Result
                                    }
                                ),
                                "Boolean",
                                Patch(
                                    ReviewHub_ProductMetrics, 
                                    LookUp(ReviewHub_ProductMetrics, ProductMetricID=varSelectedItem.ProductMetrics1.pm_ID),
                                    {
                                        pm_LatestTargetNumber: Blank(),
                                        pm_LatestGreenTargetStart: Blank(),
                                        pm_LatestYellowTargetStart: Blank(),
                                        pm_LatestTargetYesNo: If(Card_TargetYesNo.Value=true, 1, 0),
                                        pm_LatestTargetText: Blank()
                                    }
                                )
                            )
                        ),
                    
                        If(var_TargetIsYearly_BS,
                            //ForAll(, 
                                UpdateIf(
                                    ReviewHub_FactMetrics,
                                    If(Month(ThisRecord.fm_ReviewLockDate) >= 7, 
                                        ThisRecord.fm_ProductMetric.ProductMetricID = varSelectedItem.target_.fm_ProductMetricID && ThisRecord.FactMetricID <> varSelectedItem.target_.fm_ID &&
                                        Year(varSelectedItem.target_.fm_ReviewLockDate) = Year(ThisRecord.fm_ReviewLockDate)
                                        && Month(ThisRecord.fm_ReviewLockDate) >= 7
                                    , 
                                        ThisRecord.fm_ProductMetric.ProductMetricID = varSelectedItem.target_.fm_ProductMetricID && ThisRecord.FactMetricID <> varSelectedItem.target_.fm_ID &&
                                        (Year(varSelectedItem.target_.fm_ReviewLockDate) = Year(ThisRecord.fm_ReviewLockDate)
                                        && Month(ThisRecord.fm_ReviewLockDate) < 7) || (Year(ThisRecord.fm_ReviewLockDate) = Year(DateAdd(varSelectedItem.target_.fm_ReviewLockDate, -1, TimeUnit.Years))
                                        && Month(ThisRecord.fm_ReviewLockDate) >= 7)
                                    ),
                                    {
                                        fm_TargetNumber: 
                                        If(
                                            Card_Update_fmTargetNumber.Visible, 
                                            If(
                                                Check_TargetIsNotAvailable.Value = true, 
                                                -1, 
                                                If(IsBlank(Trim(Card_TargetNumber.Text)), Blank(), Value(Card_TargetNumber.Text))
                                            ), 
                                            Blank()
                                        ),
                                        fm_TargetText: If(Card_Update_fmTargetText.Visible, Dropdown_TargetText.Selected.Result, Blank()),
                                        fm_TargetYesNo: If(Card_Update_fmTargetYesNo.Visible, If(Card_TargetYesNo.Value=true, 1, 0), Blank()),
                                        fm_GreenTargetStart: 
                                        If(
                                            Card_Update_fmGreenTargetStart.Visible, 
                                            If(
                                                Check_TargetIsNotAvailable.Value = true,
                                                Blank(), 
                                                If(IsBlank(Trim(Card_GreenTargetStart.Text)), Blank(), Value(Card_GreenTargetStart.Text))
                                            ),
                                            Blank()
                                        ),
                                        fm_YellowTargetStart: 
                                        If(
                                            Card_Update_fmYellowTargetStart.Visible, 
                                            If(
                                                Check_TargetIsNotAvailable.Value = true,
                                                Blank(), 
                                                If(IsBlank(Trim(Card_YellowTargetStart.Text)), Blank(), Value(Card_YellowTargetStart.Text))
                                            ),
                                            Blank()
                                        )
                                    }
                                )
                            //)
                        )
                    ),
                    
                        Set(var_btn_Apply_Target_Succeed, false)
                    )
                RadiusBottomLeft: =15
                RadiusBottomRight: =15
                RadiusTopLeft: =15
                RadiusTopRight: =15
                Size: =10
                Text: ="Apply"
                Tooltip: |-
                    =Concatenate("Only Review owners or Admins are allowed to edit Targets. Review Owner:", varSelectedItem.factMetricBoard1.fmb_ReviewOwnerName, "Current User:", User().FullName)
                Width: =90
                X: =Parent.Width - Self.Width - 30
                Y: =Parent.Height-35
                ZIndex: =5

            html_UpdateTargets As htmlViewer:
                AutoHeight: =true
                Font: =FontStyle
                HtmlText: |
                    ="<font style='font-weight: 800; font-size: 15px;'>Target Details</font>"
                PaddingBottom: =8
                PaddingLeft: =10
                PaddingRight: =8
                PaddingTop: =8
                Tooltip: =html_EditValue_LastMod.Tooltip
                Width: =Parent.Width - 15
                ZIndex: =6

        EditMetric_Value As groupContainer.manualLayoutContainer:
            BorderColor: =EditMetric_Desc.BorderColor
            BorderThickness: =1
            Fill: =EditMetric_Desc.Fill
            Height: =EditMetric_Desc.Height - Self.Y + ctn_EditMetric_TopBar.Height
            Width: =Parent.Width * 0.20
            X: =EditMetric_Desc.X + EditMetric_Desc.Width
            Y: =EditMetric_Top.Y + EditMetric_Top.Height
            ZIndex: =8

            UpdateMetricValue_BS As form:
                AcceptsFocus: =false
                DataSource: =ReviewHub_FactMetrics
                DefaultMode: |-
                    =If(
                        IsAdmin || ((IsReviewOwner || IsStakeholder) && IsLatestReviewCycle), 
                        FormMode.Edit,
                        FormMode.View
                    )
                Height: =btn_Apply_UpdateValues.Y - html_UpdateValues.Height
                Item: =LookUp(ReviewHub_FactMetrics, FactMetricID = varSelectedItem.factMetric1.fm_ID)
                NumberOfColumns: =1
                Width: =Parent.Width
                Y: =html_UpdateValues.Height
                ZIndex: =1

                Card_Update_fmIsNotApplicable As typedDataCard.toggleEditCard:
                    BorderStyle: =BorderStyle.Solid
                    BorderThickness: =0
                    DataField: ="craf2_fm_isnotapplicable"
                    Default: =ThisItem.fm_IsNotApplicable
                    DisplayMode: |-
                        =If(
                            IsAdmin 
                                || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes)
                                || ((IsReviewOwner || (IsStakeholder && varSelectedItem.mtd_UpdateMethod="Manual")) && IsLatestReviewCycle),
                            DisplayMode.Edit, 
                            DisplayMode.Disabled
                        )
                    DisplayName: ="IsNotApplicable"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =Check_MetricIsNA.Y + Check_MetricIsNA.Height + If(Html_NAWarning.Visible, Html_NAWarning.Height, 10)
                    Required: =false
                    Update: =Check_MetricIsNA.Value
                    Visible: =true
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =1

                    Html_NAWarning As htmlViewer:
                        AutoHeight: =true
                        Color: =RGBA(255, 0, 0, 1)
                        Fill: =Color.White
                        Font: =FontStyle
                        Height: =76
                        HtmlText: ="A metric value must be provided. If this is an exception, business justification is required."
                        PaddingLeft: =15
                        PaddingRight: =15
                        Size: =10
                        Visible: =If(Check_MetricIsNA.Value = true, true, false)
                        Width: =Parent.Width - Self.X -20
                        Y: =Check_MetricIsNA.Y+Check_MetricIsNA.Height
                        ZIndex: =1

                    StarVisible2 As label:
                        Align: =Align.Center
                        Font: =FontStyle
                        Height: =Check_MetricIsNA.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =Check_MetricIsNA.Y
                        ZIndex: =3

                    Check_MetricIsNA As checkbox:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        CheckboxBorderColor: =Color.Gray
                        CheckboxSize: =30
                        CheckmarkFill: =LEFTNAVBKGDCOLOR
                        Color: |-
                            =If(
                                Switch(
                                    Text(ThisItem.craf2_fm_isnotapplicable), 
                                    "Yes", true,
                                    "No", false
                                ) = Check_MetricIsNA.Value, 
                                RGBA(0, 0, 0, 1), 
                                BlueControlDarkBackground
                            )
                        Default: =Parent.Default
                        DisplayMode: =Parent.DisplayMode
                        Font: =FontStyle
                        FontWeight: |-
                            =If(
                                Switch(
                                    Text(ThisItem.fm_IsNotApplicable), 
                                    "Yes", true,
                                    "No", false
                                ) = Check_MetricIsNA.Value, 
                                FontWeight.Normal, 
                                FontWeight.Semibold
                            )
                        Height: =30
                        HoverBorderColor: =
                        HoverColor: =Self.Color
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =Self.Color
                        Size: =10
                        Text: ="Not Applicable"
                        Width: =Parent.Width - Self.X - 30
                        X: =10
                        ZIndex: =4

                Card_Update_fmComment As typedDataCard.textualMultiLineEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="craf2_fm_comment"
                    Default: =ThisItem.fm_Comment
                    DisplayMode: |-
                        =If(
                            IsAdmin 
                                || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes)
                                || ((IsReviewOwner || IsStakeholder) && IsLatestReviewCycle), 
                            DisplayMode.Edit, 
                            DisplayMode.View
                        )
                    DisplayName: ="Comments"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =Parent.Height - Self.Y - 10 //DataCardKey17_1.Height + DataValue_FMComment.Height + 10
                    Required: =false
                    Update: =DataValue_FMComment.Text
                    Visible: =!var_TargetIsYearly_BS
                    Width: =Parent.Width
                    X: =0
                    Y: =5
                    ZIndex: =1

                    DataCardKey17_1 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =55
                        PaddingTop: =0
                        Size: =10
                        Text: =If(Check_MetricIsNA.Value, "Business Justification", Parent.DisplayName & " 📝")
                        VerticalAlign: =VerticalAlign.Bottom
                        Width: =Parent.Width - Self.X - 20
                        Wrap: =false
                        X: =15
                        ZIndex: =1

                    DataValue_FMComment As text:
                        BorderColor: =If(IsBlank(Parent.Error), GRAYCOLOR, Color.Red)
                        BorderThickness: =1
                        Default: =Parent.Default
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =FontStyle
                        Height: =Max(45, Parent.Height - Self.Y - 10)
                        HintText: =If(Check_MetricIsNA.Value, "Required")
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =ColorFade(BlueControlLightBackground, 75%)
                        Mode: =TextMode.MultiLine
                        PaddingBottom: =0
                        PaddingLeft: =5
                        PaddingRight: =0
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Tooltip: =DataCardKey17_1.Text
                        Width: =Parent.Width - Self.X - 30
                        X: =15
                        Y: =DataCardKey17_1.Y + DataCardKey17_1.Height
                        ZIndex: =2

                Card_Update_fmValueText As typedDataCard.textualEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="craf2_fm_valuetext"
                    Default: =ThisItem.fm_ValueText
                    DisplayMode: |-
                        =If(
                            var_Update_AutoFM=true,
                            DisplayMode.Edit, 
                            If(
                                var_BoardSrnMetricUpdateMethod="Manual"
                                    && (
                                        IsAdmin 
                                            || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes)
                                            || ((IsReviewOwner || IsStakeholder) && IsLatestReviewCycle)
                                    ), 
                                DisplayMode.Edit, 
                                DisplayMode.View
                            )
                        )
                    DisplayName: ="ValueText"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =DataValue_fmValueText.Height + DataCardKey8_1.Height + 5
                    MaxLength: =DataSourceInfo([@ReviewHub_FactMetrics], DataSourceInfo.MaxLength, "craf2_fm_valuetext")
                    Required: =false
                    Update: =DataValue_fmValueText.Selected.Result
                    Visible: =If(varSelectedItem.mtd_MetricValueType = "Text" && !Check_MetricIsNA.Value, true, false)
                    Width: =Parent.Width
                    X: =0
                    Y: =1
                    ZIndex: =8

                    DataCardKey8_1 As label:
                        AutoHeight: =true
                        BorderStyle: =BorderStyle.None
                        Color: =If(Check_MetricIsNA.Value, GRAYCOLOR, RGBA(0, 0, 0, 1))
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =34
                        Size: =10
                        Text: ="Value"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =15
                        ZIndex: =1

                    DataValue_fmValueText As dropdown:
                        AllowEmptySelection: =true
                        BorderColor: =GRAYCOLOR
                        BorderThickness: =1
                        ChevronBackground: =dpdn_BS_ReviewMonth.ChevronBackground
                        ChevronFill: =dpdn_BS_ReviewMonth.ChevronFill
                        ChevronHoverBackground: =dpdn_BS_ReviewMonth.ChevronHoverBackground
                        ChevronHoverFill: =dpdn_BS_ReviewMonth.ChevronHoverFill
                        Default: =Parent.Default
                        DisplayMode: =Parent.DisplayMode
                        Fill: =RGBA(255,255,255,1)
                        Font: =FontStyle
                        Height: =30
                        HoverFill: =Self.ChevronHoverBackground
                        Items: |-
                            =ForAll(Trim(ForAll(Split(varSelectedItem.mtd_MetricTypeEnumerateOptions, "|"), {Result: ThisRecord.Value})), {Result: ThisRecord.Value})
                        PaddingLeft: =5
                        PressedColor: =BlueControlDarkBackground
                        PressedFill: =BlueControlLightBackground
                        SelectionFill: =BlueNaviHightLightBackground
                        Size: =10
                        Width: =Parent.Width - Self.X - 30
                        X: =15
                        Y: =DataCardKey8_1.Y + DataCardKey8_1.Height
                        ZIndex: =5

                Card_Update_fmValueYesNo As typedDataCard.toggleEditCard:
                    BorderStyle: =BorderStyle.Solid
                    BorderThickness: =0
                    DataField: ="craf2_fm_valueyesno"
                    Default: =If(ThisItem.fm_ValueYesNo = 1, true, false)
                    DisplayMode: =Card_Update_fmValueText.DisplayMode
                    DisplayName: ="ValueYesNo"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =55
                    Required: =false
                    Update: =
                    Visible: =If(varSelectedItem.mtd_MetricValueType = "Boolean" && !Check_MetricIsNA.Value,true,false)
                    Width: =Parent.Width
                    X: =0
                    Y: =2
                    ZIndex: =8

                    DataCardKey4_1 As label:
                        AutoHeight: =true
                        Color: =If(Check_MetricIsNA.Value, GRAYCOLOR, RGBA(0, 0, 0, 1))
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =34
                        PaddingBottom: =0
                        PaddingTop: =0
                        Size: =10
                        Text: ="Value (Yes/No)"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =15
                        ZIndex: =1

                    DataValue_FMValueBoolean As toggleSwitch:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderStyle: =BorderStyle.None
                        Color: =If(Check_MetricIsNA.Value, GRAYCOLOR, RGBA(0, 0, 0, 1))
                        Default: =Parent.Default
                        DisplayMode: =Parent.DisplayMode
                        FalseText: ="No"
                        Font: =FontStyle
                        Height: =25
                        Size: =10
                        Tooltip: ="Only Manual Metrics are updatable through this app"
                        TrueFill: =LEFTNAVHIGLIGHTCOLOR
                        TrueText: ="Yes"
                        X: =20
                        Y: =DataCardKey4_1.Y + DataCardKey4_1.Height + 5
                        ZIndex: =2

                Card_Update_fmValueNumber As typedDataCard.numberEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="craf2_fm_valuenumber"
                    Default: =ThisItem.fm_ValueNumber
                    DisplayMode: =Card_Update_fmValueText.DisplayMode
                    DisplayName: ="Value Number"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =68
                    Required: =false
                    Update: =
                    Visible: =If((varSelectedItem.mtd_MetricValueType = "Number" || varSelectedItem.mtd_MetricValueType ="Percentage") && !Check_MetricIsNA.Value,true,false)
                    Width: =Parent.Width
                    X: =0
                    Y: =3
                    ZIndex: =8

                    DataCardKey3_1 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =25
                        Size: =10
                        Text: |-
                            ="Value Number" & 
                            Switch(
                                varSelectedItem.mtd_MetricValueType,
                                "Percentage", "  (%)",
                                "Number", ""
                            )
                        Width: =Parent.Width - Self.X - 20
                        Wrap: =false
                        X: =15
                        ZIndex: =1

                    DataValue_FMValueNumber As text:
                        BorderColor: =If(IsBlank(Parent.Error), GRAYCOLOR, Color.Red)
                        BorderThickness: =1
                        Default: =Parent.Default
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =FontStyle
                        Format: =TextFormat.Number
                        Height: =30
                        HoverBorderColor: =Self.BorderColor
                        HoverFill: =ColorFade(BlueControlLightBackground, 75%)
                        LineHeight: =1
                        PaddingBottom: =0
                        PaddingLeft: =5
                        PaddingTop: =0
                        PressedBorderColor: =Self.BorderColor
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10
                        Tooltip: ="Only Manual metrics are editable through this app"
                        Width: =Parent.Width - Self.X - 30
                        X: =15
                        Y: =DataCardKey3_1.Y + DataCardKey3_1.Height
                        ZIndex: =2

                Card_Update_fmValueDate As typedDataCard.dateEditCard:
                    BorderStyle: =BorderStyle.Solid
                    DataField: =ThisItem.fm_ValueDate
                    Default: =ThisItem.fm_ValueDate
                    DisplayMode: =Card_Update_fmValueText.DisplayMode
                    DisplayName: ="Value Date"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =68
                    Required: =true
                    Update: =DataValue_FMValueDate.SelectedDate
                    Visible: =!Check_MetricIsNA.Value
                    Width: =Parent.Width
                    X: =0
                    Y: =4
                    ZIndex: =8

                    DataCardKey9_1 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Font: =FontStyle
                        FontWeight: =FontWeight.Bold
                        Height: =20
                        Size: =10
                        Text: =Parent.DisplayName & " (updated on " & Text(varSelectedItem.factMetric1.fm_ValueDate, DateTimeFormat.ShortDate) & ")"
                        Tooltip: =Self.Text
                        Width: =Parent.Width - Self.X - 15
                        Wrap: =false
                        X: =15
                        ZIndex: =1

                    DataValue_FMValueDate As datepicker:
                        BorderColor: =If(IsBlank(Parent.Error), GRAYCOLOR, Color.Red)
                        BorderThickness: =1
                        DefaultDate: |-
                            = //Today() //If(IsBlankOrError(ThisItem.fm_ValueDate), Today(), Parent.Default)
                            If(
                                Self.DisplayMode = DisplayMode.Edit,
                                Today(),
                                Parent.Default
                            )
                        DisplayMode: =Parent.DisplayMode
                        EndYear: =Year(Today())+100
                        Fill: =RGBA(255,255,255,1)
                        Font: =FontStyle
                        Height: =30
                        IconBackground: =GrayControlBackground
                        IconFill: =RGBA(1, 1, 1, 1)
                        InputTextPlaceholder: =If(IsBlank(Self.SelectedDate), Text(Now(), Self.Format, Self.Language))
                        IsEditable: =true
                        PaddingBottom: =0
                        PaddingLeft: =5
                        Size: =10
                        StartYear: =1899
                        Tooltip: =Parent.DisplayName
                        Visible: |-
                            =If(
                                IsBlankOrError(ThisItem.fm_ValueDate) && IsMatch(varSelectedItem.mtd_UpdateMethod, "automated", MatchOptions.Contains), 
                                false,
                                true
                            )
                        Width: =Parent.Width - Self.X - 30
                        X: =15
                        Y: =DataCardKey9_1.Y + DataCardKey9_1.Height
                        ZIndex: =2

                    StarVisible7_1 As label:
                        Align: =Align.Center
                        Font: =FontStyle
                        Height: =DataCardKey9_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =20
                        Wrap: =false
                        Y: =DataCardKey9_1.Y
                        ZIndex: =4

            lbl_Apply_MetricValue_Succeed As label:
                Align: =Align.Right
                Color: =If(var_btn_Apply_MetricValue_Succeed, GreenFontColor, RedFontColor)
                DisplayMode: =DisplayMode.View
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =btn_Apply_UpdateValues.Height
                PaddingRight: =8
                Size: =10
                Text: =If(var_btn_Apply_MetricValue_Succeed, "Saved!", "Failed!")
                Tooltip: =If(var_btn_Apply_MetricValue_Succeed, "Data is successfully saved!", "Data is not saved! Please try again later and check if you have the valid Write Permission of the ReviewHubAccess.")
                Visible: =!IsBlank(var_btn_Apply_MetricValue_Succeed) && !btn_Apply_Target_Loading.Visible
                Width: =75
                X: =btn_Apply_UpdateValues.X - Self.Width
                Y: =btn_Apply_UpdateValues.Y
                ZIndex: =2

            btn_Apply_UpdateValues As button:
                BorderColor: =Self.Fill
                DisplayMode: |-
                    =If(
                        Check_MetricIsNA.Value=true && Trim(DataValue_FMComment.Text)="", 
                        DisplayMode.Disabled, 
                        If(
                            IsAdmin 
                                || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes)
                                || ((IsReviewOwner || IsStakeholder) && IsLatestReviewCycle) 
                                || var_Update_AutoFM,
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    )
                Fill: =BlueControlDarkBackground
                Font: =FontStyle
                FontWeight: =FontWeight.Bold
                Height: =25
                HoverBorderColor: =Self.Fill
                HoverColor: =Self.Fill
                HoverFill: =Self.Color
                OnSelect: |-
                    =If(
                        !IsError(  //This syntax will send data to backend, and also check if it failed or succeed.
                    Patch(
                        ReviewHub_FactMetrics,
                        LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID=varSelectedItem.factMetric1.fm_ID),
                        {
                            fm_ValueDate: DataValue_FMValueDate.SelectedDate,
                            fm_ValueNumber: 
                            If(
                                Card_Update_fmValueNumber.Visible, 
                                If(
                                    IsBlank(DataValue_FMValueNumber.Text),
                                    Blank(),
                                    Value(DataValue_FMValueNumber.Text)
                                ), 
                                Blank()
                            ),
                            fm_ValueText: If(Card_Update_fmValueText.Visible, DataValue_fmValueText.Selected.Result, Blank()),
                            fm_ValueYesNo: If(Card_Update_fmValueYesNo.Visible, If(DataValue_FMValueBoolean.Value=true, 1, 0), Blank()),
                            fm_IsNotApplicable: Check_MetricIsNA.Value,
                            fm_Comment: DataValue_FMComment.Text
                        }
                    )),
                    
                        Concurrent(  //If no error, execute this part.
                            Set(var_Timer_DelayRefreshHScore, true),
                            Set(var_cllnFactMetricsID_ToUpdate, varSelectedItem.factMetric1.fm_ID); Set(var_Timer_DelayRefreshFactMetric, true), //Update the cached collections.
                            Set(var_ctn_IfGalleryLoaded_ForceOn, true),
                            Set(var_btn_Apply_MetricValue_Succeed, true),
                            Set(var_btn_Apply_Target_Succeed, Blank()),
                    
                            Select(Close_BS_MetricContainer);
                            ResetForm(UpdateMetricValue_BS)
                        ),
                    
                        Set(var_btn_Apply_MetricValue_Succeed, false)
                    )
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                RadiusBottomLeft: =15
                RadiusBottomRight: =15
                RadiusTopLeft: =15
                RadiusTopRight: =15
                Size: =10
                Text: ="Apply"
                Width: =90
                X: =Parent.Width - Self.Width - 30
                Y: =Parent.Height-35
                ZIndex: =3

            html_UpdateValues As htmlViewer:
                AutoHeight: =true
                Font: =FontStyle
                HtmlText: |
                    ="<font style='font-weight: 800; font-size: 15px;'>Metric Value</font>"
                PaddingBottom: =8
                PaddingLeft: =10
                PaddingRight: =8
                PaddingTop: =8
                Tooltip: =html_EditValue_LastMod.Tooltip
                Width: =If(Btn_Update_AutoFM.Visible, Btn_Update_AutoFM.X, Parent.Width)
                ZIndex: =4

            Btn_Update_AutoFM As button:
                BorderColor: =ColorFade(Self.Fill, -35%)
                BorderThickness: =0
                Color: =BlueControlDarkBackground
                Fill: =Color.White
                Height: =30
                HoverColor: =Color.Blue
                HoverFill: =Color.White
                OnSelect: =Set(var_Update_AutoFM, true)
                PaddingLeft: =0
                PaddingRight: =0
                PressedColor: =LEFTNAVBKGDCOLOR
                PressedFill: =Color.White
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10
                Text: ="Edit"
                Tooltip: ="(For Operator Only)"
                Underline: =true
                Visible: =(IsOperator || IsAdmin) && var_BoardSrnMetricUpdateMethod="BAG IA automated"
                Width: =45
                X: =Parent.Width - Self.Width - 5
                Y: =5
                ZIndex: =5

        EditMetric_Top As groupContainer.manualLayoutContainer:
            BorderColor: =EditMetric_Desc.BorderColor
            BorderThickness: =1
            Height: =html_EditValue_Top.Height + If(var_EditMetric_LastModified, html_EditValue_LastMod.Height, 0)
            Width: =EditMetric_Value.Width + EditMetric_Target.Width
            X: =EditMetric_Desc.X + EditMetric_Desc.Width
            Y: =EditMetric_Desc.Y
            ZIndex: =9

            icon_EditMetric_LastModified As icon.NextArrow:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Color: =BlueControlDarkBackground
                Height: =btn_EditMetric_LastModified.Height
                Icon: =If(var_EditMetric_LastModified = true, Icon.ChevronDown, Icon.ChevronRight)
                PaddingBottom: =4
                PaddingRight: =5
                PaddingTop: =8
                Visible: =btn_EditMetric_LastModified.Visible
                Width: =btn_EditMetric_LastModified.Height
                X: =btn_EditMetric_LastModified.X + btn_EditMetric_LastModified.Width - Self.Width
                Y: =btn_EditMetric_LastModified.Y
                ZIndex: =1

            btn_EditMetric_LastModified As button:
                Align: =Align.Left
                BorderColor: =Self.Fill
                BorderThickness: =0
                Color: =RGBA(116, 116, 116, 1)//BlueControlDarkBackground
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(109, 49, 162, 1)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Fill: |-
                    =If(
                        var_EditMetric_LastModified = true,
                        RGBA(0,0,0,0),//RGBA(1,1,1,0.04),
                        RGBA(0,0,0,0)
                    )
                Font: =FontStyle
                FontWeight: =FontWeight.Normal
                Height: =25
                HoverBorderColor: =Self.Fill
                HoverColor: =Color.Blue
                HoverFill: =
                OnSelect: |-
                    =If(
                        IsBlankOrError(var_EditMetric_LastModified) || var_EditMetric_LastModified = false,
                        Set(var_EditMetric_LastModified, true), 
                        Set(var_EditMetric_LastModified, false)
                    )
                PaddingBottom: =0
                PaddingLeft: =15
                PaddingRight: =0
                PaddingTop: =2
                PressedColor: =Color.Purple
                PressedFill: =
                RadiusBottomLeft: |-
                    =If(
                        var_EditMetric_LastModified = true,
                        0,
                        15
                    )
                RadiusBottomRight: =Self.RadiusBottomLeft
                RadiusTopLeft: =15
                RadiusTopRight: =15
                Size: =10
                Text: ="Last Modified"
                Underline: =true
                Visible: |-
                    =LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID = varSelectedItem.factMetric1.fm_ID).'Created On'
                    <> LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID = varSelectedItem.factMetric1.fm_ID).'Modified On'
                Width: =120
                X: =Parent.Width - Self.Width //- Self.Y
                Y: =8
                ZIndex: =2

            html_EditValue_LastMod As htmlViewer:
                AutoHeight: =true
                Color: =RGBA(116, 116, 116, 1)
                Fill: =btn_EditMetric_LastModified.Fill
                Font: =FontStyle
                HtmlText: |
                    ="<center><font style='font-weight: 500; font-size: 13px;'>" 
                    & LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID = varSelectedItem.factMetric1.fm_ID).'Modified By'.'Full Name' & " (" 
                    & LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID = varSelectedItem.factMetric1.fm_ID).'Modified By'.'Primary Email' & ")<br>" 
                    & LookUp(ReviewHub_FactMetrics, ThisRecord.FactMetricID = varSelectedItem.factMetric1.fm_ID).'Modified On' & "</font></center>"
                PaddingBottom: =3
                PaddingTop: =9
                Tooltip: ="FM_ID-" & varSelectedItem.factMetric1.fm_ID
                Visible: =var_EditMetric_LastModified
                Width: =btn_EditMetric_LastModified.X + btn_EditMetric_LastModified.Width - Self.X
                X: =btn_EditMetric_LastModified.Y
                Y: =btn_EditMetric_LastModified.Y + btn_EditMetric_LastModified.Height
                ZIndex: =3

            html_EditValue_Top As htmlViewer:
                AutoHeight: =true
                Fill: =RGBA(255, 255, 255, 1)
                Font: =FontStyle
                HtmlText: |
                    ="<font style='font-weight: 800; font-size: 15px;'>Update Record </font>&ensp;" 
                    & "<span style='background-color: #daf0fa; color: #0072c6; display: inline-block; padding: 5px 10px; font-weight: 600; border-radius: 15px;'>" & Text(dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate, "mmmm yyyy") & "</span>"
                PaddingBottom: =3
                PaddingLeft: =10
                PaddingRight: =8
                Tooltip: =html_EditValue_LastMod.Tooltip
                Width: =btn_EditMetric_LastModified.X - Self.X
                X: =2
                Y: =2
                ZIndex: =4

        EditMetric_Desc As groupContainer.verticalAutoLayoutContainer:
            BorderColor: =RGBA(102, 102, 153, 0.1)
            BorderThickness: =1
            Height: =lbl_EditMetric_Back.Height - 1
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            Width: =lbl_EditMetric_Back.Width * 0.23
            X: =lbl_EditMetric_Back.X
            Y: =lbl_EditMetric_Back.Y
            ZIndex: =10

            html_EditMetric_Desc As htmlViewer:
                AutoHeight: =true
                Font: =FontStyle
                HtmlText: |-
                    ="<font style='font-weight: 800; font-size: 15px;'>&#8226; Metric Description: </font><br><font style='font-weight: 400; font-size: 14px;'>" 
                    & varSelectedItem.mtd_MetricTypeDescription 
                    & "<br><br><font style='font-weight: 800; font-size: 15px;'>&#8226; Metric Health Weight: </font>" & varSelectedItem.mtd_MetricTypeHealthWeight
                    & "<br><br><font style='font-weight: 800; font-size: 15px;'>&#8226; Value Type: </font>" & varSelectedItem.mtd_MetricValueType 
                    & "<br><br><font style='font-weight: 800; font-size: 15px;'>&#8226; Update Method: </font>" & var_BoardSrnMetricUpdateMethod
                    & If(
                        var_IsDeveloper,
                        "<br><br><font style='font-weight: 800; font-size: 15px;'>&#8226; Short Name: </font>" & varSelectedItem.mtd_MetricShortName
                    )
                    & If(
                        !IsBlankOrError(varSelectedItem.mtd_MetricPowerBIUrl),
                        "<br><br><font style='font-weight: 800; font-size: 15px;'>&#8226; Power BI Report: &ensp;</font><a href='" & varSelectedItem.mtd_MetricPowerBIUrl & "' target='_blank' rel='noopener noreferrer'><span style='background-color: #0072c6; color: #ffffff; display: inline-block; padding: 5px 20px; font-weight: 800; border-radius: 15px;'>Go!</span></a>"
                    )
                    & "<br><br><font style='font-weight: 800; font-size: 15px;'>&#8226; Metric Effective Date: </font>" & Text(varSelectedItem.mtd_MetricCreatedDate, "mm/dd/yyyy")
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =15
                PaddingTop: =8
                Tooltip: =
                Width: =Parent.Width
                ZIndex: =1

    ctn_ExecSummary_BS As groupContainer:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Fill: =GrayCanvasBackground
        Height: =App.Height - Self.Y
        Visible: =var_Display_ExecSummaryContainer
        Width: =App.Width - LeftNavi_BoardSrn.Width
        X: =LeftNavi_BoardSrn.Width
        Y: =glry_BoardSrn_Headers.Y
        ZIndex: =14

        Separator_ctn_ExecSum As rectangle:
            Fill: =Parent.Fill
            Height: =Parent.Height
            Width: =10
            X: |-
                =If(
                    IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes),
                    If(
                        var_ctn_ES_Candidates_BS_Collapse,
                        Parent.Width - 60,
                        Parent.Width * 68%
                    ),
                    Parent.Width
                )//glry_ExecSummary_NL.X  - 9
            ZIndex: =1

        ctn_ES_Candidates_BS As groupContainer.manualLayoutContainer:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Height: =Parent.Height - Self.Y - 10
            Visible: =var_ctn_ES_Candidates_BS_Collapse <> true && btn_Save_ExecSum.Visible
            Width: =Parent.Width - Self.X - 10
            X: =Separator_ctn_ExecSum.X + Separator_ctn_ExecSum.Width 
            Y: =ctn_ES_Save_BS.Y + ctn_ES_Save_BS.Height 
            ZIndex: =2

            glry_ExecSummary_NL As gallery.variableTemplateHeightGallery:
                BorderColor: =Back_glry_NL_BS.Fill
                BorderThickness: =2
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Parent.Height - Self.Y - 1
                Items: |-
                    =Ungroup(
                        ForAll(
                            Sequence(CountRows(Search(Filter(clln_NolightMetricType, If(IsBlank(ThisRecord.MetricValueFill), "W", ThisRecord.MetricValueFill) in var_MetricToAdd_Colors || IsBlankOrError(var_MetricToAdd_Colors)), Trim(Text_ExecSum_SearchMetrics.Text), "MetricTypeName"))),
                            {
                                Record: Table(Last(FirstN(Search(Filter(clln_NolightMetricType, If(IsBlank(ThisRecord.MetricValueFill), "W", ThisRecord.MetricValueFill) in var_MetricToAdd_Colors || IsBlankOrError(var_MetricToAdd_Colors)), Trim(Text_ExecSum_SearchMetrics.Text), "MetricTypeName"), Value))),
                                RowNumber: Value
                            }
                        ),
                        "Record"
                    )
                Layout: =Layout.Vertical
                TemplateFill: =If(Mod(ThisItem.RowNumber, 2)= 1, RGBA(255, 255, 255, 1), ColorFade(SUBGROUPCOLOR, 65%))
                TemplatePadding: =0
                TemplateSize: =60
                Width: =Parent.Width - 2
                X: =1
                Y: =btn_glry_NL_SelectAll.Y + btn_glry_NL_SelectAll.Height - 1
                ZIndex: =1

                lbl_Height_NL_BS As label:
                    Height: =25
                    OnSelect: =Select(Parent)
                    Size: =10
                    Text: =lbl_NL_MetricName_BS.Height + If(html_NL_Comment_BS.Visible, html_NL_Comment_BS.Height, 0)
                    Visible: =false
                    Width: =1
                    Y: =15
                    ZIndex: =1

                html_NL_Comment_BS As htmlViewer:
                    AutoHeight: =true
                    BorderColor: =RGBA(0, 0, 0, 0)
                    Color: =Check_ExecSum_NL.CheckboxBorderColor
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =RGBA(255, 255, 255, 1)
                    DisplayMode: =DisplayMode.View
                    Fill: =
                    Font: =FontStyle
                    HtmlText: |-
                        =If(
                            IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                            "",
                            "<font style='font-weight: 600; font-size:18px;'>&#128221; </font>" & ThisItem.MetricComment //&#128172;  &#128204;
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =10
                    PaddingLeft: =30
                    PaddingRight: =10
                    PaddingTop: =0
                    Size: =10
                    Tooltip: ="Comment"
                    Visible: |-
                        =If(
                            IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                            false,
                            true
                        )
                    Width: =Parent.Width 
                    Y: =lbl_NL_MetricName_BS.Y + lbl_NL_MetricName_BS.Height
                    ZIndex: =2

                lbl_NL_Target_BS As label:
                    Align: =Align.Center
                    Color: =If(Self.Text = "Not Available", GRAYCOLOR, RGBA(0, 0, 0, 1))
                    Font: =FontStyle
                    FontWeight: =bttn_NL_Value_BS.FontWeight
                    Height: =25
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =8
                    PaddingTop: =0
                    Size: =bttn_NL_Value_BS.Size
                    Text: =If( IsBlank(ThisItem.MetricTarget) || Trim(ThisItem.MetricTarget) = "", "Not Available", ThisItem.MetricTarget)
                    Tooltip: =bttn_NL_Value_BS.Tooltip
                    Width: =lbl_NL_HeaderTarget_BS.Width
                    X: =bttn_NL_Value_BS.X + bttn_NL_Value_BS.Width
                    Y: =bttn_NL_Value_BS.Y
                    ZIndex: =3

                bttn_NL_Value_BS As button:
                    BorderColor: =Self.Fill
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: |-
                        =If(
                            Self.Text="..." || Trim(Self.Text)="" || lbl_NL_Target_BS.Text="Not Available", 
                            Color.Black,
                            If(
                                Self.Text="Not Applicable",
                                GRAYCOLOR,
                                Switch(
                                    Self.Fill,
                                    GREENCOLOR, GreenFontColor,
                                    YellowTargetColor, YellowFontColor,
                                    REDCOLOR, RedFontColor,
                                    RGBA(0, 0, 0, 0), RGBA(1, 1, 1, 1)
                                )
                            )
                        )
                    ContentLanguage: =
                    DisplayMode: =DisplayMode.View
                    Fill: |-
                        =Switch(
                            ThisItem.MetricValueFill,
                            "G", GREENCOLOR,
                            "R", REDCOLOR,
                            "Y", YellowTargetColor,
                            "W", RGBA(0,0,0,0),
                            Blank(), RGBA(0,0,0,0),
                            "", RGBA(0,0,0,0)
                        )
                    Font: =FontStyle
                    FontWeight: =If(!Check_ExecSum_NL.Value, FontWeight.Normal, FontWeight.Bold) 
                    Height: =25
                    HoverColor: =Self.Color
                    HoverFill: =ColorFade(Self.Fill, -10%)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedColor: =Color.White
                    PressedFill: =ColorFade(Self.Fill, 25%)
                    RadiusBottomLeft: =15
                    RadiusBottomRight: =15
                    RadiusTopLeft: =15
                    RadiusTopRight: =15
                    Size: =9.5
                    Text: =ThisItem.MetricValue
                    Tooltip: |-
                        =If(
                            (ThisItem.MetricValueType="Number" || ThisItem.MetricValueType="Percentage") 
                                && Self.Text <> "Not Applicable",
                        
                            If(
                                !IsBlankOrError(ThisItem.YellowRangeTarget), 
                                "YellowRangeStart: " & ThisItem.YellowRangeTarget & If(ThisItem.MetricValueType="Percentage", "%"), 
                                ""
                            ) 
                            &
                                If(
                                    !IsBlankOrError(ThisItem.GreenRangeTarget), 
                                    " GreenRangeStart: " & ThisItem.GreenRangeTarget & If(ThisItem.MetricValueType="Percentage", "%"), 
                                    ""
                                ) 
                            & 
                                If(
                                    !IsBlankOrError(ThisItem.MetricTarget), 
                                    " Target:" & ThisItem.MetricTarget & If(ThisItem.MetricValueType="Percentage", "%"),
                                    ""
                                )
                        )
                    Width: =lbl_NL_HeaderValue_BS.Width
                    X: =lbl_NL_MetricName_BS.X + lbl_NL_MetricName_BS.Width
                    Y: =(lbl_NL_MetricName_BS.Height - Self.Height) * 0.50
                    ZIndex: =4

                lbl_NL_MetricName_BS As label:
                    AutoHeight: =true
                    Color: =Check_ExecSum_NL.CheckboxBorderColor //If(!Check_ExecSum_NL.Value, RGBA(0, 0, 0, 1), BlueControlDarkBackground) 
                    Font: =FontStyle
                    FontWeight: =FontWeight.Semibold
                    OnSelect: =Select(Parent)
                    PaddingBottom: =Self.PaddingTop
                    PaddingLeft: =If(Text(ThisItem.IsTrendDown) = "Yes", 25, 0)
                    PaddingTop: |-
                        =If(
                            IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                            10,
                            8
                        )
                    Size: =10
                    Text: =ThisItem.MetricTypeName
                    Tooltip: |-
                        ="Metric Short Name: " & ThisItem.MetricTypeShortName
                    Width: =lbl_NL_HeaderValue_BS.X - Self.X
                    X: =Check_ExecSum_NL.X + Check_ExecSum_NL.Width
                    ZIndex: =5

                Img_TrendingDown_NL As image:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    Height: =37
                    Image: =TrendingDown
                    OnSelect: =Select(Parent)
                    Visible: =ThisItem.IsTrendDown = "Yes"
                    Width: =20
                    X: =Check_ExecSum_NL.X + Check_ExecSum_NL.Width
                    Y: =0 //Label_MetricType_Title.Height*0.5 - Self.Height*0.5
                    ZIndex: =6

                Check_ExecSum_NL As checkbox:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    CheckboxBorderColor: =If(Self.Value, BlueControlDarkBackground, RGBA(0, 0, 0, 1)) 
                    CheckboxSize: =btn_glry_NL_SelectAll.CheckboxSize
                    Default: =If(btn_glry_NL_SelectAll.Value = true, true, false)
                    DisabledBorderColor: =RGBA(0, 0, 0, 1)
                    Font: =FontStyle
                    Height: =30
                    HoverColor: =RGBA(0, 0, 0, 1)
                    OnSelect: =Select(Parent)
                    PaddingLeft: =5
                    PressedColor: =RGBA(0, 0, 0, 1)
                    Text: =""
                    Width: =33
                    ZIndex: =7

            html_Candidates_NoDataTip_BS As htmlViewer:
                DisplayMode: =DisplayMode.View
                Font: =FontStyle
                Height: =55
                HtmlText: ="<center><font color=gray>No metrics available</font></center>"
                PaddingTop: =20
                Visible: =IsEmpty(glry_ExecSummary_NL.AllItems)
                Width: =Parent.Width
                Y: =glry_ExecSummary_NL.Y
                ZIndex: =2

            btn_glry_NL_SelectAll As checkbox:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                CheckboxBorderColor: =RGBA(0, 0, 0, 1)
                CheckboxSize: =23
                Color: =If(Self.Value, BlueControlDarkBackground, RGBA(0, 0, 0, 1)) 
                Fill: =RGBA(220, 220, 220, 1)
                Font: =FontStyle
                FontWeight: =If(Self.Value, FontWeight.Bold, FontWeight.Semibold)
                Height: =30
                HoverColor: =Self.Color
                HoverFill: =Self.Fill
                OnSelect: =
                PaddingLeft: =6
                PressedColor: =RGBA(0, 0, 0, 1)
                PressedFill: =Self.Fill
                Size: =10
                Text: ="Select All"
                Width: =Parent.Width
                Y: =Back_SearchMetrics_BS.Height + Back_SearchMetrics_BS.Y
                ZIndex: =3

            Label_glry_Nolights As label:
                Align: =Align.Center
                Fill: =RGBA(230, 230, 230, 1)
                Font: =FONTNAME
                FontWeight: =FontWeight.Bold
                Height: =80
                PaddingTop: =8
                Size: =11
                Text: ="Metric Selection"
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width - Separator_ctn_ExecSum.X - Separator_ctn_ExecSum.Width - Parent.Width*0.018
                X: =395.79999999999995
                ZIndex: =4

            lbl_NL_HeaderTarget_BS As label:
                Align: =Align.Center
                BorderStyle: =BorderStyle.None
                DisplayMode: =DisplayMode.View
                Fill: =lbl_LL_HeaderMetric_BS.Fill
                Font: =FontStyle
                FontWeight: =FontWeight.Bold
                Height: =btn_glry_NL_SelectAll.Height
                Size: =10
                Text: ="Target"
                Width: =115
                X: =Parent.Width - Self.Width
                Y: =btn_glry_NL_SelectAll.Y
                ZIndex: =5

            lbl_NL_HeaderValue_BS As label:
                Align: =Align.Center
                BorderStyle: =BorderStyle.None
                DisplayMode: =DisplayMode.View
                Fill: =lbl_LL_HeaderMetric_BS.Fill
                Font: =FontStyle
                FontWeight: =FontWeight.Bold
                Height: =btn_glry_NL_SelectAll.Height
                Size: =10
                Text: ="Value"
                Width: =115
                X: =lbl_NL_HeaderTarget_BS.X - Self.Width
                Y: =btn_glry_NL_SelectAll.Y
                ZIndex: =6

            Back_SearchMetrics_BS As rectangle:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Fill: =btn_glry_NL_SelectAll.Fill
                Height: =40
                Width: =Parent.Width
                Y: =ctn_ESColorFilter_BS.Y + ctn_ESColorFilter_BS.Height
                ZIndex: =7

            Text_ExecSum_SearchMetrics As text:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Clear: =true
                Default: =""
                Font: =FontStyle
                Height: =25
                HintText: ="Search Metrics"
                HoverFill: =GrayCanvasBackground
                PaddingBottom: =2
                PaddingLeft: =8
                PaddingTop: =2
                RadiusBottomLeft: =15
                RadiusBottomRight: =15
                RadiusTopLeft: =15
                RadiusTopRight: =15
                Size: =10
                Width: =btn_AddToHL.X - Self.X - 10
                X: =10
                Y: =Back_SearchMetrics_BS.Y + (Back_SearchMetrics_BS.Height - Self.Height) * 0.50 
                ZIndex: =8

            btn_AddToLL As button:
                BorderColor: =Self.Fill
                Fill: =Back_glry_LL_BS.Color
                Font: =FontStyle
                Height: =btn_AddToHL.Height
                HoverBorderColor: =Self.BorderColor
                HoverColor: =Self.Fill
                HoverFill: =Self.Color
                OnSelect: |-
                    =Collect(
                        clln_LowlightMetricType, 
                        Filter(clln_NolightMetricType, ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID)
                    );
                    
                    RemoveIf(
                        clln_NolightMetricType,
                        ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID
                    );
                    
                    Concurrent(
                        Set(var_MetricToAdd_Colors, Blank()),
                        Reset(Text_ExecSum_SearchMetrics),
                        Reset(btn_glry_NL_SelectAll),
                        Reset(Checkbox_ESGreen_BS), Reset(Checkbox_ESYellow_BS), Reset(Checkbox_ESRed_BS), Reset(Checkbox_ESNoColor_BS)
                    )
                RadiusBottomLeft: =20
                RadiusBottomRight: =20
                RadiusTopLeft: =20
                RadiusTopRight: =20
                Size: =10
                Text: ="Add to Lowlights"
                Visible: =btn_Save_ExecSum.Visible
                Width: =btn_AddToHL.Width
                X: =Back_glry_NL_BS.Width - Self.Width - 5
                Y: =btn_AddToHL.Y
                ZIndex: =9

            btn_AddToHL As button:
                BorderColor: =Self.Fill
                Fill: =Back_glry_HL_BS.Color
                Font: =FontStyle
                Height: =25
                HoverBorderColor: =Self.BorderColor
                HoverColor: =Self.Fill
                HoverFill: =Self.Color
                OnSelect: |-
                    =Collect(
                        clln_HighlightMetricType, 
                        Filter(clln_NolightMetricType, ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID)
                    );
                    
                    RemoveIf(
                        clln_NolightMetricType,
                        ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID
                    );
                    
                    Concurrent(
                        Set(var_MetricToAdd_Colors, Blank()),
                        Reset(Text_ExecSum_SearchMetrics),
                        Reset(btn_glry_NL_SelectAll),
                        Reset(Checkbox_ESGreen_BS), Reset(Checkbox_ESYellow_BS), Reset(Checkbox_ESRed_BS), Reset(Checkbox_ESNoColor_BS)
                    )
                RadiusBottomLeft: =20
                RadiusBottomRight: =20
                RadiusTopLeft: =20
                RadiusTopRight: =20
                Size: =10
                Text: ="Add to Highlights"
                Visible: =btn_Save_ExecSum.Visible
                Width: =130
                X: =Max(100, btn_AddToLL.X - Self.Width - 10)
                Y: =Back_SearchMetrics_BS.Y + (Back_SearchMetrics_BS.Height - Self.Height) * 0.50
                ZIndex: =10

            ctn_ESColorFilter_BS As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Fill: =btn_glry_NL_SelectAll.Fill
                Height: =40
                Width: =Parent.Width
                Y: =Back_glry_NL_BS.Y + Back_glry_NL_BS.Height
                ZIndex: =12

                btn_BackNoColor_BS As button:
                    BorderColor: =Self.Fill
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =RGBA(0, 0, 0, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    Font: =FontStyle
                    Height: =25
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =Self.Fill
                    HoverFill: =Self.Color
                    OnSelect: |-
                        =Collect(
                            clln_HighlightMetricType, 
                            Filter(clln_NolightMetricType, ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID)
                        );
                        
                        RemoveIf(
                            clln_NolightMetricType,
                            ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID
                        );
                        
                        Concurrent(
                            Reset(Text_ExecSum_SearchMetrics),
                            Reset(btn_glry_NL_SelectAll)
                        )
                    RadiusBottomLeft: =15
                    RadiusBottomRight: =15
                    RadiusTopLeft: =15
                    RadiusTopRight: =15
                    Size: =10
                    Text: =""
                    Width: =Checkbox_ESNoColor_BS.Width
                    X: =Checkbox_ESNoColor_BS.X
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =1

                Checkbox_ESNoColor_BS As checkbox:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    CheckboxBorderColor: =RGBA(0, 0, 0, 1)
                    CheckboxSize: =btn_glry_NL_SelectAll.CheckboxSize
                    Font: =FontStyle
                    FontWeight: =If(Self.Value, FontWeight.Bold, FontWeight.Normal)
                    Height: =btn_BackNoColor_BS.Height
                    HoverColor: =Self.Color
                    OnSelect: |-
                        =If(
                            Self.Value, 
                            Set(var_MetricToAdd_Colors, var_MetricToAdd_Colors & "W"),
                            Set(var_MetricToAdd_Colors, Substitute(var_MetricToAdd_Colors, "W", ""))
                        )
                    PaddingBottom: =2
                    PaddingLeft: =6
                    PressedColor: =Self.Color
                    Size: =9
                    Text: ="No Color"
                    Tooltip: ="Metric has value but no target."
                    Width: =100
                    X: =Checkbox_ESRed_BS.X + Checkbox_ESRed_BS.Width + 10
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =2

                btn_BackRed_BS As button:
                    BorderColor: =Self.Fill
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =RedFontColor
                    Fill: =REDCOLOR
                    Font: =FontStyle
                    Height: =25
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =Self.Fill
                    HoverFill: =Self.Color
                    OnSelect: |-
                        =Collect(
                            clln_HighlightMetricType, 
                            Filter(clln_NolightMetricType, ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID)
                        );
                        
                        RemoveIf(
                            clln_NolightMetricType,
                            ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID
                        );
                        
                        Concurrent(
                            Reset(Text_ExecSum_SearchMetrics),
                            Reset(btn_glry_NL_SelectAll)
                        )
                    RadiusBottomLeft: =15
                    RadiusBottomRight: =15
                    RadiusTopLeft: =15
                    RadiusTopRight: =15
                    Size: =10
                    Text: =""
                    Width: =Checkbox_ESRed_BS.Width
                    X: =Checkbox_ESRed_BS.X
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =3

                Checkbox_ESRed_BS As checkbox:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    CheckboxBorderColor: =RedFontColor
                    CheckboxSize: =btn_glry_NL_SelectAll.CheckboxSize
                    Color: =RedFontColor
                    Font: =FontStyle
                    FontWeight: =If(Self.Value, FontWeight.Bold, FontWeight.Normal)
                    Height: =btn_BackRed_BS.Height
                    HoverColor: =Self.Color
                    OnSelect: |-
                        =If(
                            Self.Value, 
                            Set(var_MetricToAdd_Colors, var_MetricToAdd_Colors & "R"),
                            Set(var_MetricToAdd_Colors, Substitute(var_MetricToAdd_Colors, "R", ""))
                        )
                    PaddingBottom: =2
                    PaddingLeft: =6
                    PressedColor: =Self.Color
                    Size: =9
                    Text: ="Red"
                    Tooltip: ="Metric value is smaller than yellow range start value."
                    Width: =70
                    X: =Checkbox_ESYellow_BS.X + Checkbox_ESYellow_BS.Width + 10
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =4

                btn_BackYellow_BS As button:
                    BorderColor: =Self.Fill
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =YellowFontColor
                    Fill: =YellowTargetColor
                    Font: =FontStyle
                    Height: =25
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =Self.Fill
                    HoverFill: =Self.Color
                    OnSelect: |-
                        =Collect(
                            clln_HighlightMetricType, 
                            Filter(clln_NolightMetricType, ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID)
                        );
                        
                        RemoveIf(
                            clln_NolightMetricType,
                            ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID
                        );
                        
                        Concurrent(
                            Reset(Text_ExecSum_SearchMetrics),
                            Reset(btn_glry_NL_SelectAll)
                        )
                    RadiusBottomLeft: =15
                    RadiusBottomRight: =15
                    RadiusTopLeft: =15
                    RadiusTopRight: =15
                    Size: =10
                    Text: =""
                    Width: =Checkbox_ESYellow_BS.Width
                    X: =Checkbox_ESYellow_BS.X
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =5

                Checkbox_ESYellow_BS As checkbox:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    CheckboxBorderColor: =YellowFontColor
                    CheckboxSize: =btn_glry_NL_SelectAll.CheckboxSize
                    Color: =YellowFontColor
                    Font: =FontStyle
                    FontWeight: =If(Self.Value, FontWeight.Bold, FontWeight.Normal)
                    Height: =btn_BackYellow_BS.Height
                    HoverColor: =Self.Color
                    OnSelect: |-
                        =If(
                            Self.Value, 
                            Set(var_MetricToAdd_Colors, var_MetricToAdd_Colors & "Y"),
                            Set(var_MetricToAdd_Colors, Substitute(var_MetricToAdd_Colors, "Y", ""))
                        )
                    PaddingBottom: =2
                    PaddingLeft: =6
                    PressedColor: =Self.Color
                    Size: =9
                    Text: ="Yellow"
                    Tooltip: ="Metric value is between yellow range start value and target."
                    Width: =85
                    X: =Checkbox_ESGreen_BS.X + Checkbox_ESGreen_BS.Width + 10
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =6

                btn_BackGreen_BS As button:
                    BorderColor: =Self.Fill
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =GreenFontColor
                    Fill: =GREENCOLOR
                    Font: =FontStyle
                    Height: =25
                    HoverBorderColor: =Self.BorderColor
                    HoverColor: =Self.Fill
                    HoverFill: =Self.Color
                    OnSelect: |-
                        =Collect(
                            clln_HighlightMetricType, 
                            Filter(clln_NolightMetricType, ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID)
                        );
                        
                        RemoveIf(
                            clln_NolightMetricType,
                            ThisRecord.MetricTypeID in Filter(glry_ExecSummary_NL.AllItems, ThisRecord.Check_ExecSum_NL.Value = true).MetricTypeID
                        );
                        
                        Concurrent(
                            Reset(Text_ExecSum_SearchMetrics),
                            Reset(btn_glry_NL_SelectAll)
                        )
                    RadiusBottomLeft: =15
                    RadiusBottomRight: =15
                    RadiusTopLeft: =15
                    RadiusTopRight: =15
                    Size: =10
                    Text: =""
                    Width: =Checkbox_ESGreen_BS.Width
                    X: =Checkbox_ESGreen_BS.X
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =7

                Checkbox_ESGreen_BS As checkbox:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    CheckboxBorderColor: =GreenFontColor
                    CheckboxSize: =23
                    Color: =GreenFontColor
                    Font: =FontStyle
                    FontWeight: =If(Self.Value, FontWeight.Bold, FontWeight.Normal)
                    Height: =btn_BackGreen_BS.Height
                    HoverColor: =Self.Color
                    OnSelect: |-
                        =If(
                            Self.Value, 
                            Set(var_MetricToAdd_Colors, var_MetricToAdd_Colors & "G"),
                            Set(var_MetricToAdd_Colors, Substitute(var_MetricToAdd_Colors, "G", ""))
                        )
                    PaddingBottom: =2
                    PaddingLeft: =6
                    PressedColor: =Self.Color
                    Size: =9
                    Text: ="Green"
                    Tooltip: ="Metric value is greater than target or green range start value."
                    Width: =85
                    X: =lbl_ESSelectColors_BS.X + lbl_ESSelectColors_BS.Width
                    Y: =(Parent.Height - Self.Height) * 0.50
                    ZIndex: =8

                lbl_ESSelectColors_BS As label:
                    Font: =FontStyle
                    FontWeight: =FontWeight.Semibold
                    PaddingBottom: =0
                    PaddingLeft: =8
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =10
                    Text: ="Filter"
                    Width: =50
                    ZIndex: =9

            Back_glry_NL_BS As button:
                Align: =Align.Left
                BorderColor: =Self.Fill
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =RGBA(0, 0, 0, 1)
                Fill: =ColorFade(BlueNaviHightLightBackground, 50%) // Back_ExecSumDesc_BS.Fill
                Font: =FontStyle
                FontWeight: =FontWeight.Bold
                HoverColor: =Self.Color
                HoverFill: =Self.Fill
                OnSelect: =Set(var_ctn_ES_Candidates_BS_Collapse, true)
                PaddingLeft: =15
                PressedColor: =Self.Color
                PressedFill: =Self.Fill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =20
                RadiusTopRight: |
                    =20
                Size: =11
                Text: ="Metrics To Add (" & CountRows(glry_ExecSummary_NL.AllItems) & ")"
                Width: =Parent.Width 
                ZIndex: =13

            Collapse_ES_Candidates_BS As icon.DockRight:
                AutoDisableOnSelect: =false
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: =RGBA(0, 0, 0, 1)
                Height: =Back_glry_NL_BS.Height
                Icon: =Icon.DockRight
                OnSelect: =Select(Back_glry_NL_BS)
                PaddingBottom: =2
                PaddingLeft: =7
                PaddingRight: =7
                PaddingTop: =8
                Width: =Self.Height
                X: =Parent.Width - Self.Width
                ZIndex: =14

        ctn_ES_Candidates_BS_Hide As groupContainer.manualLayoutContainer:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Height: =ctn_ES_Candidates_BS.Height
            Visible: =var_ctn_ES_Candidates_BS_Collapse = true && btn_Save_ExecSum.Visible
            Width: =40
            X: =Parent.Width - Self.Width - 10
            Y: =ctn_ES_Candidates_BS.Y
            ZIndex: =3

            Back_Expand_ES_Candidate As button:
                AutoDisableOnSelect: =false
                BorderColor: =RGBA(0,0,0,0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =RGBA(0,0,0,0)
                Fill: =Back_glry_NL_BS.Fill
                FontWeight: =FontWeight.Normal
                Height: =Parent.Height
                HoverBorderColor: =Self.BorderColor
                HoverColor: =Self.Color
                HoverFill: =Self.Fill
                OnSelect: =Select(Expand_ES_Candidates_BS);
                PressedBorderColor: =Self.BorderColor
                PressedColor: =Self.Color
                PressedFill: =Self.Fill
                RadiusBottomLeft: =20
                RadiusBottomRight: =20
                RadiusTopLeft: =20
                RadiusTopRight: =20
                Size: =10
                Text: =""
                Width: =Parent.Width
                ZIndex: =1

            img_Expand_ES_Candidate As image:
                Height: =Parent.Height - Self.Y
                Image: |-
                    ="data:image/svg+xml," &
                    EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg'>
                        <text x='10' y='-15' fill='black' font-size='11pt' font-weight='bold' font-family='Arial' transform='rotate(90 0, 0)'>" & Back_glry_NL_BS.Text &
                        "</text></svg>")
                Width: =Parent.Width
                X: |
                    =0
                Y: =Expand_ES_Candidates_BS.Height
                ZIndex: =2

            Front_Expand_ES_Candidate_1 As button:
                AutoDisableOnSelect: =false
                BorderColor: =RGBA(0,0,0,0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FontWeight: =FontWeight.Normal
                Height: =Parent.Height
                HoverBorderColor: =Self.BorderColor
                HoverColor: =Self.Color
                HoverFill: =Self.Fill
                OnSelect: =Select(Expand_ES_Candidates_BS);
                PressedBorderColor: =Self.BorderColor
                PressedColor: =Self.Color
                PressedFill: =Self.Fill
                RadiusBottomLeft: =20
                RadiusBottomRight: =20
                RadiusTopLeft: =20
                RadiusTopRight: =20
                Size: =10
                Text: =""
                Width: =Parent.Width
                ZIndex: =3

            Expand_ES_Candidates_BS As icon.DockRight:
                AutoDisableOnSelect: =false
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: =RGBA(0, 0, 0, 1)
                Height: =Back_glry_NL_BS.Height
                Icon: =Icon.DockLeft
                OnSelect: =Set(var_ctn_ES_Candidates_BS_Collapse, false)
                PaddingBottom: =2
                PaddingLeft: =7
                PaddingRight: =7
                PaddingTop: =8
                Width: =40
                X: =Parent.Width - Self.Width
                ZIndex: =4

        vctn_ES_BS As groupContainer.verticalAutoLayoutContainer:
            BorderStyle: =BorderStyle.None
            Height: |
                =Parent.Height - Self.Y - 10
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =10
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            Width: =Separator_ctn_ExecSum.X - Self.X 
            X: =10
            Y: =ctn_ES_Save_BS.Y + ctn_ES_Save_BS.Height
            ZIndex: =4

            ctn_ESDesc_BS As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =If(Len(ti_ExecSumDesc_BS.HtmlText) > 4000, Color.Red, RGBA(0,0,0,0))
                BorderThickness: =If(Len(ti_ExecSumDesc_BS.HtmlText) > 4000, 2, 0)
                FillPortions: =0
                Height: =Back_ExecSumDesc_BS.Height
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                ZIndex: =1

                Back_ExecSumDesc_BS As button:
                    Align: =Align.Left
                    BorderColor: =Self.Fill
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =Self.Fill
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =Self.Fill
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =SUBGROUPCOLOR
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: |-
                        =If(
                            ti_ExecSumDesc_BS.Visible,
                            html_ExecSumDesc_BS.Height + 150,
                            html_ExecSumDesc_BS.Height + 42
                        )
                    PaddingLeft: =15
                    PaddingTop: =10
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =20
                    RadiusTopRight: =Self.RadiusTopLeft
                    Size: =11
                    Text: ="Executive Summary"
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width
                    ZIndex: =1

                html_ExecSumDesc_BS As htmlViewer:
                    AutoHeight: =true
                    BorderColor: =
                    Fill: =RGBA(255, 255, 255, 1)
                    Font: =FontStyle
                    Height: =
                    HtmlText: |-
                        =If(
                            ti_ExecSumDesc_BS.Visible,
                            ti_ExecSumDesc_BS.HtmlText,
                            LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_executivesummarydescription
                        )
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Visible: =true //If(IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), false, true)
                    Width: =Back_ExecSumDesc_BS.Width - 4
                    X: =2
                    Y: =40
                    ZIndex: =2

                ti_ExecSumDesc_BS As richTextEditor:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    Default: =LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_executivesummarydescription
                    Height: =Back_ExecSumDesc_BS.Height - 34
                    Visible: = If(IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), true, false)
                    Width: =Back_ExecSumDesc_BS.Width + 4
                    X: =Back_ExecSumDesc_BS.X - 2
                    Y: =Back_ExecSumDesc_BS.Y + 36
                    ZIndex: =3

                label_Save_ExecSum_Warning As label:
                    Align: =Align.Right
                    Color: =RGBA(255, 0, 0, 1)
                    Font: =FontStyle
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    PaddingBottom: =2
                    PaddingRight: =20
                    Size: =10
                    Text: |-
                        ="Number of characters: " & Len(ti_ExecSumDesc_BS.HtmlText) & " (maximum allowed: 4,000)"
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =Len(ti_ExecSumDesc_BS.HtmlText) > 4000
                    Width: =400
                    X: =Parent.Width - Self.Width
                    ZIndex: =4

            ctn_ESGlry_BS As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: |-
                    =Max(
                        Back_glry_HL_BS.Height + lbl_HL_HeaderMetric_BS.Height + glry_ExecSummary_HL_BS.Height + 3 + If(html_Highlight_NoDataTip_BS.Visible, html_Highlight_NoDataTip_BS.Height, 0), 
                        Back_glry_LL_BS.Height + lbl_LL_HeaderMetric_BS.Height + glry_ExecSummary_LL_BS.Height + 3 + If(html_Lowlight_NoDataTip_BS.Visible, html_Lowlight_NoDataTip_BS.Height, 0)
                    )
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                ZIndex: =10

                glry_ExecSummary_LL_BS As gallery.variableTemplateHeightGallery:
                    BorderColor: =SUBGROUPCOLOR
                    BorderThickness: =1
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Sum(Self.AllItems, If(IsError(lbl_Height_LL_BS.Text), 0, Value(lbl_Height_LL_BS.Text)))
                    Items: |-
                        =//Use the Ungroup function to add a Row Number column.
                        Ungroup(
                            ForAll(
                                Sequence(CountRows(clln_LowlightMetricType)),
                                {
                                    Record: Table(Last(FirstN(clln_LowlightMetricType, Value))),
                                    RowNumber: Value
                                }
                            ),
                            "Record"
                        )
                    Layout: =Layout.Vertical
                    ShowScrollbar: =false
                    TemplateFill: =If(Mod(ThisItem.RowNumber, 2)= 1, RGBA(255, 255, 255, 1), ColorFade(SUBGROUPCOLOR, 65%))
                    TemplatePadding: =0
                    TemplateSize: =40
                    Width: =Back_glry_LL_BS.Width - 2
                    X: =Back_glry_LL_BS.X + 1
                    Y: =lbl_LL_HeaderMetric_BS.Y + lbl_LL_HeaderMetric_BS.Height
                    ZIndex: =1

                    lbl_Height_LL_BS As label:
                        Height: =25
                        OnSelect: =Select(Parent)
                        Size: =10
                        Text: =lbl_LL_MetricName_BS.Height + If(html_LL_Comment_BS.Visible, html_LL_Comment_BS.Height, 0)
                        Visible: =false
                        Width: =1
                        Y: =44
                        ZIndex: =9

                    html_LL_Comment_BS As htmlViewer:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 0)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =RGBA(255, 255, 255, 1)
                        DisplayMode: =DisplayMode.View
                        Font: =FontStyle
                        HtmlText: |-
                            =If(
                                IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                                "",
                                "<font style='font-weight: 600; font-size:18px;'>&#128221; </font>" & ThisItem.MetricComment //&#128172;  &#128204;
                            )
                        OnSelect: =Select(Parent)
                        PaddingBottom: =10
                        PaddingTop: =0
                        Size: =10
                        Tooltip: ="Comment"
                        Visible: |-
                            =If(
                                IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                                false,
                                true
                            )
                        Width: =Parent.Width 
                        Y: =lbl_LL_MetricName_BS.Y + lbl_LL_MetricName_BS.Height
                        ZIndex: =10

                    Remove_ExecSum_LL As icon.ChevronRight:
                        AccessibleLabel: =Self.Tooltip
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        Color: =BlueControlDarkBackground
                        Height: =25
                        HoverColor: =RGBA(255, 0, 0, 1)
                        Icon: =Icon.Trash
                        OnSelect: |-
                            =Collect(clln_NolightMetricType, LookUp(clln_LowlightMetricType, ThisRecord.FactMetricID = ThisItem.FactMetricID));
                            RemoveIf(clln_LowlightMetricType, ThisRecord.FactMetricID = ThisItem.FactMetricID);
                        PaddingBottom: =3
                        PaddingLeft: =3
                        PaddingRight: =3
                        PaddingTop: =3
                        TabIndex: =0
                        Tooltip: ="Remove from Lowlights"
                        Visible: =btn_Save_ExecSum.DisplayMode <> DisplayMode.Disabled
                        Width: =25
                        X: =Parent.Width - Self.Width
                        Y: =(lbl_LL_MetricName_BS.Height - Self.Height) * 0.50
                        ZIndex: =11

                    lbl_LL_Target_BS As label:
                        Align: =Align.Center
                        Color: =If(Self.Text = "Not Available", GRAYCOLOR, RGBA(0, 0, 0, 1))
                        Font: =FontStyle
                        FontWeight: =bttn_LL_Value_BS.FontWeight
                        Height: =25
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =bttn_LL_Value_BS.Size
                        Text: =If( IsBlank(ThisItem.MetricTarget) || Trim(ThisItem.MetricTarget) = "", "Not Available", ThisItem.MetricTarget)
                        Tooltip: =bttn_LL_Value_BS.Tooltip
                        Width: =lbl_LL_HeaderTarget_BS.Width
                        X: =bttn_LL_Value_BS.X + bttn_LL_Value_BS.Width
                        Y: =bttn_LL_Value_BS.Y
                        ZIndex: =12

                    bttn_LL_Value_BS As button:
                        BorderColor: =Self.Fill
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =0
                        Color: |-
                            =If(
                                Self.Text="..." || Trim(Self.Text)="" || lbl_LL_Target_BS.Text="Not Available", 
                                Color.Black,
                                If(
                                    Self.Text="Not Applicable",
                                    GRAYCOLOR,
                                    Switch(
                                        Self.Fill,
                                        GREENCOLOR, GreenFontColor,
                                        YellowTargetColor, YellowFontColor,
                                        REDCOLOR, RedFontColor,
                                        RGBA(0, 0, 0, 0), RGBA(1, 1, 1, 1)
                                    )
                                )
                            )
                        ContentLanguage: =
                        DisplayMode: =DisplayMode.View
                        Fill: |-
                            =Switch(
                                ThisItem.MetricValueFill,
                                "G", GREENCOLOR,
                                "R", REDCOLOR,
                                "Y", YellowTargetColor,
                                "W", RGBA(0,0,0,0),
                                Blank(), RGBA(0,0,0,0),
                                "", RGBA(0,0,0,0)
                            )
                        Font: =FontStyle
                        FontWeight: =FontWeight.Normal
                        Height: =25
                        HoverColor: =Self.Color
                        HoverFill: =ColorFade(Self.Fill, -10%)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedColor: =Color.White
                        PressedFill: =ColorFade(Self.Fill, 25%)
                        RadiusBottomLeft: =15
                        RadiusBottomRight: =15
                        RadiusTopLeft: =15
                        RadiusTopRight: =15
                        Size: =9.5
                        Text: =ThisItem.MetricValue
                        Tooltip: |-
                            =If(
                                (ThisItem.MetricValueType="Number" || ThisItem.MetricValueType="Percentage") 
                                    && Self.Text <> "Not Applicable",
                            
                                If(
                                    !IsBlankOrError(ThisItem.YellowRangeTarget), 
                                    "YellowRangeStart: " & ThisItem.YellowRangeTarget & If(ThisItem.MetricValueType="Percentage", "%"), 
                                    ""
                                ) 
                                &
                                    If(
                                        !IsBlankOrError(ThisItem.GreenRangeTarget), 
                                        " GreenRangeStart: " & ThisItem.GreenRangeTarget & If(ThisItem.MetricValueType="Percentage", "%"), 
                                        ""
                                    ) 
                                & 
                                    If(
                                        !IsBlankOrError(ThisItem.MetricTarget), 
                                        " Target:" & ThisItem.MetricTarget & If(ThisItem.MetricValueType="Percentage", "%"),
                                        ""
                                    )
                            )
                        Width: =lbl_LL_HeaderValue_BS.Width
                        X: =lbl_LL_MetricName_BS.X + lbl_LL_MetricName_BS.Width
                        Y: =(lbl_LL_MetricName_BS.Height - Self.Height) * 0.50
                        ZIndex: =13

                    lbl_LL_MetricName_BS As label:
                        AutoHeight: =true
                        Font: =FontStyle
                        FontWeight: =FontWeight.Semibold
                        OnSelect: =Select(Parent)
                        PaddingBottom: =Self.PaddingTop
                        PaddingLeft: =If(Text(ThisItem.IsTrendDown) = "Yes", 25, 5)
                        PaddingTop: |-
                            =If(
                                IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                                10,
                                8
                            )
                        Size: =10
                        Text: =ThisItem.MetricTypeName
                        Tooltip: |-
                            ="Metric Short Name: " & ThisItem.MetricTypeShortName
                        Width: =lbl_LL_HeaderValue_BS.X - lbl_LL_HeaderMetric_BS.X
                        ZIndex: =14

                    Img_TrendingDown_LL As image:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Height: =36
                        Image: =TrendingDown
                        OnSelect: =Select(Parent)
                        PaddingLeft: =3
                        PaddingRight: =3
                        Visible: =ThisItem.IsTrendDown = "Yes"
                        Width: =25
                        ZIndex: =15

                html_Lowlight_NoDataTip_BS As htmlViewer:
                    DisplayMode: =DisplayMode.View
                    Font: =FontStyle
                    Height: =55
                    HtmlText: ="<center><font color=gray>No metrics added to Lowlights</font></center>"
                    PaddingTop: =20
                    Visible: =IsEmpty(glry_ExecSummary_LL_BS.AllItems)
                    Width: =glry_ExecSummary_LL_BS.Width
                    X: =glry_ExecSummary_LL_BS.X
                    Y: =lbl_LL_HeaderMetric_BS.Y + lbl_LL_HeaderMetric_BS.Height
                    ZIndex: =2

                lbl_LL_HeaderMetric_BS As label:
                    BorderStyle: =BorderStyle.None
                    DisplayMode: =DisplayMode.View
                    Fill: =RGBA(220, 220, 220, 1) //SUBGROUPCOLOR
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: =25
                    PaddingLeft: =10
                    Size: =10
                    Text: ="Metric"
                    Width: =Back_glry_HL_BS.Width
                    X: =Back_glry_LL_BS.X
                    Y: =Back_glry_LL_BS.Y + Back_glry_LL_BS.Height
                    ZIndex: =3

                lbl_LL_HeaderTarget_BS As label:
                    Align: =Align.Center
                    BorderStyle: =BorderStyle.None
                    DisplayMode: =DisplayMode.View
                    Fill: =lbl_LL_HeaderMetric_BS.Fill
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: =25
                    Size: =10
                    Text: ="Target"
                    Width: =115
                    X: =Back_glry_LL_BS.X + Back_glry_LL_BS.Width - Self.Width - 25
                    Y: =lbl_LL_HeaderMetric_BS.Y
                    ZIndex: =4

                lbl_LL_HeaderValue_BS As label:
                    Align: =Align.Center
                    BorderStyle: =BorderStyle.None
                    DisplayMode: =DisplayMode.View
                    Fill: =lbl_LL_HeaderMetric_BS.Fill
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: =25
                    Size: =10
                    Text: ="Value"
                    Width: =115
                    X: =lbl_LL_HeaderTarget_BS.X - Self.Width
                    Y: =lbl_LL_HeaderMetric_BS.Y
                    ZIndex: =5

                Back_glry_LL_BS As button:
                    Align: =Align.Left
                    BorderColor: =Self.Fill
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =RGBA(210, 64, 39, 1)
                    DisplayMode: =DisplayMode.View
                    Fill: =Back_ExecSumDesc_BS.Fill
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: =Back_glry_HL_BS.Height
                    HoverFill: =
                    PaddingLeft: =15
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =20
                    RadiusTopRight: =Self.RadiusTopLeft
                    Size: =11
                    Text: ="Lowlights (" & CountRows(glry_ExecSummary_LL_BS.AllItems) & ")"
                    Width: =Parent.Width - Self.X
                    X: =Back_glry_HL_BS.X + Back_glry_HL_BS.Width + 10
                    ZIndex: =6

                glry_ExecSummary_HL_BS As gallery.variableTemplateHeightGallery:
                    BorderColor: =Back_glry_HL_BS.Fill
                    BorderThickness: =1
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Sum(Self.AllItems, If(IsError(lbl_Height_HL_BS.Text), 0, Value(lbl_Height_HL_BS.Text))) //Parent.Height - Self.Y
                    Items: |-
                        =//Use the Ungroup function to add a Row Number column.
                        Ungroup(
                            ForAll(
                                Sequence(CountRows(clln_HighlightMetricType)),
                                {
                                    Record: Table(Last(FirstN(clln_HighlightMetricType, Value))),
                                    RowNumber: Value
                                }
                            ),
                            "Record"
                        )
                    Layout: =Layout.Vertical
                    ShowScrollbar: =false
                    TemplateFill: =If(Mod(ThisItem.RowNumber, 2)= 1, RGBA(255, 255, 255, 1), ColorFade(SUBGROUPCOLOR, 65%)) //
                    TemplatePadding: =0
                    TemplateSize: =40
                    Width: =Back_glry_HL_BS.Width - 2
                    X: =Back_glry_HL_BS.X + 1
                    Y: =lbl_HL_HeaderMetric_BS.Y + lbl_HL_HeaderMetric_BS.Height - 1
                    ZIndex: =7

                    lbl_Height_HL_BS As label:
                        Height: =25
                        OnSelect: =Select(Parent)
                        Size: =10
                        Text: =lbl_HL_MetricName_BS.Height + If(html_HL_Comment_BS.Visible, html_HL_Comment_BS.Height, 0)
                        Visible: =false
                        Width: =1
                        Y: =4
                        ZIndex: =1

                    html_HL_Comment_BS As htmlViewer:
                        AutoHeight: =true
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =RGBA(255, 255, 255, 1)
                        DisplayMode: =DisplayMode.View
                        Font: =FontStyle
                        HtmlText: |-
                            =If(
                                IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                                "",
                                "<font style='font-weight: 600; font-size:18px;'>&#128221; </font>" & ThisItem.MetricComment //&#128172;  &#128204;
                            )
                        OnSelect: =Select(Parent)
                        PaddingBottom: =10
                        PaddingTop: =0
                        Size: =10
                        Tooltip: ="Comment"
                        Visible: |-
                            =If(
                                IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                                false,
                                true
                            )
                        Width: =Parent.Width 
                        Y: =lbl_HL_MetricName_BS.Y + lbl_HL_MetricName_BS.Height
                        ZIndex: =2

                    Remove_ExecSum_HL As icon.ChevronRight:
                        AccessibleLabel: =Self.Tooltip
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        Color: =BlueControlDarkBackground
                        Height: =25
                        HoverColor: =RGBA(255, 0, 0, 1)
                        Icon: =Icon.Trash
                        OnSelect: |-
                            =Collect(clln_NolightMetricType, LookUp(clln_HighlightMetricType, ThisRecord.FactMetricID = ThisItem.FactMetricID));
                            RemoveIf(clln_HighlightMetricType, ThisRecord.FactMetricID = ThisItem.FactMetricID);
                        PaddingBottom: =3
                        PaddingLeft: =3
                        PaddingRight: =3
                        PaddingTop: =3
                        TabIndex: =0
                        Tooltip: ="Remove from Highlights"
                        Visible: =btn_Save_ExecSum.DisplayMode <> DisplayMode.Disabled
                        Width: =25
                        X: =Parent.Width - Self.Width
                        Y: =(lbl_HL_MetricName_BS.Height - Self.Height) * 0.50
                        ZIndex: =3

                    lbl_HL_Target_BS As label:
                        Align: =Align.Center
                        Color: =If(Self.Text = "Not Available", GRAYCOLOR, RGBA(0, 0, 0, 1))
                        Font: =FontStyle
                        FontWeight: =bttn_HL_Value_BS.FontWeight
                        Height: =25
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =bttn_HL_Value_BS.Size
                        Text: =If( IsBlank(ThisItem.MetricTarget) || Trim(ThisItem.MetricTarget) = "", "Not Available", ThisItem.MetricTarget)
                        Tooltip: =bttn_HL_Value_BS.Tooltip
                        Width: =lbl_HL_HeaderTarget_BS.Width
                        X: =bttn_HL_Value_BS.X + bttn_HL_Value_BS.Width
                        Y: =bttn_HL_Value_BS.Y
                        ZIndex: =4

                    bttn_HL_Value_BS As button:
                        BorderColor: =Self.Fill
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =0
                        Color: |-
                            =If(
                                Self.Text="..." || Trim(Self.Text)="" || lbl_HL_Target_BS.Text="Not Available", 
                                Color.Black,
                                If(
                                    Self.Text="Not Applicable",
                                    GRAYCOLOR,
                                    Switch(
                                        Self.Fill,
                                        GREENCOLOR, GreenFontColor,
                                        YellowTargetColor, YellowFontColor,
                                        REDCOLOR, RedFontColor,
                                        RGBA(0, 0, 0, 0), RGBA(1, 1, 1, 1)
                                    )
                                )
                            )
                        ContentLanguage: =
                        DisplayMode: =DisplayMode.View
                        Fill: |-
                            =Switch(
                                ThisItem.MetricValueFill,
                                "G", GREENCOLOR,
                                "R", REDCOLOR,
                                "Y", YellowTargetColor,
                                "W", RGBA(0,0,0,0),
                                Blank(), RGBA(0,0,0,0),
                                "", RGBA(0,0,0,0)
                            )
                        Font: =FontStyle
                        FontWeight: =FontWeight.Normal
                        Height: =25
                        HoverColor: =Self.Color
                        HoverFill: =ColorFade(Self.Fill, -10%)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedColor: =Color.White
                        PressedFill: =ColorFade(Self.Fill, 25%)
                        RadiusBottomLeft: =15
                        RadiusBottomRight: =15
                        RadiusTopLeft: =15
                        RadiusTopRight: =15
                        Size: =9.5
                        Text: =ThisItem.MetricValue
                        Tooltip: |-
                            =If(
                                (ThisItem.MetricValueType="Number" || ThisItem.MetricValueType="Percentage") 
                                    && Self.Text <> "Not Applicable",
                            
                                If(
                                    !IsBlankOrError(ThisItem.YellowRangeTarget), 
                                    "YellowRangeStart: " & ThisItem.YellowRangeTarget & If(ThisItem.MetricValueType="Percentage", "%"), 
                                    ""
                                ) 
                                &
                                    If(
                                        !IsBlankOrError(ThisItem.GreenRangeTarget), 
                                        " GreenRangeStart: " & ThisItem.GreenRangeTarget & If(ThisItem.MetricValueType="Percentage", "%"), 
                                        ""
                                    ) 
                                & 
                                    If(
                                        !IsBlankOrError(ThisItem.MetricTarget), 
                                        " Target:" & ThisItem.MetricTarget & If(ThisItem.MetricValueType="Percentage", "%"),
                                        ""
                                    )
                            )
                        Width: =lbl_HL_HeaderValue_BS.Width
                        X: =lbl_HL_MetricName_BS.X + lbl_HL_MetricName_BS.Width
                        Y: =(lbl_HL_MetricName_BS.Height - Self.Height) * 0.50
                        ZIndex: =5

                    lbl_HL_MetricName_BS As label:
                        AutoHeight: =true
                        Font: =FontStyle
                        FontWeight: =FontWeight.Semibold
                        OnSelect: =Select(Parent)
                        PaddingBottom: =Self.PaddingTop
                        PaddingLeft: =If(Text(ThisItem.IsTrendDown) = "Yes", 25, 5)
                        PaddingTop: |-
                            =If(
                                IsBlankOrError(ThisItem.MetricComment) || Trim(ThisItem.MetricComment) = "",
                                10,
                                8
                            )
                        Size: =10
                        Text: =ThisItem.MetricTypeName
                        Tooltip: |-
                            ="Metric Short Name: " & ThisItem.MetricTypeShortName
                        Width: =lbl_HL_HeaderValue_BS.X
                        ZIndex: =6

                    Img_TrendingDown_HL As image:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Height: =36
                        Image: =TrendingDown
                        OnSelect: =Select(Parent)
                        PaddingLeft: =3
                        PaddingRight: =3
                        Visible: =ThisItem.IsTrendDown = "Yes"
                        Width: =25
                        ZIndex: =7

                html_Highlight_NoDataTip_BS As htmlViewer:
                    Font: =FontStyle
                    Height: =55
                    HtmlText: ="<center><font color=gray>No metrics added to Highlights</font></center>"
                    PaddingTop: =20
                    Visible: =IsEmpty(glry_ExecSummary_HL_BS.AllItems)
                    Width: =glry_ExecSummary_HL_BS.Width
                    X: =glry_ExecSummary_HL_BS.X
                    Y: =lbl_HL_HeaderMetric_BS.Y + lbl_HL_HeaderMetric_BS.Height
                    ZIndex: =8

                lbl_HL_HeaderMetric_BS As label:
                    BorderStyle: =BorderStyle.None
                    DisplayMode: =DisplayMode.View
                    Fill: =RGBA(220, 220, 220, 1) //SUBGROUPCOLOR
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: =25
                    PaddingLeft: =10
                    Size: =10
                    Text: ="Metric"
                    Width: =Back_glry_HL_BS.Width
                    Y: =Back_glry_HL_BS.Y + Back_glry_HL_BS.Height
                    ZIndex: =9

                lbl_HL_HeaderTarget_BS As label:
                    Align: =Align.Center
                    BorderStyle: =BorderStyle.None
                    DisplayMode: =DisplayMode.View
                    Fill: =lbl_HL_HeaderMetric_BS.Fill
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: =25
                    Size: =10
                    Text: ="Target"
                    Width: =115
                    X: =Back_glry_HL_BS.Width - Self.Width - 25
                    Y: =lbl_HL_HeaderMetric_BS.Y
                    ZIndex: =10

                lbl_HL_HeaderValue_BS As label:
                    Align: =Align.Center
                    BorderStyle: =BorderStyle.None
                    DisplayMode: =DisplayMode.View
                    Fill: =lbl_HL_HeaderMetric_BS.Fill
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    Height: =25
                    Size: =10
                    Text: ="Value"
                    Width: =115
                    X: =lbl_HL_HeaderTarget_BS.X - Self.Width
                    Y: =lbl_HL_HeaderMetric_BS.Y
                    ZIndex: =11

                Back_glry_HL_BS As button:
                    Align: =Align.Left
                    BorderColor: =Self.Fill
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =RGBA(55, 118, 29, 1)
                    DisplayMode: =DisplayMode.View
                    Fill: =Back_ExecSumDesc_BS.Fill
                    Font: =FontStyle
                    FontWeight: =FontWeight.Bold
                    HoverFill: =
                    PaddingLeft: =15
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: |
                        =20
                    RadiusTopRight: =Self.RadiusTopLeft
                    Size: =11
                    Text: ="Highlights (" & CountRows(glry_ExecSummary_HL_BS.AllItems) & ")"
                    Width: =(Parent.Width - 10) * 0.50
                    ZIndex: =12

        ctn_ES_Save_BS As groupContainer.manualLayoutContainer:
            Height: =40
            Width: =Separator_ctn_ExecSum.X - Self.X 
            X: =10
            ZIndex: =5

            Label_ExecSum_LastUpdated As label:
                Align: =Align.Center
                Color: =RGBA(116, 116, 116, 1)
                Font: =FontStyle
                Height: =Parent.Height
                PaddingBottom: =0
                PaddingRight: =10
                PaddingTop: =0
                Size: =10
                Text: |-
                    =If(
                        IsBlankOrError(LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID)),
                        "(You are creating Executive Summary of this product and this review month.)",
                        "Last updated at " & LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid = var_BoardSrn_FMB_ID).modifiedon 
                        & " by " & LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid = var_BoardSrn_FMB_ID).modifiedby.fullname & " ("& LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid = var_BoardSrn_FMB_ID).modifiedby.internalemailaddress & ")"
                    )
                Width: =Parent.Width
                Y: =Parent.Height - Self.Height
                ZIndex: =2

            Btn_SaveExecSum_Check As icon.CheckBadge:
                Color: =RGBA(127, 178, 57, 1)
                DisplayMode: =DisplayMode.View
                FocusedBorderThickness: =10
                Height: =btn_Save_ExecSum.Height
                Icon: =Icon.CheckBadge
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =Toggle_Btn_SaveExecSum_Check
                Width: =btn_Save_ExecSum.Height
                X: =btn_Save_ExecSum.X - Self.Width 
                Y: =btn_Save_ExecSum.Y
                ZIndex: =4

            btn_Save_ExecSum As button:
                BorderColor: =Self.Fill
                DisplayMode: |-
                    =If(
                        IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), 
                        If(
                            label_Save_ExecSum_Warning.Visible,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        ),
                        DisplayMode.Disabled
                    )
                Fill: =BlueControlDarkBackground
                Font: =FontStyle
                FontWeight: =FontWeight.Bold
                Height: =30
                HoverColor: =Self.Fill
                HoverFill: =Self.Color
                OnSelect: |-
                    =Concurrent(
                        ClearCollect(
                            clln_HL,
                            DropColumns(
                                GroupBy(
                                    clln_HighlightMetricType,
                                    "MetricTypeID", "FactMetricID", "DummyGroup"
                                ), "DummyGroup"
                            )
                        ),
                        ClearCollect(
                            clln_LL,
                            DropColumns(
                                GroupBy(
                                    clln_LowlightMetricType,
                                    "MetricTypeID", "FactMetricID", "DummyGroup"
                                ), "DummyGroup"
                            )
                        )
                    );
                    
                    If(
                        IsBlankOrError(LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid=var_BoardSrn_FMB_ID)),
                        //If Never generated:
                        Patch(
                            ReviewHub_FactExecutiveSummaries,
                            Defaults(ReviewHub_FactExecutiveSummaries), 
                            {
                                craf2_executivesummarytitle: var_BoardTypeSelected_Home & "-" & var_BoardSrn_ProductID & "-" & Text(dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate, "mmddyyyy"),
                                craf2_executivesummarydescription: Trim(ti_ExecSumDesc_BS.HtmlText),
                                craf2_highlightmetrictypeid: 
                                If(
                                    IsEmpty(clln_HighlightMetricType),
                                    Blank(),
                                    Left(Concat(clln_HL, MetricTypeID & "-" & FactMetricID & "|"), Len(Concat(clln_HL, MetricTypeID & "-" & FactMetricID & "|"))-1)
                                ),
                                craf2_lowlightmetrictypeid: 
                                If(
                                    IsEmpty(clln_LowlightMetricType),
                                    Blank(),
                                    Left(Concat(clln_LL, MetricTypeID & "-" & FactMetricID & "|"), Len(Concat(clln_LL, MetricTypeID & "-" & FactMetricID & "|"))-1)
                                ),
                                craf2_factmetricboardid: var_BoardSrn_FMB_ID,
                                craf2_Product: LookUp(ReviewHub_Products, ThisRecord.craf2_productid = var_BoardSrn_ProductID),
                                craf2_reviewlockdate: dpdn_BS_ReviewMonth.Selected.fmb_ReviewLockDate,
                                chub_boardtypeid: var_BoardTypeSelected_Home
                            }
                        ),
                        Patch(
                            ReviewHub_FactExecutiveSummaries,
                            LookUp(ReviewHub_FactExecutiveSummaries, ThisRecord.craf2_factmetricboardid = var_BoardSrn_FMB_ID),
                            {
                                craf2_executivesummarydescription: Trim(ti_ExecSumDesc_BS.HtmlText),
                                craf2_highlightmetrictypeid: 
                                If(
                                    IsEmpty(clln_HighlightMetricType),
                                    Blank(),
                                    Left(Concat(clln_HL, MetricTypeID & "-" & FactMetricID & "|"), Len(Concat(clln_HL, MetricTypeID & "-" & FactMetricID & "|"))-1)
                                ),
                                craf2_lowlightmetrictypeid: 
                                If(
                                    IsEmpty(clln_LowlightMetricType),
                                    Blank(),
                                    Left(Concat(clln_LL, MetricTypeID & "-" & FactMetricID & "|"), Len(Concat(clln_LL, MetricTypeID & "-" & FactMetricID & "|"))-1)
                                )
                            }
                        )
                    );
                    
                    Set(Toggle_Btn_SaveExecSum_Check, true);
                RadiusBottomLeft: =20
                RadiusBottomRight: =20
                RadiusTopLeft: =20
                RadiusTopRight: =20
                Size: =12
                Text: ="Save"
                Visible: |-
                    =If(
                        IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), 
                        true, 
                        false
                    )
                Width: =90
                X: |
                    =Parent.Width - Self.Width - 5
                Y: =(Parent.Height - Self.Height) * 0.50
                ZIndex: =5

        lbl_Close_ES_BS As label:
            Color: =RGBA(116, 116, 116, 1)
            DisplayMode: =DisplayMode.View
            Font: =FontStyle
            Height: =ctn_ES_Save_BS.Height
            PaddingLeft: =15
            PaddingRight: =15
            Size: =11
            Text: ="(Please save before close)"
            Width: =btn_Close_ctn_ExecSummary_BS.X - Self.X
            X: =ctn_ES_Save_BS.X + ctn_ES_Save_BS.Width
            Y: =ctn_ES_Save_BS.Y
            ZIndex: =6

        btn_Close_ctn_ExecSummary_BS As icon.Add:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 1)
            Height: =ctn_ES_Save_BS.Height
            HoverBorderColor: =Self.BorderColor
            HoverColor: =BlueControlDarkBackground
            Icon: =Icon.Cancel
            OnSelect: |-
                =Concurrent(
                    Set(var_Display_ExecSummaryContainer, false),
                    Set(Toggle_Btn_SaveExecSum_Check, false),
                    Set(var_ctn_ES_Candidates_BS_Collapse, false),
                    Set(var_MetricToAdd_Colors, Blank()),
                    Reset(btn_glry_NL_SelectAll),
                    Reset(Checkbox_ESGreen_BS), Reset(Checkbox_ESYellow_BS), Reset(Checkbox_ESRed_BS), Reset(Checkbox_ESNoColor_BS)
                )
            PaddingBottom: =5
            PaddingLeft: =5
            PaddingRight: =5
            PaddingTop: =5
            Tooltip: ="Close"
            Width: =50
            X: =Parent.Width - Self.Width
            ZIndex: =7

        ctn_IfExecSummaryLoaded As groupContainer:
            BorderStyle: =BorderStyle.None
            Fill: =RGBA(255, 255, 255, 0.9)
            Height: =Parent.Height
            Visible: =var_ctn_IfExecSummary_ForceOn
            Width: =Parent.Width
            ZIndex: =8

            Label_BoardSrn_ESLoading As label:
                Align: =Align.Center
                Color: =LEFTNAVHIGLIGHTCOLOR
                Font: =FONTNAME
                Size: =18
                Text: ="Getting data..."
                Width: =Image_BoardSrn_ESLoading.Width
                X: =Image_BoardSrn_ESLoading.X
                Y: =Image_BoardSrn_ESLoading.Y + Image_BoardSrn_ESLoading.Height - 10
                ZIndex: =1

            Image_BoardSrn_ESLoading As image:
                Image: =boardsrn_loading
                PaddingBottom: =20
                PaddingRight: =10
                PaddingTop: =10
                Width: =300
                X: =Parent.Width * 0.5 - Self.Width * 0.5
                Y: =Parent.Height * 0.5 - Self.Height * 0.5 - 50
                ZIndex: =2

    ctn_Stakeholders As groupContainer:
        Fill: =Rectangle_EditMetric_Mask.Fill
        Height: =glry_BoardSrn_Headers.Height + glry_BoardSrn_Group.Height
        Visible: =Toggle_ctn_Stakeholders
        Width: =App.Width - LeftNavi_BoardSrn.Width
        X: =LeftNavi_BoardSrn.Width
        Y: =glry_BoardSrn_Headers.Y
        ZIndex: =15

        btn_Stakeholders_Back As button:
            DisabledBorderColor: =btn_Stakeholders_Header.Fill
            DisabledColor: =RGBA(255, 255, 255, 1)
            DisabledFill: =RGBA(255, 255, 255, 1)
            DisplayMode: =DisplayMode.Disabled
            Height: =Parent.Height - btn_Stakeholders_Header.Height - btn_Stakeholders_Header.Y * 2
            RadiusBottomLeft: =btn_Stakeholders_Header.RadiusTopLeft
            RadiusBottomRight: =btn_Stakeholders_Header.RadiusTopLeft
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: =""
            Width: =btn_Stakeholders_Header.Width - 2
            X: =btn_Stakeholders_Header.X + 1
            Y: =btn_Stakeholders_Header.Y + btn_Stakeholders_Header.Height - 1
            ZIndex: =1

        glry_Stakeholder_Back As button:
            BorderColor: =
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(0, 0, 0, 0)
            DisabledFill: =RGBA(166, 166, 166, 0.1)
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(166, 166, 166, 1)
            Height: =btn_Stakeholders_Back.Height
            RadiusBottomLeft: =btn_Stakeholders_Back.RadiusBottomLeft
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: =""
            Width: =glry_Stakeholders.Width
            X: =glry_Stakeholders.X
            Y: =glry_Stakeholders.Y
            ZIndex: =2

        glry_Stakeholders As gallery.variableTemplateHeightGallery:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisplayMode: |-
                =If(
                    IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), 
                    DisplayMode.Edit, 
                    DisplayMode.View
                )
            Height: =Label_ctn_Stakeholder_Warning.Y - glry_Stakeholder_Back.Y
            Items: =Sort(clln_BoardSrn_Stakeholders, DisplayName, SortOrder.Ascending)
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =80
            Width: =btn_Stakeholders_Back.Width * 0.6
            X: =btn_Stakeholders_Back.X
            Y: =btn_Stakeholders_Back.Y
            ZIndex: =4

            Separator_glry_Stakeholders As rectangle:
                Fill: =GrayBorderDark
                Height: =1
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                Y: =Html_Stakeholder_Info.Height - 1
                ZIndex: =1

            Html_Stakeholder_Info As htmlViewer:
                AutoHeight: =true
                DisplayMode: =DisplayMode.View
                Font: =FontStyle
                Height: =75
                HtmlText: |-
                    ="<b>" & ThisItem.DisplayName & "</b><br><b>Email: </b>" & ThisItem.Result & "<br><b>Department: </b>" & ThisItem.Department
                OnSelect: =Select(Parent)
                PaddingBottom: =8
                PaddingTop: =8
                Width: =btn_DeleteStakeholder.X - Img_Stakeholder.Width
                X: =Img_Stakeholder.Width
                ZIndex: =2

            label_NoPhoto_Stakeholder As label:
                Align: =Align.Center
                Color: =RGBA(116, 116, 116, 1)
                Font: =FontStyle
                FontWeight: =FontWeight.Semibold
                Height: =Img_Stakeholder.Height
                OnSelect: =Select(Parent)
                Size: =20
                Text: =Left(ThisItem.GivenName, 1) & Left(ThisItem.Surname, 1)
                Visible: =Img_Stakeholder.Visible = false
                Width: =Img_Stakeholder.Width
                X: =Img_Stakeholder.X
                Y: =Img_Stakeholder.Y
                ZIndex: =3

            Img_Stakeholder As image:
                Height: =Html_Stakeholder_Info.Height
                Image: =If(!IsBlankOrError(ThisItem.Result), Office365Users.UserPhotoV2(ThisItem.Result))
                OnSelect: =Select(Parent)
                PaddingBottom: =8
                PaddingTop: =8
                Visible: |-
                    =If(
                        "Invalid" in ThisItem.DisplayName,
                        false,
                        If(
                            !IsBlankOrError(ThisItem.Result) && !IsError(Office365Users.UserPhotoMetadata(ThisItem.Result).HasPhoto),
                            Office365Users.UserPhotoMetadata(ThisItem.Result).HasPhoto,
                            false
                        )
                    )
                Width: =80
                Y: =0//(Parent.TemplateHeight - Self.Height) * 0.50
                ZIndex: =4

            btn_DeleteStakeholder As icon.ChevronRight:
                AccessibleLabel: =Self.Tooltip
                BorderStyle: =BorderStyle.None
                Color: =RGBA(0, 0, 0, 1)
                DisplayMode: |-
                    =If(
                        IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), 
                        DisplayMode.Edit, 
                        DisplayMode.Disabled
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderThickness: =0
                Height: =35
                HoverColor: =BlueControlDarkBackground
                HoverFill: =ColorFade(Self.Fill, -30%)
                Icon: =Icon.Cancel
                OnSelect: |-
                    =Remove(clln_BoardSrn_Stakeholders, ThisItem); 
                    Set(ctn_Stakeholder_Logs, ctn_Stakeholder_Logs & "<font color='ForestGreen'>- Deleted: " & ThisItem.DisplayName & "</font><br>")
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedColor: =Color.Purple
                TabIndex: =0
                Tooltip: ="Remove this person for this product."
                Visible: |-
                    =If(
                        IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes),
                        true,
                        false
                    )
                Width: =35
                X: =Parent.TemplateWidth - Self.Width - 5
                Y: =(Html_Stakeholder_Info.Height - Self.Height) * 0.50
                ZIndex: =5

        Html_NoData_glry_Stakeholder As htmlViewer:
            AutoHeight: =true
            DisplayMode: =DisplayMode.View
            Font: =FontStyle
            Height: =70
            HtmlText: ="No stakeholder found for this product. <br>Please contact the <b>Review Owner</b> or <b>Admin</b> to add you if needed."
            Visible: |-
                =IsBlankOrError(
                    LookUp(ReviewHub_Stakeholders, ThisRecord.craf2_Product.craf2_productid = var_BoardSrn_ProductID && ThisRecord.craf2_BoardType.craf2_boardtypeid = var_BoardTypeSelected_Home).ProductStakeholderEmails
                )
                && 
                CountRows(glry_Stakeholders.AllItems) = 0
            Width: =glry_Stakeholders.Width - 60
            X: =glry_Stakeholders.X + 40
            Y: =glry_Stakeholders.Y + 0.5*glry_Stakeholders.Height - Self.Height*.5
            ZIndex: =5

        ComboBox_SelectStakeholder As combobox:
            BorderColor: =LEFTNAVHIGLIGHTCOLOR
            BorderThickness: =1
            ChevronBackground: =BlueControlDarkBackground
            DisplayFields: =["DisplayName","UserPrincipalName","ProfilePicture"]
            Font: =FontStyle
            Height: =35
            InputTextPlaceholder: ="(Search by name or principal email alias)"
            Items: |-
                =Office365Users.SearchUserV2({searchTerm: Trim(Self.SearchText)}).value
            SearchFields: =["UserPrincipalName", "DisplayName"]
            SearchItems: |-
                =Search(Office365Users.SearchUserV2({searchTerm: Trim(Self.SearchText)}).value,ComboBox_SelectStakeholder.SearchText,"UserPrincipalName","DisplayName")
            SelectionFill: =ColorFade(LEFTNAVHIGLIGHTCOLOR, 25%)
            SelectMultiple: =false
            Size: =11
            Template: =ListItemTemplate.Double
            Width: =btn_AddStakeholder.X - glry_Stakeholders.X - 30
            X: =glry_Stakeholders.X + 10
            Y: =lbl_ExecSum_LastUpdated.Y - Self.Height - btn_Clear_SelectStakeholder.Height - 5
            ZIndex: =6

        btn_AddStakeholder As button:
            BorderColor: =Self.Fill
            DisplayMode: |-
                =If(
                    IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes),
                    If(
                         Label_ctn_Stakeholder_Warning.Visible || IsBlankOrError(ComboBox_SelectStakeholder.SelectedItems),
                         DisplayMode.Disabled,
                        DisplayMode.Edit
                    ),
                    DisplayMode.Disabled
                )
            Fill: =BlueControlDarkBackground
            Font: =FontStyle
            FontWeight: =btn_Apply_UpdateValues.FontWeight
            Height: =30
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Fill
            HoverFill: =Self.Color
            OnSelect: |-
                =
                    If(
                        !(ComboBox_SelectStakeholder.Selected.UserPrincipalName in clln_BoardSrn_Stakeholders.Result), //If this user has not been added.
                        Collect(
                            clln_BoardSrn_Stakeholders,
                            {
                                Department: ComboBox_SelectStakeholder.Selected.Department,
                                DisplayName: ComboBox_SelectStakeholder.Selected.DisplayName,
                                GivenName: ComboBox_SelectStakeholder.Selected.GivenName,
                                Surname: ComboBox_SelectStakeholder.Selected.Surname, 
                                Result: ComboBox_SelectStakeholder.Selected.UserPrincipalName //Substitute(ThisRecord.Claims, "i:0#.f|membership|", ""),
                            }
                        )    
                    );
                
                
                Set(ctn_Stakeholder_Logs, ctn_Stakeholder_Logs & "<font color='ForestGreen'>- Added: " & ComboBox_SelectStakeholder.Selected.DisplayName & "</font><br>");
                
                Select(btn_Clear_SelectStakeholder);
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =btn_Apply_UpdateValues.Size
            Text: ="Add"
            Width: =btn_Apply_UpdateValues.Width
            X: =glry_Stakeholder_Back.X + glry_Stakeholder_Back.Width - Self.Width - 10
            Y: =ComboBox_SelectStakeholder.Y + 2
            ZIndex: =7

        lbl_Submit_Stakeholder As label:
            Align: =Align.Center
            Color: =RGBA(116, 116, 116, 1)
            Font: =FontStyle
            Height: =35
            Size: =11
            Text: ="(Please save before close)"
            VerticalAlign: =VerticalAlign.Top
            Width: =200
            X: =btn_Submit_Stakeholder.X - Self.Width*0.5 + btn_Submit_Stakeholder.Width*0.5
            Y: =btn_Submit_Stakeholder.Y + btn_Submit_Stakeholder.Height
            ZIndex: =8

        btn_Submit_Stakeholder As button:
            BorderColor: =Self.Fill
            DisplayMode: |-
                =If(
                    IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes),
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =LEFTNAVBKGDCOLOR
            Font: =FontStyle
            FontWeight: =btn_Apply_UpdateValues.FontWeight
            Height: =30
            HoverBorderColor: =btn_Apply_UpdateValues.HoverBorderColor
            HoverColor: =btn_Apply_UpdateValues.HoverColor
            HoverFill: =btn_Apply_UpdateValues.HoverFill
            OnSelect: |+
                =
                    If(
                        IsBlankOrError(LookUp(ReviewHub_Stakeholders, ThisRecord.craf2_Product.craf2_productid = var_BoardSrn_ProductID && ThisRecord.craf2_BoardType.craf2_boardtypeid = var_BoardTypeSelected_Home)),
                        Patch(
                            ReviewHub_Stakeholders,
                            Defaults(ReviewHub_Stakeholders),
                            {
                                craf2_title: LookUp(ReviewHub_BoardTypes, ThisRecord.craf2_boardtypeid=var_BoardTypeSelected_Home).craf2_boardtypeshortname & ": " & LookUp(ReviewHub_Products, ThisRecord.craf2_productid = var_BoardSrn_ProductID).craf2_productname,
                                craf2_BoardType: LookUp(ReviewHub_BoardTypes, ThisRecord.craf2_boardtypeid=var_BoardTypeSelected_Home),
                                craf2_Product: LookUp(ReviewHub_Products, ThisRecord.craf2_productid = var_BoardSrn_ProductID),
                                ProductStakeholderEmails: 
                                    If(
                                        IsEmpty(clln_BoardSrn_Stakeholders),
                                        "",
                                        Left(Concat(clln_BoardSrn_Stakeholders, Result & "|"), Len(Concat(clln_BoardSrn_Stakeholders, Result & "|"))-1)
                                    ),
                                StakeholderNames:
                                    If(
                                        IsEmpty(clln_BoardSrn_Stakeholders),
                                        "",
                                        Left(Concat(clln_BoardSrn_Stakeholders, DisplayName & "|"), Len(Concat(clln_BoardSrn_Stakeholders, DisplayName & "|"))-1)
                                    )
                            }
                        ),
                
                        Patch(
                            ReviewHub_Stakeholders,
                            LookUp(
                                ReviewHub_Stakeholders,
                                ThisRecord.craf2_Product.craf2_productid = var_BoardSrn_ProductID && ThisRecord.craf2_BoardType.craf2_boardtypeid = var_BoardTypeSelected_Home
                            ),
                            {
                                ProductStakeholderEmails: 
                                    If(
                                        IsEmpty(clln_BoardSrn_Stakeholders),
                                        "",
                                        Left(Concat(clln_BoardSrn_Stakeholders, Result & "|"), Len(Concat(clln_BoardSrn_Stakeholders, Result & "|"))-1)
                                    ),
                                StakeholderNames:
                                    If(
                                        IsEmpty(clln_BoardSrn_Stakeholders),
                                        "",
                                        Left(Concat(clln_BoardSrn_Stakeholders, DisplayName & "|"), Len(Concat(clln_BoardSrn_Stakeholders, DisplayName & "|"))-1)
                                    )
                            }
                        )
                    );
                    
                    Select(btn_Close_ctn_Stakeholders);
                
            PressedBorderColor: =btn_Apply_UpdateValues.PressedBorderColor
            PressedColor: =btn_Apply_UpdateValues.PressedColor
            PressedFill: =btn_Apply_UpdateValues.PressedFill
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =btn_Apply_UpdateValues.Size
            Text: ="Save"
            Width: =btn_Apply_UpdateValues.Width
            X: =Html_Stakeholder_Desc.X + Html_Stakeholder_Desc.Width * 0.5 - Self.Width * 0.5
            Y: =btn_AddStakeholder.Y
            ZIndex: =9

        btn_Clear_SelectStakeholder As button:
            Align: =Align.Left
            BorderColor: =ColorFade(Self.Fill, -35%)
            BorderThickness: =0
            Color: =BlueControlDarkBackground
            Fill: =RGBA(0, 0, 0, 0)
            Font: =FontStyle
            Height: =30
            HoverColor: =Color.Blue
            HoverFill: =RGBA(0, 0, 0, 0)
            OnSelect: =Reset(ComboBox_SelectStakeholder);
            PaddingRight: =0
            PressedColor: =RGBA(109, 49, 162, 1)
            PressedFill: =RGBA(0, 0, 0, 0)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =11
            Text: ="Clear selection"
            Underline: =true
            VerticalAlign: =VerticalAlign.Top
            Width: =145
            X: =ComboBox_SelectStakeholder.X 
            Y: =ComboBox_SelectStakeholder.Y + ComboBox_SelectStakeholder.Height
            ZIndex: =10

        Html_Stakeholder_Desc As htmlViewer:
            Font: =FontStyle
            Height: =glry_Stakeholders.Height + 20
            HtmlText: |-
                ="<b>A stakeholder can:</b>
                <li>Add/Delete other stakeholders of this product</li>
                <li>Update manual metric values</li>
                <li>Update comments to metrics</li><br>
                <b>Logs:</b><br>
                "
                & ctn_Stakeholder_Logs
            PaddingLeft: =10
            Size: =12
            Width: =btn_Stakeholders_Back.Width - glry_Stakeholders.Width
            X: =glry_Stakeholders.X + glry_Stakeholders.Width
            Y: =glry_Stakeholders.Y
            ZIndex: =11

        Label_ctn_Stakeholder_Warning As label:
            AutoHeight: =true
            Color: =RGBA(255, 0, 0, 1)
            Font: =FontStyle
            Height: =35
            Size: =11
            Text: ="(Selected person is already in the above list.)"
            Visible: =ComboBox_SelectStakeholder.Selected.UserPrincipalName in glry_Stakeholders.AllItems.Result
            Width: =360
            X: =btn_Clear_SelectStakeholder.X
            Y: =ComboBox_SelectStakeholder.Y - Self.Height
            ZIndex: =12

        lbl_ExecSum_LastUpdated As label:
            AutoHeight: =true
            Color: =RGBA(116, 116, 116, 1)
            Font: =FontStyle
            Height: =30
            PaddingBottom: =3
            PaddingTop: =3
            Size: =10
            Text: |-
                =If(
                    IsBlankOrError(LookUp(ReviewHub_Stakeholders, ThisRecord.Product.ProductID = var_BoardSrn_ProductID && ThisRecord.BoardType.BoardTypeID = var_BoardTypeSelected_Home)),
                    "No stakeholders have ever been assigned.",
                    "Last updated at " & LookUp(ReviewHub_Stakeholders, ThisRecord.Product.ProductID = var_BoardSrn_ProductID && ThisRecord.BoardType.BoardTypeID = var_BoardTypeSelected_Home).'Modified On' 
                    & " by " & LookUp(ReviewHub_Stakeholders, ThisRecord.Product.ProductID = var_BoardSrn_ProductID && ThisRecord.BoardType.BoardTypeID = var_BoardTypeSelected_Home).'Modified By'.'Full Name' & " (" & LookUp(ReviewHub_Stakeholders, ThisRecord.Product.ProductID = var_BoardSrn_ProductID && ThisRecord.BoardType.BoardTypeID = var_BoardTypeSelected_Home).'Modified By'.'Primary Email' & ")"
                )
            Width: =glry_Stakeholders.Width - 10
            X: =btn_Clear_SelectStakeholder.X 
            Y: =glry_Stakeholder_Back.Y + glry_Stakeholder_Back.Height - Self.Height - 5
            ZIndex: =13

        btn_Stakeholders_Header As button:
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =DisplayMode.View
            Fill: =glry_BoardSrn_Headers.Fill
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: |
                =15
            RadiusTopRight: =15
            Size: =bs_header_MetricName.Size
            Text: ="View/Manager Stakeholders for ''" & LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID).Title & "''"
            Width: =Parent.Width * 0.65
            X: =(Parent.Width - Self.Width) * 0.50
            Y: =55
            ZIndex: =14

        btn_Close_ctn_Stakeholders As icon.Add:
            BorderColor: =
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 1)
            Height: =btn_Stakeholders_Header.Height
            HoverBorderColor: =Self.BorderColor
            HoverColor: =BlueControlDarkBackground
            Icon: =Icon.Cancel
            OnSelect: |+
                =Concurrent(
                    Set(Toggle_ctn_Stakeholders, false), 
                    Set(ctn_Stakeholder_Logs, Blank()),
                    Reset(ComboBox_SelectStakeholder),
                    Refresh(ReviewHub_Stakeholders)
                );
                
                Clear(clln_BoardSrn_Stakeholders);
                
            PaddingBottom: =7
            PaddingLeft: =7
            PaddingRight: =7
            PaddingTop: =7
            PressedColor: =Color.Purple
            Tooltip: ="Close"
            Width: =Self.Height + 3
            X: =btn_Stakeholders_Header.X + btn_Stakeholders_Header.Width - Self.Width
            Y: =btn_Stakeholders_Header.Y
            ZIndex: =15

    ctn_UserViewMyAccess_BS As groupContainer.manualLayoutContainer:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =
        Fill: =RGBA(255, 255, 255, 0.95)
        Height: =App.Height - Self.Y
        Visible: =var_UserViewMyAccess_BS
        Width: =App.Width - Self.X
        X: =glry_BoardSrn_Headers.X
        Y: =glry_BoardSrn_Headers.Y
        ZIndex: =16

        html_ViewMyAccess_Body As htmlViewer:
            AutoHeight: =true
            BorderColor: =Back_ViewMyAccess_BS.Fill
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =2
            Fill: =RGBA(0, 0, 0, 0)
            Font: =FontStyle
            Height: =380
            HtmlText: |-
                ="<table style='height: 204px; width: 100%; border-collapse: collapse; border-color: #ececec;' border='0' cellpadding='5'>
                <tbody>
                <tr style='height: 36px; background-color: #DCDCDC;'>
                <td style='width: 30.6%; height: 36px; text-align: left; padding-left: 10px;'>Activities</td>
                <td style='width: 3.83522%; height: 36px; text-align: center; " & If(IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes, "color: #0072c6; font-weight: 800;'>", "font-weight: 400;'>") & "Coordinator</font></td>
                <td style='width: 6.88%; height: 36px; text-align: center; " & If(IsReviewOwner, "color: #0072c6; font-weight: 800;'>", "font-weight: 400;'>") & "Review Owner</font></td>
                <td style='width: 6.88%; height: 36px; text-align: center; " & If(IsStakeholder, "color: #0072c6; font-weight: 800;'>", "font-weight: 400;'>") & "Stakeholder</font></td>
                <td style='width: 8.5%; height: 36px; text-align: center; " & If(!IsAdmin && !(IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes) && !IsReviewOwner && !IsStakeholder, "color: #0072c6; font-weight: 800;'>", "font-weight: 400;'>") & "Read-Only User</font></td>
                </tr>
                <tr style='height: 36px;'>
                <td style='width: 31.6%; height: 36px; padding-left: 10px;'>Update <strong>manual metric values</strong> for the <strong>latest</strong> review month</td>
                <td style='width: 3.83522%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 8.5%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                <tr style='height: 36px; background-color: #F1F4FC;'>
                <td style='width: 31.6%; height: 36px; padding-left: 10px;'>Update <strong>manual metric values</strong> for the <strong>past</strong> review months</td>
                <td style='width: 3.83522%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 8.5%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                
                <tr style='height: 36px;'>
                <td style='width: 31.6%; height: 36px; padding-left: 10px;'>Update <strong>automated metric values</strong> for any review months</td>
                <td style='width: 3.83522%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 8.5%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                
                <tr style='height: 36px; background-color: #F1F4FC;'>
                <td style='width: 30.6%; height: 36px; padding-left: 10px;'>Update <strong>comments</strong>&nbsp;for the <strong>latest</strong> review month</td>
                <td style='width: 3.83522%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 8.5%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                <tr style='height: 36px; '>
                <td style='width: 30.6%; height: 36px; padding-left: 10px;'>Update <strong>comments</strong>&nbsp;for the <strong>past</strong> review months</td>
                <td style='width: 3.83522%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 8.5%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                <tr style='height: 24px; background-color: #F1F4FC;'>
                <td style='width: 30.6%; height: 36px; padding-left: 10px;'>Update <strong>targets</strong> for the <strong>latest</strong> review month</td>
                <td style='width: 3.83522%; height: 24px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 24px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; height: 24px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 8.5%; height: 24px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                <tr style='height: 24px;'>
                    <td style='width: 30.6%; height: 36px; padding-left: 10px;'>Update <strong>targets</strong> for the <strong>past</strong> review months</td>
                    <td style='width: 3.83522%; height: 24px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                    <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 6.88%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                <td style='width: 8.5%; height: 36px; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                    </tr>
                <tr style='height: 24px; background-color: #F1F4FC;'>
                <td style='width: 31.6%; height: 36px; padding-left: 10px;'>Add/Delete <strong>stakeholders</strong></td>
                <td style='width: 3.83522%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 8.5%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                <tr style='height: 24px; '>
                <td style='width: 31.6%; height: 36px; padding-left: 10px;'>Create/Edit the <strong>executive summary</strong></td>
                <td style='width: 3.83522%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 8.5%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                <tr style='height: 24px; background-color: #F1F4FC;'>
                <td style='width: 31.6%; height: 36px; padding-left: 10px;'>Refresh <strong>health score/rating</strong></td>
                <td style='width: 3.83522%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 6.88%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #e5f5ec; color: #009e49; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✔</span></span></td>
                <td style='width: 8.5%; text-align: center;'><span style='color: #00ccff;'><span style='background-color: #fde6e8; color: #cc4125; display: inline-block; padding: 3px 10px; border-radius: 5px;'>✖</span></span></td>
                </tr>
                </tbody>
                </table>"
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Width: =Back_ViewMyAccess_BS.Width - 2
            X: =Back_ViewMyAccess_BS.X + 1
            Y: =Back_ViewMyAccess_BS.Y + Back_ViewMyAccess_BS.Height - 1
            ZIndex: =1

        Back_ViewMyAccess_BS As button:
            Align: =Align.Left
            BorderColor: =Self.Fill
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =RGBA(55, 118, 29, 1)
            DisplayMode: =DisplayMode.View
            Fill: =Back_ExecSumDesc_BS.Fill
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            Height: =50
            HoverFill: =
            PaddingLeft: =15
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: |
                =20
            RadiusTopRight: =Self.RadiusTopLeft
            Size: =11
            Text: =""
            Width: =840
            X: =(Parent.Width - Self.Width) * 0.50
            Y: =(Parent.Height - Self.Height - html_ViewMyAccess_Body.Height) * 0.50 - 10
            ZIndex: =2

        html_ViewMyAccess_Header As htmlViewer:
            Font: =FontStyle
            Height: =Back_ViewMyAccess_BS.Height
            HtmlText: |-
                ="<b>Login Email: </b>" & User().Email 
                & "&emsp;&emsp;<b>Current Role: </b><span style='background-color: #daf0fa; color: #0072c6; display: inline-block; padding: 3px 15px; border-radius: 15px; font-weight: 700'>" 
                & If(IsAdmin, "Administrator", "") & If(IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes, " Coordinator", "") & If(IsReviewOwner, " Review Owner", "") & If(IsStakeholder, " Stakeholder", "")
                & If(IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), "", "Read-Only User")
                & "</span>" & If(IsAdmin, " <font color=#009e49><b>You have no restriction</b> &#128513;</font>", "")
            PaddingLeft: =15
            PaddingTop: =13
            Width: =Back_ViewMyAccess_BS.Width
            X: =Back_ViewMyAccess_BS.X
            Y: =Back_ViewMyAccess_BS.Y
            ZIndex: =3

        Icon_CloseUserViewMyAccess As icon.CancelBadge:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 1)
            Height: =45
            HoverColor: =BlueControlDarkBackground
            Icon: =Icon.Cancel
            OnSelect: =Set(var_UserViewMyAccess_BS, false);
            PaddingBottom: =8
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =12
            Tooltip: ="Close"
            Width: |
                =45
            X: =Back_ViewMyAccess_BS.X + Back_ViewMyAccess_BS.Width - Self.Width
            Y: =Back_ViewMyAccess_BS.Y
            ZIndex: =4

    ctn_IfGalleryLoaded As groupContainer:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Fill: =RGBA(255, 255, 255, 0.9)
        Height: =App.Height - Self.Y
        Visible: |-
            =If(
                IsBlankOrError(var_LastGalleryText),
                true,
                var_ctn_IfGalleryLoaded_ForceOn
            )
        Width: =glry_BoardSrn_Headers.Width
        X: =glry_BoardSrn_Headers.X
        Y: =glry_BoardSrn_Headers.Y
        ZIndex: =17

        Label_BoardSrn_Loading As label:
            Align: =Align.Center
            Color: =LEFTNAVHIGLIGHTCOLOR
            Font: =FONTNAME
            Size: =18
            Text: ="Getting data..."
            Width: =Image_BoardSrn_Loading.Width
            X: =Image_BoardSrn_Loading.X
            Y: =Image_BoardSrn_Loading.Y + Image_BoardSrn_Loading.Height - 10
            ZIndex: =1

        Image_BoardSrn_Loading As image:
            Image: =boardsrn_loading
            PaddingBottom: =20
            PaddingRight: =10
            PaddingTop: =10
            Width: =300
            X: =Parent.Width * 0.5 - Self.Width * 0.5
            Y: =Parent.Height * 0.5 - Self.Height * 0.5 - 50
            ZIndex: =2

    LeftNavi_BoardSrn As groupContainer.manualLayoutContainer:
        BorderStyle: =BorderStyle.None
        Fill: =BlueControlDarkBackground
        Height: =App.Height - Self.Y
        Width: =var_LeftNavi_Width
        Y: =BAGIAAppHeader_BS.Height
        ZIndex: =18

        glry_LeftNavi_7 As gallery.variableTemplateHeightGallery:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Height: =Parent.Height - Self.Y
            Items: |-
                =Sort(
                    varLeftNavOptions,
                    If(ThisRecord.ID < 0, ID),
                    SortOrder.Descending
                )
            Layout: =Layout.Vertical
            OnSelect: |-
                =Navigate(ThisItem.Screen);
                
                Concurrent(
                    Set(var_ctn_IfGalleryLoaded_ForceOn, true),
                    Set(varSelectedBoardId, ThisItem.ID)
                );
                
                Set(StartTimer_Capture_factMetricBoard_ID, true);
            ShowScrollbar: =false
            TemplateFill: |-
                =If(
                    ThisItem.ID = varSelectedBoardId,
                    ColorFade(BlueControlDarkBackground, 20%), 
                    RGBA(0,0,0,0)
                )
            TemplatePadding: =0
            TemplateSize: =45
            Width: =Parent.Width
            Y: =icon_CollapseExpand_7.Y + icon_CollapseExpand_7.Height
            ZIndex: =1

            imgCircle_LN_7 As circle:
                DisplayMode: =DisplayMode.View
                Fill: =RGBA(255, 255, 255, 0.90)
                Height: =img_LN_7.Height - 5
                OnSelect: =Select(Parent)
                Visible: =If(IsBlank(ThisItem.BoardTypeID), false, true)
                Width: =Self.Height
                X: =img_LN_7.X + (img_LN_7.Width - Self.Width) * 0.5 
                Y: =(Parent.TemplateHeight - Self.Height) * 0.5
                ZIndex: =1

            NoImage_LN_7 As label:
                Align: =Align.Center
                Color: =BlueControlDarkBackground
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =img_LN_7.Height
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Upper(Left(ThisItem.Title, 2))
                Tooltip: =ThisItem.Title
                Visible: |-
                    =If(
                        IsBlankOrError(ThisItem.PID), //It means this is not a scorecard tab and should always have a logo.
                        false, 
                        If(
                            IsBlankOrError(LookUp(ReviewHub_Products, ThisRecord.ProductID = ThisItem.PID).LogoImage), //When on scorecard tab, the product logo is missing, 
                            true,
                            false
                        )
                    )
                Width: =img_LN_7.Width
                X: =rect_LN_7.X + rect_LN_7.Width
                ZIndex: =2

            img_LN_7 As image:
                AutoDisableOnSelect: =false
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Height: =Self.Width
                Image: |-
                    =If(
                        NoImage_LN_7.Visible,
                        Blank(),
                        If(IsBlankOrError(ThisItem.PID), 
                        ThisItem.ImagePath , LookUp(ReviewHub_Products, ThisRecord.ProductID = ThisItem.PID).LogoImage.Value)
                    )
                OnSelect: =Select(Parent)
                PaddingBottom: =If(IsBlank(ThisItem.BoardTypeID), 3, 9)
                PaddingLeft: =If(IsBlank(ThisItem.BoardTypeID), 3, 8)
                PaddingRight: =If(IsBlank(ThisItem.BoardTypeID), 3, 8)
                PaddingTop: =If(IsBlank(ThisItem.BoardTypeID), 3, 9)
                Tooltip: =ThisItem.Title
                Width: =Parent.TemplateHeight
                X: =rect_LN_7.X + rect_LN_7.Width
                ZIndex: =3

            html_LN_7 As htmlViewer:
                Color: =RGBA(255, 255, 255, 1)
                DisplayMode: =DisplayMode.View
                Fill: =RGBA(0, 0, 0, 0)
                Font: =FontStyle
                Height: =45
                HtmlText: |-
                    ="<span style='background-color: " 
                    & If(
                        Parent.Width = var_LeftNavi_ExpandWidth, 
                        "#79b5de; color: #FFFFFF;  display: inline-block; padding: 1px 6px; font-weight: ", 
                        "rgba(121, 181, 222, 0.75); color: #FFFFFF;  display: inline-block; padding: 1px 3px; font-weight: "
                    ) 
                    & If(ThisItem.ID = varSelectedBoardId, "600", "400") & "; border-radius: 5px;'>"
                    & If(
                        Parent.Width = var_LeftNavi_ExpandWidth, 
                        LookUp(clln_BoardTypes, ThisRecord.bt_BoardTypeID = ThisItem.BoardTypeID).bt_BoardTypeShortName,
                        Upper(Left(LookUp(clln_BoardTypes, ThisRecord.bt_BoardTypeID = ThisItem.BoardTypeID).bt_BoardTypeShortName,2))
                    )
                    & "</span></font>"
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =Title_LN_7.PaddingLeft
                PaddingRight: =Title_LN_7.PaddingRight
                PaddingTop: =If(Parent.Width = var_LeftNavi_ExpandWidth, 6, 0)
                Size: =Title_LN_7.Size
                Visible: =If(IsBlank(ThisItem.BoardTypeID), false, true)
                Width: =If(Parent.Width = var_LeftNavi_ExpandWidth, Title_LN_7.Width, img_LN_7.Width)
                X: =If(Parent.Width = var_LeftNavi_ExpandWidth, Title_LN_7.X, img_LN_7.X)
                ZIndex: =4

            Title_LN_7 As label:
                BorderColor: =RGBA(32, 54, 71, 1)
                BorderStyle: =BorderStyle.None
                Color: =RGBA(255, 255, 255, 1)
                DisplayMode: =DisplayMode.View
                FocusedBorderColor: =Title_LN_7.BorderColor
                Font: =FontStyle
                FontWeight: =If(ThisItem.ID = varSelectedBoardId, FontWeight.Semibold, FontWeight.Normal)
                Height: =Parent.TemplateHeight
                HoverBorderColor: =Title_LN_7.BorderColor
                HoverColor: =Title_LN_7.Color
                HoverFill: =Title_LN_7.Fill
                LineHeight: =1
                OnSelect: =Select(Parent)
                PaddingBottom: =If(IsBlank(ThisItem.BoardTypeID), 0, 5)
                PaddingLeft: =2
                PaddingTop: =0
                PressedBorderColor: =Title_LN_7.BorderColor
                PressedColor: =Title_LN_7.Color
                PressedFill: =Title_LN_7.Fill
                Size: =9
                Text: =ThisItem.Title
                Tooltip: =ThisItem.Title
                VerticalAlign: =If(IsBlank(ThisItem.BoardTypeID), VerticalAlign.Middle, VerticalAlign.Bottom)
                Width: =Parent.Width - Self.X
                Wrap: =false
                X: =img_LN_7.X + img_LN_7.Width
                ZIndex: =5

            TopDivider_LN_7 As rectangle:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                DisplayMode: =DisplayMode.View
                Fill: =RGBA(0, 91, 159, 0.30)
                Height: =1
                OnSelect: =Select(Parent)
                Width: =Parent.Width
                ZIndex: =6

            rect_LN_7 As rectangle:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                Fill: =If(ThisItem.ID = varSelectedBoardId, BlueNaviHightLightBackground, TABLEHEADERCOLOR)
                FocusedBorderColor: =rect_LN_7.BorderColor
                Height: =Parent.TemplateHeight - Self.Y
                HoverFill: =rect_LN_7.Fill
                OnSelect: =Select(Parent)
                Tooltip: =
                Width: =6
                Y: =1
                ZIndex: =7

            btn_LN_Top_7 As button:
                AutoDisableOnSelect: =false
                BorderColor: =
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =RGBA(0, 0, 0, 0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Fill: =RGBA(0, 0, 0, 0)
                Font: =FontStyle
                Height: =Parent.TemplateHeight
                HoverBorderColor: =
                HoverColor: =RGBA(0, 0, 0, 0)
                HoverFill: =
                OnSelect: =Select(Parent)
                PressedBorderColor: =
                PressedColor: =
                Text: =//Need this button for the hover-over hand cursor.
                Tooltip: |
                    =If(
                        IsBlankOrError(ThisItem.BoardTypeID),
                        ThisItem.Title,
                        Text(ThisItem.ReviewDate, "mmmm yyyy") &
                            " - (" & LookUp(clln_BoardTypes, ThisRecord.bt_BoardTypeID = ThisItem.BoardTypeID).bt_BoardTypeShortName & ") " 
                            & ThisItem.Title
                    )
                Width: =Parent.TemplateWidth
                ZIndex: =8

            close_LN_7 As icon.CancelBadge:
                AutoDisableOnSelect: =false
                BorderStyle: =BorderStyle.None
                Color: =RGBA(255, 255, 255, 1)
                Height: =25
                HoverColor: =RedFontColor
                HoverFill: =BlueNaviHightLightBackground
                Icon: =Icon.Cancel
                OnSelect: |-
                    =If(
                        App.ActiveScreen.Name = "BoardScreen" && ThisItem.ID = varSelectedBoardId, //When user is currently staying on this Board Screen, navigate to Home Screen.
                        Navigate(HomeScreen)
                    );
                    
                    RemoveIf(varLeftNavOptions, ThisRecord.ID = ThisItem.ID)
                    /*
                    Concurrent(
                        RemoveIf(varLeftNavOptions, ThisRecord.ID = ThisItem.ID),
                        RemoveIf(clln_ProductMetrics_BS, ThisRecord.pm_ProductID = ThisItem.PID),
                        RemoveIf(clln_factMetrics_BS, ThisRecord.fm_ProductID = ThisItem.PID)
                    );
                    */
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Tooltip: ="Close this tab"
                Visible: =!IsBlankOrError(ThisItem.BoardTypeID) && Parent.Width = var_LeftNavi_ExpandWidth //When collapsed, not showing close button.
                Width: =25
                X: =Title_LN_7.X + Title_LN_7.Width - Self.Width
                ZIndex: =9

        icon_CollapseExpand_7 As icon.Add:
            BorderColor: =RGBA(32, 54, 71, 1)
            Color: =RGBA(255, 255, 255, 1)
            DisabledFill: =icon_CollapseExpand_7.Fill
            FocusedBorderColor: =icon_CollapseExpand_7.BorderColor
            Height: |
                =45
            HoverBorderColor: =ColorFade(icon_CollapseExpand_7.BorderColor, 20%)
            HoverColor: =ColorFade(icon_CollapseExpand_7.Color, 20%)
            HoverFill: =icon_CollapseExpand_7.Fill
            Icon: =If(Parent.Width = var_LeftNavi_ExpandWidth, Icon.DockLeft, Icon.DockRight)
            OnSelect: =Set(var_LeftNavi_Width, If(Parent.Width = var_LeftNavi_CollapseWidth, var_LeftNavi_ExpandWidth, var_LeftNavi_CollapseWidth))
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icon_CollapseExpand_7.BorderColor, -20%)
            PressedColor: =ColorFade(icon_CollapseExpand_7.Color, -20%)
            PressedFill: =icon_CollapseExpand_7.Fill
            Tooltip: ="Collapse/Expand"
            Width: =var_LeftNavi_CollapseWidth
            X: =Parent.Width - Self.Width
            ZIndex: =2

    TrackRequestComponent_BS As TrackRequestComponent:
        BlueControlDarkBackground: =BlueControlDarkBackground
        BlueControlLightBackground: =BlueControlLightBackground
        BlueNaviHightLightBackground: =BlueNaviHightLightBackground
        DevOpsBaseUrl: =var_DevOpsBaseURL
        DevOpsQueryID: =var_DevOpsQueryID
        FontStyle: =FontStyle
        GrayCanvasBackground: =GrayCanvasBackground
        GRAYCOLOR: =GRAYCOLOR
        GrayControlBackground: =GrayControlBackground
        IsAdmin: =IsAdmin
        Reset: =Self.Visible
        Visible: =BAGIAAppHeader_BS.DisplayTrackRequest
        X: =App.Width - Self.Width
        Y: =BAGIAAppHeader_BS.Height
        ZIndex: =19

    BoardSrn_SmileyFaceRubric As group:
        Height: =5
        Width: =5
        X: =80
        Y: =80
        ZIndex: =19

        SmileyFace_Rubric_BoardSrn As SmileyFace_Rubric:
            Height: =348
            TotalEarnedWgt: =Sum(Filter(clln_MetricWeight, DefaultWeight <> "NA"), Value(EarnedWeight))
            TotalWeight: =Sum(Filter(clln_MetricWeight, DefaultWeight <> "NA"), Value(DefaultWeight))
            Visible: =var_Display_SmileyFaceContainer
            X: =App.Width - Self.Width - 35
            Y: =Label_BS_HealthRating.Y + Label_BS_HealthRating.Height + BAGIAAppHeader_BS.Height + 5
            ZIndex: =24

        Icon_CloseSmileyFaceRubric As icon.CancelBadge:
            Color: =RGBA(0, 0, 0, 1)
            Height: =bttn_BoardSrn_HScore_Refresh.Height
            HoverColor: =BlueControlDarkBackground
            Icon: =Icon.Cancel
            OnSelect: =Set(var_Display_SmileyFaceContainer, false)
            PaddingBottom: =6
            PaddingLeft: =6
            PaddingRight: =6
            PaddingTop: =6
            PressedColor: =Color.Purple
            Tooltip: ="Close"
            Visible: =var_Display_SmileyFaceContainer
            Width: =Self.Height
            X: =SmileyFace_Rubric_BoardSrn.X+SmileyFace_Rubric_BoardSrn.Width - 38
            Y: =SmileyFace_Rubric_BoardSrn.Y + 5
            ZIndex: =25

        bttn_BoardSrn_HScore_Refresh As icon.Reload:
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: |-
                =If(
                    IsAdmin || IsReviewOwner || IsStakeholder || (IsCoordinator && var_BoardTypeSelected_Home in IsCoordinator_BoardTypes), 
                    DisplayMode.Edit, 
                    DisplayMode.Disabled
                )
            FocusedBorderThickness: =5
            Height: =33
            HoverColor: =BlueControlDarkBackground
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Sync
            OnSelect: |-
                =ClearCollect(
                    clln_MetricWeight,
                    {
                        MetricID: Blank(),
                        EarnedWeight: Blank(),
                        DefaultWeight: Blank()
                    }
                );
                
                //Pattern: {MetricID|EarnedWeight|DefaultWeight}.
                ForAll(
                    glry_BoardSrn_Group.AllItems.glry_BoardSrn_Subgroup,
                    ForAll(
                        ThisRecord.glry_BoardSrn_Subgroup.AllItems.MetricWgt,
                        Collect(
                            clln_MetricWeight,//clln_MetricWeight,
                            {
                                MetricID: First(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value})).Result,
                                EarnedWeight: Last(FirstN(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value}), 2)).Result,
                                DefaultWeight: Last(ForAll(Split(ThisRecord.MetricWgt.Text,"|"), {Result: ThisRecord.Value})).Result
                            }
                        )
                    )
                );
                
                Set(
                    var_FactMetricBoard_HealthScore,
                    If(
                        Sum(Filter(clln_MetricWeight, DefaultWeight <> "NA"), Value(DefaultWeight)) = 0 
                            || IsBlankOrError(Sum(Filter(clln_MetricWeight, DefaultWeight <> "NA"), Value(DefaultWeight))),
                        0,
                        Sum(Filter(clln_MetricWeight, DefaultWeight <> "NA"), Value(EarnedWeight)) / Sum(Filter(clln_MetricWeight, DefaultWeight <> "NA"), Value(DefaultWeight))
                    )
                );
                
                Set(row_BoardHealth, LookUp(clln_MetricBoardHealth, (IsBlankOrError(var_FactMetricBoard_HealthScore) && MinScore<=-999) || (!IsBlankOrError(var_FactMetricBoard_HealthScore) && (var_FactMetricBoard_HealthScore>=MinScore && var_FactMetricBoard_HealthScore<MaxScore))));
                
                //Update the Data Source only when the result has changed. 
                If(
                    Round(LookUp(ReviewHub_FactMetricBoards, craf2_factmetricboardid=var_BoardSrn_FMB_ID).craf2_fmb_healthscore,4)  <> Round(var_FactMetricBoard_HealthScore,4),
                    Concurrent(
                        Patch(
                            ReviewHub_FactMetricBoards,
                            LookUp(ReviewHub_FactMetricBoards, craf2_factmetricboardid=var_BoardSrn_FMB_ID),
                            {craf2_fmb_healthscore: var_FactMetricBoard_HealthScore}
                        ),
                        Patch(
                            clln_factMetricBoard,
                            LookUp(clln_factMetricBoard, fmb_ID=var_BoardSrn_FMB_ID),
                            {
                                fmb_HealthScore: var_FactMetricBoard_HealthScore,
                                fmb_BoardHealthRating: row_BoardHealth.Rating,
                                fmb_BoardHealthImage: row_BoardHealth.Image,
                                fmb_BoardHealthDisplayOrder: row_BoardHealth.DisplayOrder
                            }
                        )
                    )
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =8
            PaddingTop: =8
            PressedColor: =Color.Purple
            Rotation: =270
            Tooltip: ="Refresh the health score"
            Visible: =var_Display_SmileyFaceContainer
            Width: =33
            X: =Icon_CloseSmileyFaceRubric.X - Self.Width - 15
            Y: =Icon_CloseSmileyFaceRubric.Y
            ZIndex: =26

    BAGIAAppHeader_BS As AppHeader:
        DropDownSelection: =TrackRequestComponent_BS.HideTrackRequest
        FeatureRequestUrl: =var_FeatureRequestURL
        FeedbackButtonUrl: =var_SendFeedback_URL
        inputAppDisplayName: =varAppHeaderText
        Reset: =SurveyComponent_BS.HideSurvey
        ScorecardOnboardingFeatureUrl: =var_ScorecardOnboardingRequestURL
        Y: =0
        ZIndex: =20

    Label_UserRole_BoardScreen As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Color: =RGBA(255, 255, 255, 1)
        Font: =FontStyle
        Size: =10
        Text: |-
            =If(
                !IsBlankOrError(Text(UserRole)),
                Text(UserRole),
                If(
                    IsCoordinator,
                    "Coordinator",
                    Blank()
                )
            )
        Width: =126
        X: =App.Width - 567
        ZIndex: =21

    btn_RequestEditAccess_BS As button:
        AutoDisableOnSelect: =false
        BorderColor: =Self.Fill
        BorderStyle: =BorderStyle.None
        BorderThickness: =0
        Color: =BlueControlDarkBackground
        Fill: =RGBA(255, 255, 255, 1)
        Font: =FontStyle
        FontWeight: =FontWeight.Bold
        Height: =25
        HoverFill: =Self.Color
        OnSelect: |-
            =If(
                Toggle_BS_RequestEditAccess = true,
                Set(Toggle_BS_RequestEditAccess, false),
                Set(Toggle_BS_RequestEditAccess, true)
            )
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        RadiusBottomLeft: =15
        RadiusBottomRight: =15
        RadiusTopLeft: =15
        RadiusTopRight: =15
        Size: =10
        Text: ="Request Edit Access"
        Visible: =true 
        Width: =150
        X: =Label_UserRole_BoardScreen.X - Self.Width - 15
        Y: =Label_UserRole_BoardScreen.Y + 8
        ZIndex: =22

    dpdn_Scorecard_BS As dropdown:
        BorderColor: =
        BorderStyle: =BorderStyle.None
        BorderThickness: =0
        ChevronBackground: =Self.Fill
        ChevronHoverBackground: =BlueControlLightBackground
        ChevronHoverFill: =RGBA(0, 0, 0, 1)
        Color: =RGBA(255, 255, 255, 1)
        Default: =LookUp(clln_BoardTypes, ThisRecord.bt_BoardTypeID = var_BoardTypeSelected_Home).bt_BoardTypeShortName
        Fill: =RGBA(0, 0, 0, 1)
        Font: =FontStyle
        FontWeight: =FontWeight.Bold
        Height: =25
        HoverFill: =Self.ChevronHoverBackground
        Items: |-
            =RenameColumns(
                ShowColumns(
                    Filter(
                        clln_factMetricBoard,
                        ThisRecord.fmb_ProductID = var_BoardSrn_ProductID 
                            && ThisRecord.fmb_ReviewMonth = dpdn_BS_ReviewMonth.Selected.fmb_ReviewMonth 
                            && ThisRecord.fmb_ReviewYear = dpdn_BS_ReviewMonth.Selected.fmb_ReviewYear
                    ),
                    "fmb_MetricBoardTypeID",
                    "fmb_MetricBoardTypeValue",
                    "fmb_ID",
                    "fmb_TemplateID"
                ),
                "fmb_MetricBoardTypeID",
                "BoardTypeID",
                "fmb_MetricBoardTypeValue",
                "BoardTypeShortName"
            )
        OnChange: |-
            =Set(var_ctn_IfGalleryLoaded_ForceOn, true); //This variable will be set to false within Timer_Capture_factMetricBoard_ID.
            
            Concurrent(
                Set(var_LastGalleryText, Blank()),
                Set(var_Display_SmileyFaceContainer, false),
                Set(var_Display_ExecSummaryContainer, false),
                Select(Close_BS_MetricContainer),
                Set(var_TargetIsYearly_BS, Self.Selected.BoardTypeID = 5),
                Set(var_ShowQuarters_BS, Self.Selected.BoardTypeID = 5),
            
                Patch(
                    varLeftNavOptions,
                    LookUp(varLeftNavOptions, ThisRecord.PID = var_BoardSrn_ProductID),
                    {
                        BoardTypeID: Self.Selected.BoardTypeID,
                        TemplateID: Self.Selected.fmb_TemplateID
                    }
                );
            );
            
            Set(StartTimer_Capture_factMetricBoard_ID, true); //Start the timer - Timer_Capture_factMetricBoard_ID
        OnSelect: =
        PaddingBottom: =8
        PaddingRight: =5
        PaddingTop: =8
        PressedColor: =BlueControlDarkBackground
        PressedFill: =BlueControlLightBackground
        SelectionFill: =BlueNaviHightLightBackground
        Size: =11
        Width: =180
        X: =App.Width * 0.5 - Self.Width*0.5
        Y: =(BAGIAAppHeader_BS.Height - Self.Height) * 0.50
        ZIndex: =23

    ctn_RequestAccess_BS As groupContainer.manualLayoutContainer:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        Height: =130//175
        Visible: =Toggle_BS_RequestEditAccess
        Width: =305
        X: =btn_RequestEditAccess_BS.X - 80
        Y: =btn_RequestEditAccess_BS.Y + btn_RequestEditAccess_BS.Height+ 10
        ZIndex: =27

        Back_RALower_BS As button:
            BorderColor: =Back_RATopBanner_BS.Fill
            DisabledBorderColor: =Self.BorderColor
            DisabledColor: =Self.Color
            DisabledFill: =RGBA(255, 255, 255, 1)
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(0, 0, 0, 0)
            Font: =Font.'Segoe UI'
            Height: =Parent.Height - Self.Y - 1
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            RadiusBottomLeft: |
                =20
            RadiusBottomRight: =20
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: =""
            Width: =Parent.Width - 2
            X: =1
            Y: =Back_RATopBanner_BS.Y + Back_RATopBanner_BS.Height - 1
            ZIndex: =1

        Back_RATopBanner_BS As button:
            Color: =RGBA(0, 0, 0, 0)
            DisplayMode: =DisplayMode.View
            Fill: =RGBA(215,226,248,1)
            Font: =Font.'Segoe UI'
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =10
            Text: =""
            Width: =Parent.Width
            ZIndex: =2

        html_RAHeader_BS As htmlViewer:
            Font: =FontStyle
            HtmlText: |-
                ="<b>Request Edit Access</sup>:</b> "
            PaddingBottom: =0
            PaddingLeft: =20
            PaddingRight: =0
            PaddingTop: =10
            Size: =12
            Width: =Parent.Width
            ZIndex: =3

        btn_RA_BS As button:
            BorderColor: =Self.Fill
            Fill: =RGBA(0, 114, 198, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =30
            HoverColor: =Self.Fill
            HoverFill: =Self.Color
            OnSelect: =Navigate(scn_AC_GetAccess, ScreenTransition.Fade)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =10
            Text: ="Request Edit Access"
            Visible: =true 
            X: =lbl_RAStepTwo_BS.X + lbl_RAStepTwo_BS.Width
            Y: =lbl_RAStepTwo_BS.Y
            ZIndex: =4

        btn_ViewAccess_BS As button:
            BorderColor: =Self.Fill
            DisplayMode: =If(ctn_IfGalleryLoaded.Visible, DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(0, 114, 198, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =30
            HoverColor: =Self.Fill
            HoverFill: =Self.Color
            OnSelect: =Set(var_UserViewMyAccess_BS, true)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            RadiusBottomLeft: =20
            RadiusBottomRight: =20
            RadiusTopLeft: =20
            RadiusTopRight: =20
            Size: =10
            Text: ="View My Access"
            Visible: =true 
            Width: =140
            X: =lbl_RAStepOne_BS.X + lbl_RAStepOne_BS.Width
            Y: =lbl_RAStepOne_BS.Y
            ZIndex: =5

        lbl_RAStepThree_BS As label:
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingTop: =0
            Size: =10
            Text: |-
                ="Step 3:   Ask any listed stakeholders to add you as a stakeholder for a product."
            Visible: =false
            Width: =Parent.Width - Self.X
            X: =lbl_RAStepTwo_BS.X
            Y: |
                =lbl_RAStepTwo_BS.Y + lbl_RAStepTwo_BS.Height + 5
            ZIndex: =6

        lbl_RAStepTwo_BS As label:
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =10
            Text: |-
                ="Step 2:"
            Width: =65
            X: =lbl_RAStepOne_BS.X
            Y: |
                =lbl_RAStepOne_BS.Y + lbl_RAStepOne_BS.Height + 10
            ZIndex: =7

        lbl_RAStepOne_BS As label:
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =10
            Text: |-
                ="Step 1:"
            Width: =65
            X: =20
            Y: =Back_RALower_BS.Y + 10
            ZIndex: =8

        Icon_CloseRequestAccess_BS As icon.CancelBadge:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 1)
            Height: |
                =40
            HoverColor: =BlueControlDarkBackground
            Icon: =Icon.Cancel
            OnSelect: =Set(Toggle_BS_RequestEditAccess, false);
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =8
            PaddingTop: =8
            Tooltip: ="Close"
            Width: |
                =45
            X: =Parent.Width - Self.Width
            ZIndex: =9

    SurveyComponent_BS As SurveyComponent:
        Reset: =BAGIAAppHeader_BS.ShowSurvey
        Survey: =var_ReviewHubSurvey
        Visible: =BAGIAAppHeader_BS.ShowSurvey
        Y: =BAGIAAppHeader_BS.Height
        ZIndex: =28

